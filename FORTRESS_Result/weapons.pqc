
void () player_run;

void () TeamFortress_DisplayDetectionItems;
float (vector veca, vector vecb) crossproduct;

void (vector org, float damage) SpawnBlood;

void (entity rhook) Reset_Grapple;

void () SuperDamageSound;

void () ConcussionGrenadeTimer;

void () OldConcussionGrenadeTimer;

void () W_PrintWeaponMessage;

void () button_touch;

void () button_fire;

void (entity pl, float fr) TF_AddFrags;

void () DropGoalItems;

void () TeamFortress_DisplayLegalClasses;

void () TeamFortress_Inventory;

void () TeamFortress_SaveMe;

void () TeamFortress_ID;

void () TeamFortress_ShowTF;

void () TeamFortress_SniperWeapon;

void () TeamFortress_AssaultWeapon;

void () TeamFortress_IncendiaryCannon;

void () TeamFortress_FlameThrower;

void () TeamFortress_PrimeGrenade;

void () TeamFortress_ThrowGrenade;

void () TeamFortress_Discard;

void () TeamFortress_DetonatePipebombs;

void () PipebombTouch;

void () TeamFortress_DetpackStop;

void () SniperSight_Create;

void (float zoom_level) TF_zoom;

void () TeamFortress_ReloadCurrentWeapon;

void () TeamFortress_AutoZoomToggle;

void () TeamFortress_StatusQuery;

void () TeamFortress_SpyGoUndercover;

void () TeamFortress_EngineerBuild;

void () DropKey;

void () UseSpecialSkill;

void () RemoveFlare;

void (float scanrange) TeamFortress_Scan;

void (float timer) TeamFortress_SetDetpack;

void (float all) TeamFortress_TeamShowScores;

void (entity Player) TeamFortress_TeamShowMemberClasses;

void () Admin_CountPlayers;

void () Admin_CycleKick;

void () Admin_DoKick;

void () Admin_CeaseFire;

void () CamLock;

void () CamDistLock;

void () CamVecLock;

void () CamAngleLock;

void () CamRevAngleLock;

void () CamProjectileLock;

void () CamProjectileZoom;

void () CamProjectileLockOn;

void () CamProjectileLockOff;

void () CamOffset;

void () CamDrop;

void () fadetoblack;

void () fadefromblack;

void () fadetowhite;

void () fadefromwhite;

void (entity disp) Engineer_UseDispenser;

void (entity gun) Engineer_UseSentryGun;

void (entity mortar) Engineer_UseMortar;

void () TeamFortress_MOTD;

void () TeamFortress_HelpMap;

void (float res) StatusRes;

void () BioInfection_Decay;

void () BioInfection_MonsterDecay;

void () W_FireFlame;

void () W_FireIncendiaryCannon;

void () W_FireTranq;

void () W_FireLaser;

void () HallucinationTimer;

void () TranquiliserTimer;

void () TeamFortress_CTF_FlagInfo;

void () TF_MovePlayer;

void () W_Precache = {

   precache_sound ("weapons/r_exp3.wav");
   precache_sound ("weapons/rocket1i.wav");
   precache_sound ("weapons/sgun1.wav");
   precache_sound ("weapons/guncock.wav");
   precache_sound ("weapons/ric1.wav");
   precache_sound ("weapons/ric2.wav");
   precache_sound ("weapons/ric3.wav");
   precache_sound ("weapons/spike2.wav");
   precache_sound ("weapons/tink1.wav");
   precache_sound ("weapons/grenade.wav");
   precache_sound ("weapons/bounce.wav");
   precache_sound ("weapons/shotgn2.wav");
   precache_sound ("wizard/wattack.wav");
   precache_sound ("items/r_item1.wav");
   precache_sound ("items/r_item2.wav");
   precache_model ("progs/flame2.mdl");
   precache_sound ("ambience/fire1.wav");
   precache_sound2 ("blob/land1.wav");
   precache_model2 ("progs/v_spike.mdl");
   precache_sound ("hknight/hit.wav");
   precache_sound ("weapons/detpack.wav");
   precache_sound ("weapons/turrset.wav");
   precache_sound ("weapons/turrspot.wav");
   precache_sound ("weapons/turridle.wav");
   precache_sound ("weapons/sniper.wav");
   precache_sound ("weapons/flmfire2.wav");
   precache_sound ("weapons/flmgrexp.wav");
   precache_sound ("misc/vapeur2.wav");
   precache_sound ("weapons/asscan1.wav");
   precache_sound ("weapons/asscan2.wav");
   precache_sound ("weapons/asscan3.wav");
   precache_sound ("weapons/asscan4.wav");
   precache_sound ("weapons/railgun.wav");
   precache_sound ("weapons/dartgun.wav");

};
float /* Warning: Could not determine return type */ () crandom = {

   return ( (2.000 * (random () - 0.500)) );

};

void (float att_delay) Attack_Finished = {

   if ( (self.tfstate & 32768.000) ) {

      self.attack_finished = (time + (att_delay * 2.000));

   } else {

      self.attack_finished = (time + att_delay);

   }

};

void () W_FireAxe = {

   local vector source;
   local vector org;
   local vector def;

   makevectors (self.v_angle);
   source = (self.origin + '0.000 0.000 16.000');
   traceline (source,(source + (v_forward * 64.000)),0.000,self);
   if ( (trace_fraction == 1.000) ) {

      return ;

   }
   org = (trace_endpos - (v_forward * 4.000));
   if ( trace_ent.takedamage ) {

      trace_ent.axhitme = 1.000;
      SpawnBlood (org,20.000);
      if ( ((self.playerclass != 8.000) || (trace_ent.classname != "player")) ) {

         deathmsg = 17.000;
         TF_T_Damage (trace_ent,self,self,20.000,2.000,0.000);

      } else {

         self.weaponmode = 1.000;
         self.weaponmodel = "progs/v_knife2.mdl";
         makevectors (trace_ent.v_angle);
         def = v_right;
         makevectors (self.v_angle);
         if ( (crossproduct (def,v_forward) > 0.000) ) {

            deathmsg = 22.000;
            TF_T_Damage (trace_ent,self,self,120.000,2.000,0.000);

         } else {

            deathmsg = 17.000;
            TF_T_Damage (trace_ent,self,self,40.000,2.000,0.000);

         }

      }

   } else {

      sound (self,1.000,"player/axhit2.wav",1.000,1.000);
      WriteByte (0.000,23.000);
      WriteByte (0.000,2.000);
      WriteCoord (0.000,org_x);
      WriteCoord (0.000,org_y);
      WriteCoord (0.000,org_z);

   }

};

void () W_FireSpanner = {

   local vector source;
   local vector org;
   local vector def;
   local float healam;
   local entity te;

   makevectors (self.v_angle);
   source = (self.origin + '0.000 0.000 16.000');
   traceline (source,(source + (v_forward * 64.000)),0.000,self);
   if ( (trace_fraction == 1.000) ) {

      return ;

   }
   org = (trace_endpos - (v_forward * 4.000));
   if ( (trace_ent.goal_activation & 8.000) ) {

      if ( Activated (trace_ent,self) ) {

         DoResults (trace_ent,self,1.000);
         if ( (trace_ent.classname == "func_button") ) {

            trace_ent.enemy = self;
            other = self;
            self = trace_ent;
            self.dont_do_triggerwork = 1.000;
            button_fire ();
            self = other;

         }

      } else {

         if ( (trace_ent.else_goal != 0.000) ) {

            te = Findgoal (trace_ent.else_goal);
            if ( te ) {

               AttemptToActivate (te,self,trace_ent);

            }

         } else {

            sound (self,1.000,"player/axhit2.wav",1.000,1.000);
            WriteByte (0.000,23.000);
            WriteByte (0.000,2.000);
            WriteCoord (0.000,org_x);
            WriteCoord (0.000,org_y);
            WriteCoord (0.000,org_z);

         }

      }
      return ;

   }
   if ( trace_ent.takedamage ) {

      if ( (trace_ent.classname == "building_dispenser") ) {

         Engineer_UseDispenser (trace_ent);
         return ;

      } else {

         if ( (trace_ent.classname == "building_sentrygun") ) {

            Engineer_UseSentryGun (trace_ent);
            return ;

         } else {

            if ( (trace_ent.classname == "building_sentrygun_base") ) {

               if ( trace_ent.oldenemy ) {

                  Engineer_UseSentryGun (trace_ent.oldenemy);

               }
               return ;

            } else {

               if ( (trace_ent.classname == "player") ) {

                  if ( ((((trace_ent.team_no == self.team_no) && (self.team_no != 0.000)) && teamplay) || coop) ) {

                     healam = 10.000;
                     if ( (self.ammo_cells < healam) ) {

                        healam = self.ammo_cells;

                     }
                     if ( (trace_ent.armortype == 0.000) ) {

                        return ;

                     }
                     if ( ((trace_ent.maxarmor - trace_ent.armorvalue) < (healam * 4.000)) ) {

                        healam = ceil (((trace_ent.maxarmor - trace_ent.armorvalue) / 4.000));

                     }
                     if ( (healam > 0.000) ) {

                        trace_ent.armorvalue = (trace_ent.armorvalue + (healam * 4.000));
                        if ( (trace_ent.armorvalue > trace_ent.maxarmor) ) {

                           trace_ent.armorvalue = trace_ent.maxarmor;

                        }
                        self.ammo_cells = (self.ammo_cells - healam);
                        sound (trace_ent,1.000,"items/r_item1.wav",1.000,1.000);
                        WriteByte (0.000,23.000);
                        WriteByte (0.000,2.000);
                        WriteCoord (0.000,org_x);
                        WriteCoord (0.000,org_y);
                        WriteCoord (0.000,org_z);
                        W_SetCurrentAmmo ();

                     }
                     return ;

                  }

               }
               trace_ent.axhitme = 1.000;
               SpawnBlood (org,20.000);
               deathmsg = 32.000;
               TF_T_Damage (trace_ent,self,self,20.000,2.000,0.000);

            }

         }

      }

   } else {

      sound (self,1.000,"player/axhit2.wav",1.000,1.000);
      WriteByte (0.000,23.000);
      WriteByte (0.000,2.000);
      WriteCoord (0.000,org_x);
      WriteCoord (0.000,org_y);
      WriteCoord (0.000,org_z);

   }

};

void () W_FireMedikit = {

   local vector source;
   local vector org;
   local float healam;
   local entity te;
   local entity BioInfection;

   source = (self.origin + '0.000 0.000 16.000');
   traceline (source,(source + (v_forward * 64.000)),0.000,self);
   if ( (trace_fraction == 1.000) ) {

      return ;

   }
   org = (trace_endpos - (v_forward * 4.000));
   if ( trace_ent.takedamage ) {

      if ( (trace_ent.classname == "player") ) {

         if ( (((trace_ent.team_no == self.team_no) && (self.team_no != 0.000)) || coop) ) {

            healam = 200.000;
            te = find (world,classname,"timer");
            while ( (((te.owner != trace_ent) || ((te.think != ConcussionGrenadeTimer) && (te.think != OldConcussionGrenadeTimer))) && (te != world)) ) {

               te = find (te,classname,"timer");

            }
            if ( (te != world) ) {

               if ( (old_grens == 1.000) ) {

                  stuffcmd (trace_ent,"v_idlescale 0\nfov 90\n");

               }
               SpawnBlood (org,20.000);
               bprint (1.000,self.netname);
               bprint (1.000," cured ");
               bprint (1.000,trace_ent.netname);
               bprint (1.000,"'s concussion\n");
               if ( (te.team_no != self.team_no) ) {

                  TF_AddFrags (self,1.000);

               }
               dremove (te);

            }
            if ( (trace_ent.tfstate & 16384.000) ) {

               te = find (world,classname,"timer");
               while ( (((te.owner != trace_ent) || (te.think != HallucinationTimer)) && (te != world)) ) {

                  te = find (te,classname,"timer");

               }
               if ( (te != world) ) {

                  trace_ent.tfstate = (trace_ent.tfstate - (trace_ent.tfstate & 16384.000));
                  SpawnBlood (org,20.000);
                  bprint (1.000,self.netname);
                  bprint (1.000," healed ");
                  bprint (1.000,trace_ent.netname);
                  bprint (1.000," of his hallucinations\n");
                  if ( (old_grens == 1.000) ) {

                     stuffcmd (trace_ent,"v_cshift; wait; bf\n");

                  }
                  if ( (te.team_no != self.team_no) ) {

                     TF_AddFrags (self,1.000);

                  }
                  dremove (te);

               } else {

                  dprint ("Warning: Error in Hallucination Timer logic.\n");

               }

            }
            if ( (trace_ent.tfstate & 32768.000) ) {

               te = find (world,classname,"timer");
               while ( (((te.owner != trace_ent) || (te.think != TranquiliserTimer)) && (te != world)) ) {

                  te = find (te,classname,"timer");

               }
               if ( (te != world) ) {

                  trace_ent.tfstate = (trace_ent.tfstate - (trace_ent.tfstate & 32768.000));
                  TeamFortress_SetSpeed (trace_ent);
                  SpawnBlood (org,20.000);
                  bprint (1.000,self.netname);
                  bprint (1.000," healed ");
                  bprint (1.000,trace_ent.netname);
                  bprint (1.000,"'s tranquilisation\n");
                  if ( (te.team_no != self.team_no) ) {

                     TF_AddFrags (self,1.000);

                  }
                  dremove (te);

               } else {

                  dprint ("Warning: Error in Tranquilisation Timer logic.\n");

               }

            }
            if ( (trace_ent.FlashTime > 0.000) ) {

               te = find (world,netname,"flashtimer");
               while ( (((te.owner != trace_ent) || (te.classname != "timer")) && (te != world)) ) {

                  te = find (te,netname,"flashtimer");

               }
               if ( (te != world) ) {

                  trace_ent.FlashTime = 0.000;
                  SpawnBlood (org,20.000);
                  bprint (1.000,self.netname);
                  bprint (1.000," cured ");
                  bprint (1.000,trace_ent.netname);
                  bprint (1.000,"'s blindness\n");
                  if ( (te.team_no != self.team_no) ) {

                     TF_AddFrags (self,1.000);

                  }
                  dremove (te);

               } else {

                  dprint ("Warning: Error in Flash Timer logic.\n");
                  trace_ent.FlashTime = 0.000;

               }

            }
            if ( (trace_ent.tfstate & 16.000) ) {

               healam = rint ((trace_ent.health / 2.000));
               trace_ent.tfstate = (trace_ent.tfstate - (trace_ent.tfstate & 16.000));
               deathmsg = 23.000;
               T_Damage (trace_ent,self,self,healam);
               SpawnBlood (org,30.000);
               if ( (self.classname == "player") ) {

                  bprint (1.000,self.netname);
                  bprint (1.000," cured ");
                  bprint (1.000,trace_ent.netname);
                  bprint (1.000,"'s infection\n");
                  if ( (trace_ent.infection_team_no != self.team_no) ) {

                     TF_AddFrags (self,1.000);

                  }

               }
               return ;

            }
            if ( (trace_ent.numflames > 0.000) ) {

               sound (trace_ent,1.000,"items/r_item1.wav",1.000,1.000);
               trace_ent.numflames = 0.000;
               if ( (self.classname == "player") ) {

                  bprint (1.000,self.netname);
                  bprint (1.000," put out ");
                  bprint (1.000,trace_ent.netname);
                  bprint (1.000,"'s fire.\n");

               }
               return ;

            }
            if ( ((healam > 0.000) && (trace_ent.health < trace_ent.max_health)) ) {

               sound (trace_ent,1.000,"items/r_item1.wav",1.000,1.000);
               trace_ent.axhitme = 1.000;
               SpawnBlood (org,20.000);
               T_Heal (trace_ent,healam,0.000);

            } else {

               if ( ((trace_ent.health >= trace_ent.max_health) && (trace_ent.health < (trace_ent.max_health + 50.000))) ) {

                  healam = 5.000;
                  if ( (healam > (self.ammo_medikit * 5.000)) ) {

                     healam = (self.ammo_medikit * 5.000);

                  }
                  if ( (healam > 0.000) ) {

                     sound (trace_ent,3.000,"items/r_item2.wav",1.000,1.000);
                     T_Heal (trace_ent,healam,1.000);
                     self.ammo_medikit = (self.ammo_medikit - rint ((healam / 5.000)));
                     if ( !(trace_ent.items & 65536.000) ) {

                        trace_ent.items = (trace_ent.items | 65536.000);
                        newmis = spawn ();
                        newmis.nextthink = (time + 5.000);
                        newmis.think = item_megahealth_rot;
                        newmis.owner = trace_ent;

                     }

                  }

               }

            }

         }

      }

   } else {

      sound (self,1.000,"player/axhit2.wav",1.000,1.000);
      WriteByte (0.000,23.000);
      WriteByte (0.000,2.000);
      WriteCoord (0.000,org_x);
      WriteCoord (0.000,org_y);
      WriteCoord (0.000,org_z);

   }

};

void () W_FireBioweapon = {

   local vector source;
   local vector org;
   local float healam;
   local entity BioInfection;

   source = (self.origin + '0.000 0.000 16.000');
   traceline (source,(source + (v_forward * 64.000)),0.000,self);
   if ( (trace_fraction == 1.000) ) {

      return ;

   }
   org = (trace_endpos - (v_forward * 4.000));
   if ( trace_ent.takedamage ) {

      if ( (trace_ent.classname == "player") ) {

         if ( ((((trace_ent.team_no != self.team_no) && (self.team_no != 0.000)) && teamplay) || (teamplay == 0.000)) ) {

            trace_ent.axhitme = 1.000;
            SpawnBlood (org,20.000);
            deathmsg = 14.000;
            T_Damage (trace_ent,self,self,10.000);
            if ( (trace_ent.playerclass == 5.000) ) {

               return ;

            }
            if ( (cb_prematch_time > time) ) {

               return ;

            }
            trace_ent.tfstate = (trace_ent.tfstate | 16.000);
            BioInfection = spawn ();
            BioInfection.classname = "timer";
            BioInfection.owner = trace_ent;
            BioInfection.nextthink = (time + 2.000);
            BioInfection.think = BioInfection_Decay;
            BioInfection.enemy = self;
            trace_ent.infection_team_no = self.team_no;

         }

      } else {

         if ( (trace_ent.flags & 32.000) ) {

            if ( (trace_ent.classname == "monster_zombie") ) {

               T_Damage (trace_ent,self,self,200.000);

            }
            trace_ent.axhitme = 1.000;
            SpawnBlood (org,20.000);
            T_Damage (trace_ent,self,self,10.000);
            BioInfection = spawn ();
            BioInfection.classname = "timer";
            BioInfection.nextthink = (time + 2.000);
            BioInfection.think = BioInfection_MonsterDecay;
            BioInfection.owner = self;
            BioInfection.enemy = trace_ent;

         } else {

            trace_ent.axhitme = 1.000;
            SpawnBlood (org,30.000);
            T_Damage (trace_ent,self,self,40.000);

         }

      }

   } else {

      sound (self,1.000,"player/axhit2.wav",1.000,1.000);
      WriteByte (0.000,23.000);
      WriteByte (0.000,2.000);
      WriteCoord (0.000,org_x);
      WriteCoord (0.000,org_y);
      WriteCoord (0.000,org_z);

   }

};
vector () wall_velocity = {

   local vector vel;

   vel = normalize (self.velocity);
   vel = normalize (((vel + (v_up * (random () - 0.500))) + (v_right * (random () - 0.500))));
   vel = (vel + (2.000 * trace_plane_normal));
   vel = (vel * 200.000);
   return ( vel );

};

void (vector org, vector vel) SpawnMeatSpray = {

   local entity missile;

   missile = spawn ();
   missile.owner = self;
   missile.movetype = 10.000;
   missile.solid = 0.000;
   makevectors (self.angles);
   missile.velocity = vel;
   missile.velocity_z = ((missile.velocity_z + 250.000) + (50.000 * random ()));
   missile.avelocity = '3000.000 1000.000 2000.000';
   missile.nextthink = (time + 1.000);
   missile.think = SUB_Remove;
   setmodel (missile,"progs/zom_gib.mdl");
   setsize (missile,'0.000 0.000 0.000','0.000 0.000 0.000');
   setorigin (missile,org);

};

void (vector org, float damage) SpawnBlood = {

   particle (org,'0.000 0.000 0.000',73.000,(damage * 2.000));

};

void (float damage) spawn_touchblood = {

   local vector vel;

   vel = (wall_velocity () * 0.200);
   SpawnBlood ((self.origin + (vel * 0.010)),damage);

};

void (vector org, vector vel) SpawnChunk = {

   particle (org,(vel * 0.020),0.000,10.000);

};
entity multi_ent;
float multi_damage /* = 0.000 */;

void () ClearMultiDamage = {

   multi_ent = world;
   multi_damage = 0.000;

};

void () ApplyMultiDamage = {

   if ( !multi_ent ) {

      return ;

   }
   TF_T_Damage (multi_ent,self,self,multi_damage,2.000,1.000);

};

void (entity hit, float damage) AddMultiDamage = {

   if ( !hit ) {

      return ;

   }
   if ( (hit != multi_ent) ) {

      ApplyMultiDamage ();
      multi_damage = damage;
      multi_ent = hit;

   } else {

      multi_damage = (multi_damage + damage);

   }

};

void (float damage, vector dir) TraceAttack = {

   local vector vel;
   local vector org;

   vel = normalize (((dir + (v_up * crandom ())) + (v_right * crandom ())));
   vel = (vel + (2.000 * trace_plane_normal));
   vel = (vel * 200.000);
   org = (trace_endpos - (dir * 4.000));
   if ( trace_ent.takedamage ) {

      SpawnBlood (org,damage);
      AddMultiDamage (trace_ent,damage);

   } else {

      WriteByte (0.000,23.000);
      WriteByte (0.000,2.000);
      WriteCoord (0.000,org_x);
      WriteCoord (0.000,org_y);
      WriteCoord (0.000,org_z);

   }

};

void (float shotcount, vector dir, vector spread) FireBullets = {

   local vector direction;
   local vector src;

   makevectors (self.v_angle);
   src = (self.origin + (v_forward * 10.000));
   src_z = (self.absmin_z + (self.size_z * 0.700));
   ClearMultiDamage ();
   while ( (shotcount > 0.000) ) {

      direction = ((dir + ((crandom () * spread_x) * v_right)) + ((crandom () * spread_y) * v_up));
      traceline (src,(src + (direction * 2048.000)),0.000,self);
      if ( (trace_fraction != 1.000) ) {

         if ( (self.weapon != 32768.000) ) {

            TraceAttack (4.000,direction);

         } else {

            TraceAttack (12.000,direction);

         }

      }
      shotcount = (shotcount - 1.000);

   }
   ApplyMultiDamage ();

};

void () W_FireShotgun = {

   local vector dir;

   sound (self,1.000,"weapons/guncock.wav",1.000,1.000);
   KickPlayer (-2.000,self);
   self.ammo_shells = (self.ammo_shells - 1.000);
   self.currentammo = (self.ammo_shells - 1.000);
   dir = aim (self,100000.000);
   deathmsg = 1.000;
   FireBullets (6.000,dir,'0.040 0.040 0.000');

};

void () W_FireSuperShotgun = {

   local vector dir;

   if ( (self.currentammo == 1.000) ) {

      W_FireShotgun ();
      return ;

   }
   sound (self,1.000,"weapons/shotgn2.wav",1.000,1.000);
   KickPlayer (-4.000,self);
   self.ammo_shells = (self.ammo_shells - 2.000);
   self.currentammo = (self.ammo_shells - 2.000);
   dir = aim (self,100000.000);
   deathmsg = 2.000;
   FireBullets (14.000,dir,'0.140 0.080 0.000');

};

void (vector direction, float damage) FireSniperBullet = {

   local vector src;

   makevectors (self.v_angle);
   src = (self.origin + (v_forward * 10.000));
   src_z = (self.absmin_z + (self.size_z * 0.700));
   ClearMultiDamage ();
   traceline (src,(src + (direction * 4096.000)),0.000,self);
   if ( (trace_fraction != 1.000) ) {

      TraceAttack (damage,direction);

   }
   ApplyMultiDamage ();

};

void () W_FireSniperRifle = {

   local vector dir;
   local vector src;
   local float dam_mult;
   local float zdif;
   local float use_this;
   /* Warning: No local name with offset 4775 */
   /* Warning: No local name with offset 4776 */
   /* Warning: No local name with offset 4777 */
   /* Warning: No local name with offset 4778 */
   /* Warning: No local name with offset 4779 */
   /* Warning: No local name with offset 4780 */
   /* Warning: No local name with offset 4781 */
   /* Warning: No local name with offset 4782 */
   /* Warning: No local name with offset 4783 */
   /* Warning: No local name with offset 4784 */
   /* Warning: No local name with offset 4785 */
   /* Warning: No local name with offset 4786 */
   /* Warning: No local name with offset 4787 */
   /* Warning: No local name with offset 4788 */
   /* Warning: No local name with offset 4789 */
   /* Warning: No local name with offset 4790 */
   /* Warning: No local name with offset 4791 */
   /* Warning: No local name with offset 4792 */
   /* Warning: No local name with offset 4793 */
   /* Warning: No local name with offset 4794 */
   local 8092.000;
   /* Warning: No local name with offset 4796 */
   /* Warning: No local name with offset 4797 */
   /* Warning: No local name with offset 4798 */
   /* Warning: No local name with offset 4799 */
   /* Warning: No local name with offset 4800 */
   /* Warning: No local name with offset 4801 */
   /* Warning: No local name with offset 4802 */
   /* Warning: No local name with offset 4803 */
   /* Warning: No local name with offset 4804 */
   /* Warning: No local name with offset 4805 */
   /* Warning: No local name with offset 4806 */
   local 10000.000;
   local 3072.000;
   /* Warning: No local name with offset 4809 */
   /* Warning: No local name with offset 4810 */
   /* Warning: No local name with offset 4811 */
   /* Warning: No local name with offset 4812 */
   /* Warning: No local name with offset 4813 */
   /* Warning: No local name with offset 4814 */
   /* Warning: No local name with offset 4815 */
   /* Warning: No local name with offset 4816 */
   local float x;
   local vector f;
   local vector g;
   local vector h;

   sound (self,1.000,"weapons/sniper.wav",1.000,1.000);
   KickPlayer (-2.000,self);
   self.ammo_shells = (self.ammo_shells - 1.000);
   self.currentammo = (self.ammo_shells - 1.000);
   makevectors (self.v_angle);
   src = (self.origin + (v_forward * 10.000));
   src_z = (self.absmin_z + (self.size_z * 0.700));
   use_this = 0.000;
   traceline (src,(src + (dir * 8092.000)),0.000,self);
   if ( (trace_fraction != 1.000) ) {

      if ( (trace_ent != world) ) {

         if ( (trace_ent.classname == "player") ) {

            use_this = 1.000;

         }

      }

   }
   KickPlayer (-4.000,self);
   if ( !use_this ) {

      dir = aim (self,10000.000);
      traceline (src,(src + (dir * 3072.000)),0.000,self);

   }
   deathmsg = 18.000;
   dam_mult = 1.000;
   if ( trace_ent ) {

      if ( (trace_ent.classname == "player") ) {

         f = (trace_endpos - src);
         g_x = trace_endpos_x;
         g_y = trace_endpos_y;
         g_z = 0.000;
         h_x = trace_ent.origin_x;
         h_y = trace_ent.origin_y;
         h_z = 0.000;
         x = vlen ((g - h));
         f = ((normalize (f) * x) + trace_endpos);
         zdif = (f_z - trace_ent.origin_z);
         deathmsg = 18.000;
         trace_ent.head_shot_vector = '0.000 0.000 0.000';
         if ( (zdif < 0.000) ) {

            dam_mult = 0.500;
            trace_ent.leg_damage = (trace_ent.leg_damage + 1.000);
            TeamFortress_SetSpeed (trace_ent);
            deathmsg = 28.000;
            TF_T_Damage (trace_ent,self,self,(self.heat * dam_mult),2.000,1.000);
            if ( (trace_ent.health > 0.000) ) {

               sprint (trace_ent,0.000,"Leg injury!\n");
               sprint (self,1.000,"Leg shot - that'll slow him down!\n");

            }
            return ;

         } else {

            if ( (zdif > 20.000) ) {

               dam_mult = 2.000;
               stuffcmd (trace_ent,"bf\n");
               trace_ent.head_shot_vector = (trace_ent.origin - self.origin);
               deathmsg = 29.000;
               TF_T_Damage (trace_ent,self,self,(self.heat * dam_mult),2.000,1.000);
               if ( (trace_ent.health > 0.000) ) {

                  sprint (trace_ent,0.000,"Head injury!\n");
                  sprint (self,1.000,"Head shot - that's gotta hurt!\n");

               }
               return ;

            } else {

               deathmsg = 18.000;

            }

         }

      }

   }
   ClearMultiDamage ();
   if ( (trace_fraction != 1.000) ) {

      TraceAttack ((self.heat * dam_mult),dir);

   }
   ApplyMultiDamage ();

};

void () W_FireAutoRifle = {

   local vector dir;

   sound (self,1.000,"weapons/sniper.wav",1.000,1.000);
   KickPlayer (-1.000,self);
   self.ammo_shells = (self.ammo_shells - 1.000);
   self.currentammo = (self.ammo_shells - 1.000);
   makevectors (self.v_angle);
   dir = v_forward;
   deathmsg = 19.000;
   FireSniperBullet (dir,8.000);

};

void () W_FireAssaultCannon = {

   local vector dir;

   KickPlayer (-4.000,self);
   self.ammo_shells = (self.ammo_shells - 1.000);
   self.currentammo = (self.ammo_shells - 1.000);
   dir = aim (self,100000.000);
   deathmsg = 20.000;
   FireBullets (5.000,dir,'0.040 0.040 0.000');

};

void () s_explode1 = [ 0.000, s_explode2 ] {


};

void () s_explode2 = [ 1.000, s_explode3 ] {


};

void () s_explode3 = [ 2.000, s_explode4 ] {


};

void () s_explode4 = [ 3.000, s_explode5 ] {


};

void () s_explode5 = [ 4.000, s_explode6 ] {


};

void () s_explode6 = [ 5.000, SUB_Remove ] {


};

void () BecomeExplosion = {

   self.movetype = 0.000;
   self.velocity = '0.000 0.000 0.000';
   self.touch = SUB_Null;
   setmodel (self,"progs/s_explod.spr");
   self.solid = 0.000;
   s_explode1 ();

};

void () T_MissileTouch = {

   local float damg;

   if ( self.voided ) {

      return ;

   }
   self.voided = 1.000;
   if ( (pointcontents (self.origin) == -6.000) ) {

      dremove (self);
      return ;

   }
   damg = (92.000 + (random () * 20.000));
   deathmsg = self.weapon;
   if ( other.health ) {

      TF_T_Damage (other,self,self.owner,damg,2.000,0.000);

   }
   if ( (self.owner.classname == "building_sentrygun") ) {

      T_RadiusDamage (self,self.owner,150.000,other);

   } else {

      T_RadiusDamage (self,self.owner,92.000,other);

   }
   self.origin = (self.origin - (8.000 * normalize (self.velocity)));
   WriteByte (0.000,23.000);
   WriteByte (0.000,3.000);
   WriteCoord (0.000,self.origin_x);
   WriteCoord (0.000,self.origin_y);
   WriteCoord (0.000,self.origin_z);
   BecomeExplosion ();

};

void () W_FireRocket = {

   self.ammo_rockets = (self.ammo_rockets - 1.000);
   self.currentammo = (self.ammo_rockets - 1.000);
   sound (self,1.000,"weapons/sgun1.wav",1.000,1.000);
   KickPlayer (-2.000,self);
   newmis = spawn ();
   newmis.owner = self;
   newmis.movetype = 9.000;
   newmis.solid = 2.000;
   makevectors (self.v_angle);
   newmis.velocity = v_forward;
   newmis.velocity = (newmis.velocity * 900.000);
   newmis.angles = vectoangles (newmis.velocity);
   newmis.touch = T_MissileTouch;
   newmis.voided = 0.000;
   newmis.nextthink = (time + 5.000);
   newmis.think = SUB_Remove;
   newmis.weapon = 6.000;
   setmodel (newmis,"progs/missile.mdl");
   setsize (newmis,'0.000 0.000 0.000','0.000 0.000 0.000');
   setorigin (newmis,((self.origin + (v_forward * 8.000)) + '0.000 0.000 16.000'));

};

void (vector p1, vector p2, entity from, float damage) LightningDamage = {

   local entity e1;
   local entity e2;
   local vector f;

   f = (p2 - p1);
   normalize (f);
   f_x = (0.000 - f_y);
   f_y = f_x;
   f_z = 0.000;
   f = (f * 16.000);
   e2 = world;
   e1 = world;
   traceline (p1,p2,0.000,self);
   if ( trace_ent.takedamage ) {

      particle (trace_endpos,'0.000 0.000 100.000',225.000,(damage * 4.000));
      TF_T_Damage (trace_ent,from,from,damage,2.000,8.000);
      if ( (self.classname == "player") ) {

         if ( (other.classname == "player") ) {

            trace_ent.velocity_z = (trace_ent.velocity_z + 400.000);

         }

      }

   }
   e1 = trace_ent;
   traceline ((p1 + f),(p2 + f),0.000,self);
   if ( ((trace_ent != e1) && trace_ent.takedamage) ) {

      particle (trace_endpos,'0.000 0.000 100.000',225.000,(damage * 4.000));
      TF_T_Damage (trace_ent,from,from,damage,2.000,8.000);

   }
   e2 = trace_ent;
   traceline ((p1 - f),(p2 - f),0.000,self);
   if ( (((trace_ent != e1) && (trace_ent != e2)) && trace_ent.takedamage) ) {

      particle (trace_endpos,'0.000 0.000 100.000',225.000,(damage * 4.000));
      TF_T_Damage (trace_ent,from,from,damage,2.000,8.000);

   }

};

void () W_FireLightning = {

   local vector org;
   local float cells;

   if ( (self.ammo_cells < 1.000) ) {

      self.last_weapon = self.current_weapon;
      self.last_weaponmode = self.weaponmode;
      self.current_weapon = W_BestWeapon ();
      W_SetCurrentAmmo ();
      W_PrintWeaponMessage ();
      return ;

   }
   if ( (self.waterlevel > 1.000) ) {

      cells = self.ammo_cells;
      self.ammo_cells = 0.000;
      W_SetCurrentAmmo ();
      deathmsg = 7.000;
      T_RadiusDamage (self,self,(35.000 * cells),world);
      return ;

   }
   if ( (self.t_width < time) ) {

      sound (self,1.000,"weapons/lhit.wav",1.000,1.000);
      self.t_width = (time + 0.600);

   }
   KickPlayer (-2.000,self);
   self.ammo_cells = (self.ammo_cells - 1.000);
   self.currentammo = (self.ammo_cells - 1.000);
   org = (self.origin + '0.000 0.000 16.000');
   traceline (org,(org + (v_forward * 600.000)),1.000,self);
   WriteByte (0.000,23.000);
   WriteByte (0.000,6.000);
   WriteEntity (0.000,self);
   WriteCoord (0.000,org_x);
   WriteCoord (0.000,org_y);
   WriteCoord (0.000,org_z);
   WriteCoord (0.000,trace_endpos_x);
   WriteCoord (0.000,trace_endpos_y);
   WriteCoord (0.000,trace_endpos_z);
   LightningDamage (self.origin,(trace_endpos + (v_forward * 4.000)),self,30.000);

};
float (float tno) num_team_pipebombs = {

   if ( (tno == 1.000) ) {

      return ( num_team_pipebombs_1 );

   } else {

      if ( (tno == 2.000) ) {

         return ( num_team_pipebombs_2 );

      } else {

         if ( (tno == 3.000) ) {

            return ( num_team_pipebombs_3 );

         } else {

            if ( (tno == 4.000) ) {

               return ( num_team_pipebombs_4 );

            }

         }

      }

   }
   return ( 0.000 );

};
float (float tno) num_team_flares = {

   if ( (tno == 1.000) ) {

      return ( num_team_flares_1 );

   } else {

      if ( (tno == 2.000) ) {

         return ( num_team_flares_2 );

      } else {

         if ( (tno == 3.000) ) {

            return ( num_team_flares_3 );

         } else {

            if ( (tno == 4.000) ) {

               return ( num_team_flares_4 );

            }

         }

      }

   }
   return ( 0.000 );

};

void (float tno) RemoveOldFlare = {

   local entity old;
   local float index;

   index = num_team_flares (tno);
   index = (index - (3.000 / number_of_teams));
   old = find (world,mdl,"flare");
   while ( (index > 0.000) ) {

      if ( (old == world) ) {

         num_world_flares = 0.000;
         num_team_flares_1 = 0.000;
         num_team_flares_2 = 0.000;
         num_team_flares_3 = 0.000;
         num_team_flares_4 = 0.000;
         return ;

      }
      if ( ((old.weapon == tno) || (tno == 0.000)) ) {

         old.think = RemoveFlare;
         old.nextthink = (time + 0.100);
         index = (index - 1.000);

      }
      old = find (old,mdl,"flare");

   }

};

void (float tno) ExplodeOldPipebomb = {

   local entity old;
   local float index;

   if ( (tno != 0.000) ) {

      index = num_team_pipebombs (tno);
      index = (index - (30.000 / number_of_teams));

   } else {

      index = (num_world_pipebombs - 30.000);

   }
   old = find (world,classname,"pipebomb");
   while ( (index > 0.000) ) {

      if ( (old == world) ) {

         num_world_pipebombs = 0.000;
         num_team_pipebombs_1 = 0.000;
         num_team_pipebombs_2 = 0.000;
         num_team_pipebombs_3 = 0.000;
         num_team_pipebombs_4 = 0.000;
         return ;

      }
      if ( ((old.owner.team_no == tno) || (tno == 0.000)) ) {

         old.nextthink = (time + 0.500);
         index = (index - 1.000);

      }
      old = find (old,classname,"pipebomb");

   }

};

void (float tno) increment_team_pipebombs = {

   if ( (tno == 1.000) ) {

      num_team_pipebombs_1 = (num_team_pipebombs_1 + 1.000);

   } else {

      if ( (tno == 2.000) ) {

         num_team_pipebombs_2 = (num_team_pipebombs_2 + 1.000);

      } else {

         if ( (tno == 3.000) ) {

            num_team_pipebombs_3 = (num_team_pipebombs_3 + 1.000);

         } else {

            if ( (tno == 4.000) ) {

               num_team_pipebombs_4 = (num_team_pipebombs_4 + 1.000);

            }

         }

      }

   }

};

void (float tno) increment_team_flares = {

   if ( (tno == 1.000) ) {

      num_team_flares_1 = (num_team_flares_1 + 1.000);

   } else {

      if ( (tno == 2.000) ) {

         num_team_flares_2 = (num_team_flares_2 + 1.000);

      } else {

         if ( (tno == 3.000) ) {

            num_team_flares_3 = (num_team_flares_3 + 1.000);

         } else {

            if ( (tno == 4.000) ) {

               num_team_flares_4 = (num_team_flares_4 + 1.000);

            }

         }

      }

   }

};

void (float tno) decrement_team_pipebombs = {

   if ( (tno == 1.000) ) {

      num_team_pipebombs_1 = (num_team_pipebombs_1 - 1.000);

   } else {

      if ( (tno == 2.000) ) {

         num_team_pipebombs_2 = (num_team_pipebombs_2 - 1.000);

      } else {

         if ( (tno == 3.000) ) {

            num_team_pipebombs_3 = (num_team_pipebombs_3 - 1.000);

         } else {

            if ( (tno == 4.000) ) {

               num_team_pipebombs_4 = (num_team_pipebombs_4 - 1.000);

            }

         }

      }

   }

};

void (float tno) decrement_team_flares = {

   if ( (tno == 1.000) ) {

      num_team_flares_1 = (num_team_flares_1 - 1.000);

   } else {

      if ( (tno == 2.000) ) {

         num_team_flares_2 = (num_team_flares_2 - 1.000);

      } else {

         if ( (tno == 3.000) ) {

            num_team_flares_3 = (num_team_flares_3 - 1.000);

         } else {

            if ( (tno == 4.000) ) {

               num_team_flares_4 = (num_team_flares_4 - 1.000);

            }

         }

      }

   }

};

void () GrenadeExplode = {

   local entity te;

   if ( self.voided ) {

      return ;

   }
   self.voided = 1.000;
   if ( (self.classname == "pipebomb") ) {

      num_world_pipebombs = (num_world_pipebombs - 1.000);
      decrement_team_pipebombs (self.team_no);
      if ( !(self.flags & 512.000) ) {

         self.weapon = 40.000;

      }

   }
   if ( (self.owner.has_disconnected != 1.000) ) {

      deathmsg = self.weapon;
      T_RadiusDamage (self,self.owner,120.000,world);

   }
   if ( (self.no_active_nail_grens != 0.000) ) {

      self.no_active_nail_grens = 0.000;
      self.owner.no_active_nail_grens = (self.owner.no_active_nail_grens - 1.000);
      te = find (world,classname,"grenade");
      while ( te ) {

         if ( ((te.owner == self.owner) && (te.no_active_nail_grens != 0.000)) ) {

            te.no_active_nail_grens = (te.no_active_nail_grens - 1.000);

         }
         te = find (te,classname,"grenade");

      }

   }
   WriteByte (0.000,23.000);
   WriteByte (0.000,3.000);
   WriteCoord (0.000,self.origin_x);
   WriteCoord (0.000,self.origin_y);
   WriteCoord (0.000,self.origin_z);
   BecomeExplosion ();

};

void () GrenadeTouch = {

   if ( (other == self.owner) ) {

      return ;

   }
   if ( (other.takedamage == 2.000) ) {

      GrenadeExplode ();
      return ;

   }
   sound (self,1.000,"weapons/bounce.wav",1.000,1.000);
   if ( (self.velocity == '0.000 0.000 0.000') ) {

      self.avelocity = '0.000 0.000 0.000';

   }

};

void () W_FireGrenade = {

   self.ammo_rockets = (self.ammo_rockets - 1.000);
   self.currentammo = (self.ammo_rockets - 1.000);
   sound (self,1.000,"weapons/grenade.wav",1.000,1.000);
   KickPlayer (-2.000,self);
   newmis = spawn ();
   newmis.voided = 0.000;
   newmis.owner = self;
   newmis.movetype = 10.000;
   newmis.solid = 2.000;
   if ( ((self.weaponmode == 0.000) || (cb_prematch_time > time)) ) {

      newmis.weapon = 5.000;
      newmis.classname = "grenade";
      newmis.skin = 1.000;
      newmis.touch = GrenadeTouch;
      newmis.nextthink = (time + 2.500);

   } else {

      if ( (self.team_no != 0.000) ) {

         increment_team_pipebombs (self.team_no);
         if ( (num_team_pipebombs (self.team_no) > (30.000 / number_of_teams)) ) {

            ExplodeOldPipebomb (self.team_no);

         }

      } else {

         num_world_pipebombs = (num_world_pipebombs + 1.000);
         if ( (num_world_pipebombs > 30.000) ) {

            ExplodeOldPipebomb (0.000);

         }

      }
      newmis.classname = "pipebomb";
      newmis.skin = 2.000;
      newmis.touch = PipebombTouch;
      newmis.nextthink = (time + 120.000);
      newmis.weapon = 11.000;
      newmis.team_no = self.team_no;

   }
   makevectors (self.v_angle);
   if ( self.v_angle_x ) {

      newmis.velocity = ((((v_forward * 600.000) + (v_up * 200.000)) + ((crandom () * v_right) * 10.000)) + ((crandom () * v_up) * 10.000));

   } else {

      newmis.velocity = aim (self,10000.000);
      newmis.velocity = (newmis.velocity * 600.000);
      newmis.velocity_z = 200.000;

   }
   newmis.avelocity = '300.000 300.000 300.000';
   newmis.angles = vectoangles (newmis.velocity);
   newmis.think = GrenadeExplode;
   setmodel (newmis,"progs/grenade2.mdl");
   setsize (newmis,'0.000 0.000 0.000','0.000 0.000 0.000');
   setorigin (newmis,self.origin);

};

void () spike_touch;

void () superspike_touch;

void (vector org, vector dir) launch_spike = {

   newmis = spawn ();
   newmis.voided = 0.000;
   newmis.owner = self;
   newmis.movetype = 9.000;
   newmis.solid = 2.000;
   newmis.angles = vectoangles (dir);
   newmis.touch = spike_touch;
   newmis.weapon = 3.000;
   newmis.classname = "spike";
   newmis.think = SUB_Remove;
   newmis.nextthink = (time + 6.000);
   setmodel (newmis,"progs/spike.mdl");
   setsize (newmis,'0.000 0.000 0.000','0.000 0.000 0.000');
   setorigin (newmis,org);
   newmis.velocity = (dir * 1000.000);

};

void () W_FireSuperSpikes = {

   local vector dir;
   local entity old;

   sound (self,1.000,"weapons/spike2.wav",1.000,1.000);
   self.ammo_nails = (self.ammo_nails - 4.000);
   self.currentammo = (self.ammo_nails - 4.000);
   dir = aim (self,1000.000);
   launch_spike ((self.origin + '0.000 0.000 16.000'),dir);
   newmis.touch = superspike_touch;
   newmis.weapon = 4.000;
   setmodel (newmis,"progs/s_spike.mdl");
   setsize (newmis,'0.000 0.000 0.000','0.000 0.000 0.000');
   KickPlayer (-2.000,self);

};

void (float ox) W_FireSpikes = {

   local vector dir;
   local entity old;

   makevectors (self.v_angle);
   if ( ((self.ammo_nails >= 4.000) && (self.current_weapon == 1024.000)) ) {

      W_FireSuperSpikes ();
      return ;

   }
   if ( (self.ammo_nails < 1.000) ) {

      self.last_weapon = self.current_weapon;
      self.last_weaponmode = self.weaponmode;
      self.current_weapon = W_BestWeapon ();
      W_SetCurrentAmmo ();
      W_PrintWeaponMessage ();
      return ;

   }
   sound (self,1.000,"weapons/rocket1i.wav",1.000,1.000);
   if ( (self.ammo_nails == 1.000) ) {

      self.ammo_nails = (self.ammo_nails - 1.000);
      self.currentammo = (self.ammo_nails - 1.000);

   } else {

      self.ammo_nails = (self.ammo_nails - 2.000);
      self.currentammo = (self.ammo_nails - 2.000);

   }
   dir = aim (self,1000.000);
   launch_spike (((self.origin + '0.000 0.000 16.000') + (v_right * ox)),dir);
   KickPlayer (-2.000,self);

};
.float hit_z;

void () spike_touch = {

   if ( self.voided ) {

      return ;

   }
   self.voided = 1.000;
   if ( (other.solid == 1.000) ) {

      return ;

   }
   if ( (pointcontents (self.origin) == -6.000) ) {

      dremove (self);
      return ;

   }
   if ( other.takedamage ) {

      spawn_touchblood (9.000);
      deathmsg = self.weapon;
      if ( (self.owner.classname == "grenade") ) {

         TF_T_Damage (other,self,self.owner.owner,9.000,2.000,2.000);

      } else {

         TF_T_Damage (other,self,self.owner,18.000,2.000,2.000);

      }

   } else {

      WriteByte (0.000,23.000);
      if ( (self.classname == "wizspike") ) {

         WriteByte (0.000,7.000);

      } else {

         if ( (self.classname == "knightspike") ) {

            WriteByte (0.000,8.000);

         } else {

            WriteByte (0.000,0.000);

         }

      }
      WriteCoord (0.000,self.origin_x);
      WriteCoord (0.000,self.origin_y);
      WriteCoord (0.000,self.origin_z);

   }
   dremove (self);

};

void () superspike_touch = {

   local float ndmg;

   if ( self.voided ) {

      return ;

   }
   self.voided = 1.000;
   if ( (other == self.owner) ) {

      return ;

   }
   if ( (other.solid == 1.000) ) {

      return ;

   }
   if ( (pointcontents (self.origin) == -6.000) ) {

      dremove (self);
      return ;

   }
   if ( other.takedamage ) {

      spawn_touchblood (18.000);
      deathmsg = self.weapon;
      if ( (deathmsg == 9.000) ) {

         ndmg = 13.000;

      } else {

         ndmg = 26.000;

      }
      if ( (self.owner.classname == "grenade") ) {

         TF_T_Damage (other,self,self.owner.owner,ndmg,2.000,2.000);

      } else {

         TF_T_Damage (other,self,self.owner,ndmg,2.000,2.000);

      }

   } else {

      WriteByte (0.000,23.000);
      WriteByte (0.000,1.000);
      WriteCoord (0.000,self.origin_x);
      WriteCoord (0.000,self.origin_y);
      WriteCoord (0.000,self.origin_z);

   }
   dremove (self);

};

void () W_SetCurrentAmmo = {

   local string st;

   if ( ((self.health <= 0.000) || (self.current_weapon == 0.000)) ) {

      return ;

   }
   if ( ((self.current_weapon == 32768.000) && (self.tfstate & 2048.000)) ) {

      return ;

   }
   player_run ();
   self.items = (self.items - (self.items & (((256.000 | 512.000) | 1024.000) | 2048.000)));
   self.weapon = 0.000;
   if ( (self.current_weapon == 16.000) ) {

      self.currentammo = 0.000;
      if ( (self.playerclass == 8.000) ) {

         if ( (self.weaponmode == 0.000) ) {

            self.weaponmodel = "progs/v_knife.mdl";

         } else {

            self.weaponmodel = "progs/v_knife2.mdl";

         }

      } else {

         self.weaponmodel = "progs/v_axe.mdl";

      }
      self.weaponframe = 0.000;

   } else {

      if ( (self.current_weapon == 1.000) ) {

         self.currentammo = 0.000;
         self.weaponmodel = "progs/v_grap.mdl";
         self.weaponframe = 0.000;

      } else {

         if ( (self.current_weapon == 8.000) ) {

            self.currentammo = self.ammo_cells;
            self.weaponmodel = "progs/v_span.mdl";
            self.weaponframe = 0.000;

         } else {

            if ( (self.current_weapon == 128.000) ) {

               self.currentammo = self.ammo_shells;
               self.items = (self.items | 2048.000);
               if ( !(self.tfstate & 2.000) ) {

                  self.weaponmodel = "progs/v_shot.mdl";
                  self.weaponframe = 0.000;

               }
               self.items = (self.items | 256.000);
               self.weapon = 1.000;

            } else {

               if ( (self.current_weapon == 256.000) ) {

                  self.currentammo = self.ammo_shells;
                  if ( !(self.tfstate & 2.000) ) {

                     self.weaponmodel = "progs/v_shot2.mdl";
                     self.weaponframe = 0.000;

                  }
                  self.items = (self.items | 256.000);
                  self.weapon = 2.000;

               } else {

                  if ( (self.current_weapon == 512.000) ) {

                     self.currentammo = self.ammo_nails;
                     if ( !(self.tfstate & 2.000) ) {

                        self.weaponmodel = "progs/v_nail.mdl";
                        self.weaponframe = 0.000;

                     }
                     self.items = (self.items | 512.000);
                     self.weapon = 4.000;

                  } else {

                     if ( (self.current_weapon == 1024.000) ) {

                        self.currentammo = self.ammo_nails;
                        if ( !(self.tfstate & 2.000) ) {

                           self.weaponmodel = "progs/v_nail2.mdl";
                           self.weaponframe = 0.000;

                        }
                        self.items = (self.items | 512.000);
                        self.weapon = 8.000;

                     } else {

                        if ( (self.current_weapon == 2048.000) ) {

                           self.currentammo = self.ammo_rockets;
                           if ( !(self.tfstate & 2.000) ) {

                              self.weaponmodel = "progs/v_rock.mdl";
                              self.weaponframe = 0.000;

                           }
                           self.weapon = 16.000;
                           self.items = (self.items | 1024.000);

                        } else {

                           if ( (self.current_weapon == 8192.000) ) {

                              self.currentammo = self.ammo_rockets;
                              if ( !(self.tfstate & 2.000) ) {

                                 self.weaponmodel = "progs/v_rock2.mdl";
                                 self.weaponframe = 0.000;

                              }
                              self.items = (self.items | 1024.000);
                              self.weapon = 32.000;

                           } else {

                              if ( (self.current_weapon == 65536.000) ) {

                                 self.currentammo = self.ammo_cells;
                                 if ( !(self.tfstate & 2.000) ) {

                                    self.weaponmodel = "progs/v_light.mdl";
                                    self.weaponframe = 0.000;

                                 }
                                 self.items = (self.items | 2048.000);
                                 self.weapon = 64.000;

                              } else {

                                 if ( (self.current_weapon == 32.000) ) {

                                    self.currentammo = self.ammo_shells;
                                    if ( !(self.tfstate & 2.000) ) {

                                       self.weaponmodel = "progs/v_srifle.mdl";
                                       self.weaponframe = 0.000;

                                    }
                                    self.items = (self.items | 256.000);
                                    self.weapon = 1.000;

                                 } else {

                                    if ( (self.current_weapon == 64.000) ) {

                                       self.currentammo = self.ammo_shells;
                                       if ( !(self.tfstate & 2.000) ) {

                                          self.weaponmodel = "progs/v_srifle.mdl";
                                          self.weaponframe = 0.000;

                                       }
                                       self.items = (self.items | 256.000);
                                       self.weapon = 2.000;

                                    } else {

                                       if ( (self.current_weapon == 32768.000) ) {

                                          self.currentammo = self.ammo_shells;
                                          if ( !(self.tfstate & 2.000) ) {

                                             self.weaponmodel = "progs/v_asscan.mdl";
                                             self.weaponframe = 0.000;

                                          }
                                          self.items = (self.items | 256.000);
                                          self.weapon = 32.000;

                                       } else {

                                          if ( (self.current_weapon == 4096.000) ) {

                                             self.currentammo = self.ammo_cells;
                                             if ( !(self.tfstate & 2.000) ) {

                                                self.weaponmodel = "progs/v_rock.mdl";
                                                self.weaponframe = 0.000;

                                             }
                                             self.items = (self.items | 2048.000);
                                             self.weapon = 16.000;

                                          } else {

                                             if ( (self.current_weapon == 16384.000) ) {

                                                self.currentammo = self.ammo_rockets;
                                                if ( !(self.tfstate & 2.000) ) {

                                                   self.weaponmodel = "progs/v_rock2.mdl";
                                                   self.weaponframe = 0.000;

                                                }
                                                self.items = (self.items | 1024.000);
                                                self.weapon = 32.000;

                                             } else {

                                                if ( (self.current_weapon == 4.000) ) {

                                                   self.currentammo = 0.000;
                                                   self.weaponmodel = "progs/v_medi.mdl";
                                                   self.weaponframe = 0.000;

                                                } else {

                                                   if ( (self.current_weapon == 2.000) ) {

                                                      self.currentammo = 0.000;
                                                      self.weaponmodel = "progs/v_bio.mdl";
                                                      self.weaponframe = 0.000;

                                                   } else {

                                                      if ( (self.current_weapon == 262144.000) ) {

                                                         self.currentammo = self.ammo_shells;
                                                         if ( !(self.tfstate & 2.000) ) {

                                                            self.weaponmodel = "progs/v_shot.mdl";
                                                            self.weaponframe = 0.000;

                                                         }
                                                         self.items = (self.items | 256.000);
                                                         self.weapon = 1.000;

                                                      } else {

                                                         if ( (self.current_weapon == 524288.000) ) {

                                                            self.currentammo = self.ammo_nails;
                                                            if ( !(self.tfstate & 2.000) ) {

                                                               self.weaponmodel = "progs/v_rail.mdl";
                                                               self.weaponframe = 0.000;

                                                            }
                                                            self.items = (self.items | 512.000);
                                                            self.weapon = 1.000;

                                                         } else {

                                                            self.currentammo = 0.000;
                                                            self.weaponmodel = "";
                                                            self.weaponframe = 0.000;

                                                         }

                                                      }

                                                   }

                                                }

                                             }

                                          }

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }

};
float () W_BestWeapon = {

   local float it;

   it = self.weapons_carried;
   if ( (((self.ammo_cells >= 1.000) && (it & 65536.000)) && (self.waterlevel <= 1.000)) ) {

      return ( 65536.000 );

   } else {

      if ( (((self.ammo_cells >= 6.000) && (self.ammo_shells >= 1.000)) && (it & 32768.000)) ) {

         return ( 32768.000 );

      } else {

         if ( ((self.ammo_cells >= 1.000) && (it & 4096.000)) ) {

            return ( 4096.000 );

         } else {

            if ( ((self.ammo_nails >= 2.000) && (it & 1024.000)) ) {

               return ( 1024.000 );

            } else {

               if ( ((self.ammo_shells >= 2.000) && (it & 256.000)) ) {

                  return ( 256.000 );

               } else {

                  if ( ((self.ammo_nails >= 1.000) && (it & 524288.000)) ) {

                     return ( 524288.000 );

                  } else {

                     if ( ((self.ammo_nails >= 1.000) && (it & 512.000)) ) {

                        return ( 512.000 );

                     } else {

                        if ( ((self.ammo_shells >= 1.000) && (it & 128.000)) ) {

                           return ( 128.000 );

                        } else {

                           if ( ((self.ammo_shells >= 1.000) && (it & 262144.000)) ) {

                              return ( 262144.000 );

                           } else {

                              if ( (it & 4.000) ) {

                                 return ( 4.000 );

                              } else {

                                 if ( (it & 8.000) ) {

                                    return ( 8.000 );

                                 } else {

                                    if ( (it & 16.000) ) {

                                       return ( 16.000 );

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }
   return ( 0.000 );

};
float () W_CheckNoAmmo = {

   if ( (self.current_weapon == 4.000) ) {

      return ( 1.000 );

   } else {

      if ( (self.current_weapon == 2.000) ) {

         return ( 1.000 );

      } else {

         if ( (((self.current_weapon == 16.000) || (self.current_weapon == 1.000)) || (self.current_weapon == 8.000)) ) {

            return ( 1.000 );

         } else {

            if ( (self.current_weapon == 16384.000) ) {

               if ( (self.currentammo >= 3.000) ) {

                  return ( 1.000 );

               }

            } else {

               if ( (self.currentammo > 0.000) ) {

                  return ( 1.000 );

               }

            }

         }

      }

   }
   self.current_weapon = W_BestWeapon ();
   W_SetCurrentAmmo ();
   W_PrintWeaponMessage ();
   return ( 0.000 );

};

void () W_Reload_shotgun = {

   self.owner.tfstate = (self.owner.tfstate - (self.owner.tfstate & 2.000));
   self.owner.weaponmodel = "progs/v_shot.mdl";
   sprint (self.owner,0.000,"finished reloading\n");
   dremove (self);
   self.owner.StatusRefreshTime = (time + 0.100);

};

void () W_Reload_super_shotgun = {

   self.owner.tfstate = (self.owner.tfstate - (self.owner.tfstate & 2.000));
   self.owner.weaponmodel = "progs/v_shot2.mdl";
   sprint (self.owner,0.000,"finished reloading\n");
   dremove (self);
   self.owner.StatusRefreshTime = (time + 0.100);

};

void () W_Reload_grenade_launcher = {

   self.owner.tfstate = (self.owner.tfstate - (self.owner.tfstate & 2.000));
   self.owner.weaponmodel = "progs/v_rock.mdl";
   sprint (self.owner,0.000,"finished reloading\n");
   dremove (self);
   self.owner.StatusRefreshTime = (time + 0.100);

};

void () W_Reload_rocket_launcher = {

   self.owner.tfstate = (self.owner.tfstate - (self.owner.tfstate & 2.000));
   self.owner.weaponmodel = "progs/v_rock2.mdl";
   sprint (self.owner,0.000,"finished reloading\n");
   dremove (self);
   self.owner.StatusRefreshTime = (time + 0.100);

};
float () CheckForReload = {

   local entity tWeapon;

   if ( (self.current_weapon == 128.000) ) {

      if ( ((self.reload_shotgun >= 8.000) && (self.ammo_shells > 0.000)) ) {

         self.reload_shotgun = 0.000;
         if ( (self.ammo_shells < 8.000) ) {

            self.reload_shotgun = (8.000 - self.ammo_shells);

         }
         sprint (self,2.000,"reloading...\n");
         self.tfstate = (self.tfstate | 2.000);
         tWeapon = spawn ();
         tWeapon.owner = self;
         tWeapon.classname = "timer";
         tWeapon.nextthink = (time + 2.000);
         tWeapon.think = W_Reload_shotgun;
         self.weaponmodel = "";
         self.weaponframe = 0.000;
         return ( 1.000 );

      }

   } else {

      if ( (self.current_weapon == 256.000) ) {

         if ( (self.reload_super_shotgun > 16.000) ) {

            self.reload_super_shotgun = 16.000;

         }
         if ( ((self.reload_super_shotgun >= 16.000) && (self.ammo_shells > 0.000)) ) {

            self.reload_super_shotgun = 0.000;
            if ( (self.ammo_shells < 16.000) ) {

               self.reload_super_shotgun = (16.000 - self.ammo_shells);

            }
            sprint (self,2.000,"reloading...\n");
            self.tfstate = (self.tfstate | 2.000);
            tWeapon = spawn ();
            tWeapon.owner = self;
            tWeapon.classname = "timer";
            tWeapon.nextthink = (time + 3.000);
            tWeapon.think = W_Reload_super_shotgun;
            self.weaponmodel = "";
            self.weaponframe = 0.000;
            return ( 1.000 );

         }

      } else {

         if ( (self.current_weapon == 2048.000) ) {

            if ( ((self.reload_grenade_launcher >= 6.000) && (self.ammo_rockets > 0.000)) ) {

               self.reload_grenade_launcher = 0.000;
               if ( (self.ammo_rockets < 6.000) ) {

                  self.reload_grenade_launcher = (6.000 - self.ammo_rockets);

               }
               sprint (self,2.000,"reloading...\n");
               self.tfstate = (self.tfstate | 2.000);
               tWeapon = spawn ();
               tWeapon.owner = self;
               tWeapon.classname = "timer";
               tWeapon.nextthink = (time + 4.000);
               tWeapon.think = W_Reload_grenade_launcher;
               self.weaponmodel = "";
               self.weaponframe = 0.000;
               return ( 1.000 );

            }

         } else {

            if ( (self.current_weapon == 8192.000) ) {

               if ( ((self.reload_rocket_launcher >= 4.000) && (self.ammo_rockets > 0.000)) ) {

                  self.reload_rocket_launcher = 0.000;
                  if ( (self.ammo_rockets < 4.000) ) {

                     self.reload_rocket_launcher = (4.000 - self.ammo_rockets);

                  }
                  sprint (self,2.000,"reloading...\n");
                  self.tfstate = (self.tfstate | 2.000);
                  tWeapon = spawn ();
                  tWeapon.owner = self;
                  tWeapon.classname = "timer";
                  tWeapon.nextthink = (time + 5.000);
                  tWeapon.think = W_Reload_rocket_launcher;
                  self.weaponmodel = "";
                  self.weaponframe = 0.000;
                  return ( 1.000 );

               }

            }

         }

      }

   }
   return ( 0.000 );

};

void () player_axe1;

void () player_axeb1;

void () player_axec1;

void () player_axed1;

void () player_shot1;

void () player_nail1;

void () player_light1;

void () player_rocket1;

void () player_autorifle1;

void () player_assaultcannon1;

void () player_assaultcannonup1;

void () player_assaultcannondown1;

void () player_medikit1;

void () player_medikitb1;

void () player_medikitc1;

void () player_medikitd1;

void () player_bioweapon1;

void () player_bioweaponb1;

void () player_bioweaponc1;

void () player_bioweapond1;

void () player_chain1;

void () player_chain2;

void () player_chain3;

void () player_chain4;

void () player_chain5;

void () W_Attack = {

   local float r;
   local float tc;
   local entity tcool;
   local string st;

   if ( !W_CheckNoAmmo () ) {

      return ;

   }
   if ( (self.has_disconnected == 1.000) ) {

      return ;

   }
   if ( (self.tfstate & 2.000) ) {

      return ;

   }
   if ( ((self.is_undercover || (self.undercover_team != 0.000)) || (self.undercover_skin != 0.000)) ) {

      Spy_RemoveDisguise (self);

   }
   makevectors (self.v_angle);
   self.show_hostile = (time + 1.000);
   if ( (self.current_weapon == 16.000) ) {

      Attack_Finished (0.500);
      sound (self,1.000,"weapons/ax1.wav",1.000,1.000);
      r = random ();
      if ( (r < 0.250) ) {

         player_axe1 ();

      } else {

         if ( (r < 0.500) ) {

            player_axeb1 ();

         } else {

            if ( (r < 0.750) ) {

               player_axec1 ();

            } else {

               player_axed1 ();

            }

         }

      }

   } else {

      if ( (self.current_weapon == 8.000) ) {

         Attack_Finished (0.500);
         sound (self,1.000,"weapons/ax1.wav",1.000,1.000);
         player_axe1 ();

      } else {

         if ( (self.current_weapon == 1.000) ) {

            if ( !self.hook_out ) {

               player_chain1 ();

            }
            Attack_Finished (0.100);

         } else {

            if ( (self.current_weapon == 128.000) ) {

               if ( (CheckForReload () == 1.000) ) {

                  return ;

               }
               player_shot1 ();
               W_FireShotgun ();
               self.reload_shotgun = (self.reload_shotgun + 1.000);
               self.StatusRefreshTime = (time + 0.100);
               CheckForReload ();
               Attack_Finished (0.500);

            } else {

               if ( (self.current_weapon == 256.000) ) {

                  if ( (CheckForReload () == 1.000) ) {

                     return ;

                  }
                  player_shot1 ();
                  W_FireSuperShotgun ();
                  self.reload_super_shotgun = (self.reload_super_shotgun + 2.000);
                  self.StatusRefreshTime = (time + 0.100);
                  CheckForReload ();
                  Attack_Finished (0.700);

               } else {

                  if ( (self.current_weapon == 512.000) ) {

                     player_nail1 ();

                  } else {

                     if ( (self.current_weapon == 1024.000) ) {

                        player_nail1 ();

                     } else {

                        if ( (self.current_weapon == 2048.000) ) {

                           if ( (CheckForReload () == 1.000) ) {

                              return ;

                           }
                           player_rocket1 ();
                           W_FireGrenade ();
                           self.reload_grenade_launcher = (self.reload_grenade_launcher + 1.000);
                           self.StatusRefreshTime = (time + 0.100);
                           CheckForReload ();
                           Attack_Finished (0.600);

                        } else {

                           if ( (self.current_weapon == 8192.000) ) {

                              if ( (CheckForReload () == 1.000) ) {

                                 return ;

                              }
                              player_rocket1 ();
                              W_FireRocket ();
                              self.reload_rocket_launcher = (self.reload_rocket_launcher + 1.000);
                              self.StatusRefreshTime = (time + 0.100);
                              CheckForReload ();
                              Attack_Finished (0.800);

                           } else {

                              if ( (self.current_weapon == 65536.000) ) {

                                 player_light1 ();
                                 Attack_Finished (0.100);
                                 sound (self,0.000,"weapons/lstart.wav",1.000,1.000);

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }
   if ( (self.current_weapon == 32.000) ) {

      if ( ((self.flags & 512.000) || self.hook_out) ) {

         player_shot1 ();
         W_FireSniperRifle ();
         Attack_Finished (1.500);

      }

   } else {

      if ( (self.current_weapon == 64.000) ) {

         player_autorifle1 ();
         W_FireAutoRifle ();
         Attack_Finished (0.100);

      } else {

         if ( (self.current_weapon == 32768.000) ) {

            if ( (self.ammo_cells < 4.000) ) {

               sprint (self,1.000,"Insufficient cells to power up the Assault Cannon.\n");

            } else {

               self.ammo_cells = (self.ammo_cells - 4.000);
               self.heat = 1.000;
               self.immune_to_check = (time + 5.000);
               self.tfstate = (self.tfstate | 2048.000);
               TeamFortress_SetSpeed (self);
               player_assaultcannonup1 ();

            }

         } else {

            if ( (self.current_weapon == 4096.000) ) {

               player_shot1 ();
               W_FireFlame ();
               if ( (self.waterlevel > 2.000) ) {

                  Attack_Finished (1.000);

               } else {

                  Attack_Finished (0.150);

               }

            } else {

               if ( (self.current_weapon == 16384.000) ) {

                  player_rocket1 ();
                  W_FireIncendiaryCannon ();
                  Attack_Finished (1.200);

               } else {

                  if ( (self.current_weapon == 4.000) ) {

                     sound (self,1.000,"weapons/ax1.wav",1.000,1.000);
                     r = random ();
                     if ( (r < 0.250) ) {

                        player_medikit1 ();

                     } else {

                        if ( (r < 0.500) ) {

                           player_medikitb1 ();

                        } else {

                           if ( (r < 0.750) ) {

                              player_medikitc1 ();

                           } else {

                              player_medikitd1 ();

                           }

                        }

                     }
                     Attack_Finished (0.500);

                  } else {

                     if ( (self.current_weapon == 2.000) ) {

                        sound (self,1.000,"weapons/ax1.wav",1.000,1.000);
                        r = random ();
                        if ( (r < 0.250) ) {

                           player_bioweapon1 ();

                        } else {

                           if ( (r < 0.500) ) {

                              player_bioweaponb1 ();

                           } else {

                              if ( (r < 0.750) ) {

                                 player_bioweaponc1 ();

                              } else {

                                 player_bioweapond1 ();

                              }

                           }

                        }
                        Attack_Finished (0.500);

                     } else {

                        if ( (self.current_weapon == 262144.000) ) {

                           sound (self,1.000,"weapons/dartgun.wav",1.000,1.000);
                           player_shot1 ();
                           W_FireTranq ();
                           Attack_Finished (1.500);

                        } else {

                           if ( (self.current_weapon == 524288.000) ) {

                              sound (self,1.000,"weapons/railgun.wav",1.000,1.000);
                              player_shot1 ();
                              W_FireLaser ();
                              Attack_Finished (0.400);

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }

};

void () W_PrintWeaponMessage = {

   if ( ((self.current_weapon == 16.000) && allow_hook) ) {

      if ( (self.playerclass != 8.000) ) {

         sprint (self,1.000,"Axe selected\n");

      }

   } else {

      if ( (self.current_weapon == 1.000) ) {

         sprint (self,1.000,"grappling hook selected\n");

      } else {

         if ( (self.current_weapon == 2048.000) ) {

            if ( (self.weaponmode == 0.000) ) {

               sprint (self,1.000,"Normal grenade mode\n");

            } else {

               if ( (cb_prematch_time > time) ) {

                  sprint (self,1.000,"Pipebomb mode not available in PreMatch\n");

               } else {

                  if ( (self.weaponmode == 1.000) ) {

                     sprint (self,1.000,"Pipebomb mode\n");

                  }

               }

            }

         } else {

            if ( (self.current_weapon == 32.000) ) {

               sprint (self,1.000,"Sniper rifle ready\n");

            } else {

               if ( (self.current_weapon == 64.000) ) {

                  sprint (self,1.000,"rifle on fully auto\n");

               } else {

                  if ( (self.current_weapon == 262144.000) ) {

                     sprint (self,1.000,"Tranquiliser gun selected\n");

                  } else {

                     if ( (self.current_weapon == 2.000) ) {

                        sprint (self,1.000,"BioWeapon readied\n");

                     } else {

                        if ( (self.current_weapon == 4.000) ) {

                           sprint (self,1.000,"Medikit readied\n");

                        }

                     }

                  }

               }

            }

         }

      }

   }

};

void () W_ChangeWeapon = {

   local float it;
   local float am;
   local float fl;
   local float wm;
   local float have_weapon;
   local float usable;

   if ( (self.tfstate & 2.000) ) {

      return ;

   }
   it = self.weapons_carried;
   fl = self.current_weapon;
   am = 0.000;
   usable = 0.000;
   have_weapon = 1.000;
   if ( (self.impulse == 1.000) ) {

      if ( !(it & ((((1.000 | 2.000) | 4.000) | 16.000) | 8.000)) ) {

         have_weapon = 0.000;

      }
      while ( (!usable && have_weapon) ) {

         if ( (fl == 8.000) ) {

            fl = 2.000;
            if ( (it & 2.000) ) {

               usable = 1.000;

            }

         } else {

            if ( (fl == 2.000) ) {

               fl = 4.000;
               if ( (it & 4.000) ) {

                  usable = 1.000;

               }

            } else {

               if ( (fl == 4.000) ) {

                  fl = 1.000;
                  if ( (allow_hook && (fl & 1.000)) ) {

                     usable = 1.000;

                  }
                  if ( self.hook_out ) {

                     Reset_Grapple (self.hook);

                  }

               } else {

                  if ( (fl == 1.000) ) {

                     fl = 16.000;
                     if ( (it & 16.000) ) {

                        usable = 1.000;

                     }

                  } else {

                     fl = 8.000;
                     if ( (it & 8.000) ) {

                        usable = 1.000;

                     }

                  }

               }

            }

         }

      }

   } else {

      if ( (allow_hook && ((self.impulse == 22.000) || (self.impulse == 39.000))) ) {

         fl = 1.000;

      } else {

         if ( (self.impulse == 40.000) ) {

            if ( !(it & (((2.000 | 4.000) | 16.000) | 8.000)) ) {

               have_weapon = 0.000;

            }
            while ( (!usable && have_weapon) ) {

               if ( (fl == 8.000) ) {

                  fl = 2.000;
                  if ( (it & 2.000) ) {

                     usable = 1.000;

                  }

               } else {

                  if ( (fl == 2.000) ) {

                     fl = 16.000;
                     if ( (it & 16.000) ) {

                        usable = 1.000;

                     }

                  } else {

                     fl = 8.000;
                     if ( (it & 8.000) ) {

                        usable = 1.000;

                     }

                  }

               }

            }

         } else {

            if ( (self.impulse == 2.000) ) {

               if ( (it & 32.000) ) {

                  fl = 32.000;
                  if ( (self.ammo_shells < 1.000) ) {

                     am = 1.000;

                  }

               } else {

                  if ( (it & 128.000) ) {

                     fl = 128.000;
                     if ( (self.ammo_shells < 1.000) ) {

                        am = 1.000;

                     }

                  } else {

                     if ( (it & 262144.000) ) {

                        fl = 262144.000;
                        if ( (self.ammo_shells < 1.000) ) {

                           am = 1.000;

                        }

                     } else {

                        if ( (it & 524288.000) ) {

                           fl = 524288.000;
                           if ( (self.ammo_nails < 1.000) ) {

                              am = 1.000;

                           }

                        } else {

                           have_weapon = 0.000;

                        }

                     }

                  }

               }

            } else {

               if ( (self.impulse == 3.000) ) {

                  if ( (it & 64.000) ) {

                     fl = 64.000;
                     if ( (self.ammo_shells < 1.000) ) {

                        am = 1.000;

                     }

                  } else {

                     fl = 256.000;
                     if ( (self.ammo_shells < 2.000) ) {

                        am = 1.000;

                     }

                  }

               } else {

                  if ( (self.impulse == 4.000) ) {

                     fl = 512.000;
                     if ( (self.ammo_nails < 1.000) ) {

                        am = 1.000;

                     }

                  } else {

                     if ( (self.impulse == 5.000) ) {

                        fl = 1024.000;
                        if ( (self.ammo_nails < 2.000) ) {

                           am = 1.000;

                        }

                     } else {

                        if ( (self.impulse == 6.000) ) {

                           if ( (it & 4096.000) ) {

                              fl = 4096.000;
                              if ( (self.ammo_cells < 1.000) ) {

                                 am = 1.000;

                              }

                           } else {

                              if ( (it & 2048.000) ) {

                                 fl = 2048.000;
                                 if ( (self.ammo_rockets < 1.000) ) {

                                    am = 1.000;

                                 }
                                 wm = 0.000;

                              } else {

                                 have_weapon = 0.000;

                              }

                           }

                        } else {

                           if ( (self.impulse == 7.000) ) {

                              if ( (it & 16384.000) ) {

                                 fl = 16384.000;
                                 if ( (self.ammo_rockets < 3.000) ) {

                                    am = 1.000;

                                 }

                              } else {

                                 if ( (it & 8192.000) ) {

                                    fl = 8192.000;
                                    if ( (self.ammo_rockets < 1.000) ) {

                                       am = 1.000;

                                    }

                                 } else {

                                    if ( (it & 32768.000) ) {

                                       fl = 32768.000;
                                       if ( (self.ammo_shells < 1.000) ) {

                                          am = 1.000;

                                       } else {

                                          if ( (self.ammo_cells < 4.000) ) {

                                             am = 2.000;

                                          }

                                       }

                                    } else {

                                       if ( (it & 2048.000) ) {

                                          fl = 2048.000;
                                          wm = 1.000;
                                          if ( (self.ammo_rockets < 1.000) ) {

                                             am = 1.000;

                                          }

                                       } else {

                                          have_weapon = 0.000;

                                       }

                                    }

                                 }

                              }

                           } else {

                              if ( (self.impulse == 8.000) ) {

                                 fl = 65536.000;
                                 if ( (self.ammo_cells < 1.000) ) {

                                    am = 1.000;

                                 }

                              } else {

                                 if ( (self.impulse == 176.000) ) {

                                    fl = 4.000;
                                    if ( (it & 4.000) ) {

                                       usable = 1.000;

                                    }

                                 } else {

                                    if ( (self.impulse == 69.000) ) {

                                       fl = self.last_weapon;
                                       if ( (it & self.last_weapon) ) {

                                          usable = 1.000;

                                       }
                                       if ( (((fl & (((((32.000 | 64.000) | 128.000) | 256.000) | 32768.000) | 262144.000)) != 0.000) && (self.ammo_shells < 1.000)) ) {

                                          am = 1.000;

                                       } else {

                                          if ( (((fl & ((512.000 | 1024.000) | 524288.000)) != 0.000) && (self.ammo_nails < 1.000)) ) {

                                             am = 1.000;

                                          } else {

                                             if ( (((fl & (2048.000 | 8192.000)) != 0.000) && (self.ammo_rockets < 1.000)) ) {

                                                am = 1.000;

                                             } else {

                                                if ( (((fl & (4096.000 | 65536.000)) != 0.000) && (self.ammo_cells < 1.000)) ) {

                                                   am = 1.000;

                                                } else {

                                                   if ( ((fl == 16384.000) && (self.ammo_rockets < 3.000)) ) {

                                                      am = 1.000;

                                                   } else {

                                                      if ( ((fl == 32768.000) && (self.ammo_cells < 4.000)) ) {

                                                         am = 2.000;

                                                      }

                                                   }

                                                }

                                             }

                                          }

                                       }
                                       if ( (am == 0.000) ) {

                                          wm = self.last_weaponmode;

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }
   self.impulse = 0.000;
   if ( (!have_weapon || !(it & fl)) ) {

      sprint (self,2.000,"no weapon.\n");
      return ;

   }
   if ( (am == 1.000) ) {

      sprint (self,2.000,"not enough ammo.\n");
      return ;

   }
   if ( (am == 2.000) ) {

      sprint (self,2.000,"not enough cells to power assault cannon.\n");
      return ;

   }
   self.last_weaponmode = self.weaponmode;
   self.last_weapon = self.current_weapon;
   self.current_weapon = fl;
   self.weaponmode = wm;
   W_SetCurrentAmmo ();
   W_PrintWeaponMessage ();
   self.StatusRefreshTime = (time + 0.100);

};

void () CycleWeaponCommand = {

   local float it;
   local float am;
   local float cont;
   local float loopcount;
   local float lw;

   if ( ((self.weaponmodel == string_null) || (self.current_weapon == 0.000)) ) {

      return ;

   }
   if ( (self.tfstate & 2.000) ) {

      return ;

   }
   it = self.weapons_carried;
   self.impulse = 0.000;
   loopcount = 0.000;
   lw = self.current_weapon;
   while ( 1.000 ) {

      am = 0.000;
      cont = 0.000;
      if ( (self.current_weapon == 16.000) ) {

         self.current_weapon = 8.000;

      } else {

         if ( (self.current_weapon == 8.000) ) {

            self.current_weapon = 128.000;
            if ( (self.ammo_shells < 1.000) ) {

               am = 1.000;

            }

         } else {

            if ( (self.current_weapon == 128.000) ) {

               self.current_weapon = 524288.000;
               if ( (self.ammo_nails < 1.000) ) {

                  am = 1.000;

               }

            } else {

               if ( (self.current_weapon == 524288.000) ) {

                  self.current_weapon = 262144.000;
                  if ( (self.ammo_shells < 1.000) ) {

                     am = 1.000;

                  }

               } else {

                  if ( (self.current_weapon == 262144.000) ) {

                     self.current_weapon = 32.000;
                     if ( (self.ammo_shells < 1.000) ) {

                        am = 1.000;

                     }

                  } else {

                     if ( (self.current_weapon == 32.000) ) {

                        self.current_weapon = 64.000;
                        if ( (self.ammo_shells < 1.000) ) {

                           am = 1.000;

                        }

                     } else {

                        if ( (self.current_weapon == 64.000) ) {

                           self.current_weapon = 256.000;
                           if ( (self.ammo_shells < 2.000) ) {

                              am = 1.000;

                           }

                        } else {

                           if ( (self.current_weapon == 256.000) ) {

                              self.current_weapon = 512.000;
                              if ( (self.ammo_nails < 1.000) ) {

                                 am = 1.000;

                              }

                           } else {

                              if ( (self.current_weapon == 512.000) ) {

                                 self.current_weapon = 1024.000;
                                 if ( (self.ammo_nails < 2.000) ) {

                                    am = 1.000;

                                 }

                              } else {

                                 if ( (self.current_weapon == 1024.000) ) {

                                    self.current_weapon = 2048.000;
                                    self.weaponmode = 0.000;
                                    if ( (self.ammo_rockets < 1.000) ) {

                                       am = 1.000;

                                    }

                                 } else {

                                    if ( ((self.current_weapon == 2048.000) && (self.weaponmode == 0.000)) ) {

                                       self.current_weapon = 2048.000;
                                       self.weaponmode = 1.000;
                                       if ( (self.ammo_rockets < 1.000) ) {

                                          am = 1.000;

                                       }

                                    } else {

                                       if ( ((self.current_weapon == 2048.000) && (self.weaponmode == 1.000)) ) {

                                          self.current_weapon = 8192.000;
                                          if ( (self.ammo_rockets < 1.000) ) {

                                             am = 1.000;

                                          }

                                       } else {

                                          if ( (self.current_weapon == 8192.000) ) {

                                             self.current_weapon = 65536.000;
                                             if ( (self.ammo_cells < 1.000) ) {

                                                am = 1.000;

                                             }

                                          } else {

                                             if ( (self.current_weapon == 65536.000) ) {

                                                self.current_weapon = 4096.000;
                                                if ( (self.ammo_cells < 1.000) ) {

                                                   am = 1.000;

                                                }

                                             } else {

                                                if ( (self.current_weapon == 4096.000) ) {

                                                   self.current_weapon = 16384.000;
                                                   if ( (self.ammo_rockets < 3.000) ) {

                                                      am = 1.000;

                                                   }

                                                } else {

                                                   if ( (self.current_weapon == 16384.000) ) {

                                                      self.current_weapon = 32768.000;
                                                      if ( (self.ammo_cells < 4.000) ) {

                                                         am = 1.000;

                                                      }
                                                      if ( (self.ammo_shells < 1.000) ) {

                                                         am = 1.000;

                                                      }

                                                   } else {

                                                      if ( (self.current_weapon == 32768.000) ) {

                                                         self.current_weapon = 1.000;
                                                         if ( !allow_hook ) {

                                                            am = 1.000;

                                                         }

                                                      } else {

                                                         if ( (self.current_weapon == 1.000) ) {

                                                            self.current_weapon = 2.000;

                                                         } else {

                                                            if ( (self.current_weapon == 2.000) ) {

                                                               self.current_weapon = 4.000;

                                                            } else {

                                                               if ( (self.current_weapon == 4.000) ) {

                                                                  self.current_weapon = 16.000;

                                                               }

                                                            }

                                                         }

                                                      }

                                                   }

                                                }

                                             }

                                          }

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }
      if ( (loopcount > 30.000) ) {

         return ;

      }
      loopcount = (loopcount + 1.000);
      if ( ((self.weapons_carried & self.current_weapon) && (am == 0.000)) ) {

         if ( (self.current_weapon != 2048.000) ) {

            self.weaponmode = 0.000;

         }
         self.last_weapon = lw;
         W_SetCurrentAmmo ();
         W_PrintWeaponMessage ();
         self.StatusRefreshTime = (time + 0.100);
         return ;

      }

   }

};

void () QuadCheat = {

   if ( (deathmatch || coop) ) {

      return ;

   }
   self.super_time = 1.000;
   self.super_damage_finished = (time + 30.000);
   self.items = (self.items | 4194304.000);
   dprint ("quad cheat\n");

};

void () DeadImpulses;

void () ImpulseCommands = {

   local entity te;

   if ( ((self.last_impulse == 168.000) && self.impulse) ) {

      TeamFortress_SetDetpack (self.impulse);

   } else {

      if ( ((self.last_impulse == 159.000) && self.impulse) ) {

         TeamFortress_Scan (self.impulse);

      }

   }
   if ( ((self.impulse == 8.000) && (self.current_menu != 6.000)) ) {

      self.current_menu = 6.000;
      self.menu_count = 25.000;
      self.menu_displaytime = 0.000;

   }
   if ( (self.impulse == 171.000) ) {

      UseSpecialSkill ();

   }
   if ( ((!self.is_building && !self.is_detpacking) && !self.is_feigning) ) {

      if ( (((self.impulse >= 1.000) && (self.impulse < 8.000)) || (self.impulse == 176.000)) ) {

         W_ChangeWeapon ();

      } else {

         if ( (allow_hook && ((self.impulse == 22.000) || (self.impulse == 39.000))) ) {

            W_ChangeWeapon ();

         } else {

            if ( (self.impulse == 40.000) ) {

               W_ChangeWeapon ();

            } else {

               if ( ((self.impulse == 10.000) || (self.impulse == 12.000)) ) {

                  CycleWeaponCommand ();

               } else {

                  if ( ((self.impulse == 69.000) && (self.last_weapon != 0.000)) ) {

                     W_ChangeWeapon ();

                  } else {

                     if ( (self.impulse == 150.000) ) {

                        TeamFortress_PrimeGrenade ();

                     } else {

                        if ( (self.impulse == 151.000) ) {

                           TeamFortress_PrimeGrenade ();

                        } else {

                           if ( (self.impulse == 173.000) ) {

                              TeamFortress_ReloadCurrentWeapon ();

                           } else {

                              if ( (self.impulse == 162.000) ) {

                                 TeamFortress_Scan (10.000);

                              } else {

                                 if ( (self.impulse == 163.000) ) {

                                    TeamFortress_Scan (30.000);

                                 } else {

                                    if ( (self.impulse == 164.000) ) {

                                       TeamFortress_Scan (100.000);

                                    } else {

                                       if ( (self.impulse == 165.000) ) {

                                          TeamFortress_SetDetpack (5.000);

                                       } else {

                                          if ( (self.impulse == 166.000) ) {

                                             TeamFortress_SetDetpack (20.000);

                                          } else {

                                             if ( (self.impulse == 167.000) ) {

                                                TeamFortress_SetDetpack (50.000);

                                             } else {

                                                if ( (self.impulse == 172.000) ) {

                                                   self.current_menu = 4.000;
                                                   self.menu_count = (25.000 - 5.000);

                                                } else {

                                                   if ( (self.impulse == 184.000) ) {

                                                      TeamFortress_Discard ();

                                                   } else {

                                                      if ( ((self.impulse == 175.000) && coop) ) {

                                                         DropKey ();

                                                      }

                                                   }

                                                }

                                             }

                                          }

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }
   if ( (self.impulse == 135.000) ) {

      TeamFortress_Inventory ();

   } else {

      if ( ((self.playerclass != 0.000) && (self.impulse == 181.000)) ) {

         TeamFortress_SaveMe ();

      } else {

         if ( (self.impulse == 152.000) ) {

            TeamFortress_ThrowGrenade ();

         } else {

            if ( (self.impulse == 185.000) ) {

               TeamFortress_ID ();

            } else {

               if ( ((self.playerclass != 0.000) && (self.impulse == 194.000)) ) {

                  DropGoalItems ();

               } else {

                  if ( (self.impulse == 170.000) ) {

                     TeamFortress_DetonatePipebombs ();

                  } else {

                     if ( (self.impulse == 169.000) ) {

                        TeamFortress_DetpackStop ();

                     } else {

                        if ( ((self.impulse == 188.000) && (self.playerclass == 9.000)) ) {

                           DestroyBuilding (self,"building_sentrygun");

                        } else {

                           if ( ((self.impulse == 187.000) && (self.playerclass == 9.000)) ) {

                              DestroyBuilding (self,"building_dispenser");

                           } else {

                              if ( ((self.impulse == 196.000) && (self.playerclass == 9.000)) ) {

                                 DestroyBuilding (self,"building_teleporter_exit");

                              } else {

                                 if ( ((self.impulse == 197.000) && (self.playerclass == 9.000)) ) {

                                    DestroyBuilding (self,"building_teleporter_entrance");

                                 } else {

                                    if ( ((self.impulse == 177.000) && (self.playerclass == 8.000)) ) {

                                       TeamFortress_SpyGoUndercover ();

                                    } else {

                                       if ( ((self.impulse == 178.000) && (self.playerclass == 8.000)) ) {

                                          TeamFortress_SpyFeignDeath ();

                                       } else {

                                          if ( ((self.impulse == 179.000) && (self.playerclass == 9.000)) ) {

                                             TeamFortress_EngineerBuild ();

                                          } else {

                                             if ( (self.impulse == 23.000) ) {

                                                if ( (CTF_Map == 1.000) ) {

                                                   TeamFortress_CTF_FlagInfo ();

                                                } else {

                                                   TeamFortress_DisplayDetectionItems ();

                                                }

                                             } else {

                                                if ( (self.impulse == 118.000) ) {

                                                   display_location ();

                                                } else {

                                                   DeadImpulses ();

                                                }

                                             }

                                          }

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }
   if ( (self.impulse == 168.000) ) {

      self.last_impulse = self.impulse;

   }
   if ( (self.impulse == 159.000) ) {

      self.last_impulse = self.impulse;

   }
   self.impulse = 0.000;

};

void () DeadImpulses = {

   if ( (self.impulse == 136.000) ) {

      TeamFortress_ShowTF ();

   } else {

      if ( (self.impulse == 174.000) ) {

         TeamFortress_AutoZoomToggle ();

      } else {

         if ( (self.impulse == 137.000) ) {

            TeamFortress_DisplayLegalClasses ();

         } else {

            if ( ((self.impulse > 100.000) && (self.impulse <= (100.000 + 10.000))) ) {

               TeamFortress_ChangeClass ();

            } else {

               if ( ((((self.playerclass != 0.000) && (self.impulse == 99.000)) && (deathmatch == 3.000)) && (cb_prematch_time < time)) ) {

                  self.current_menu = 20.000;
                  self.menu_count = 25.000;

               } else {

                  if ( (self.is_admin == 1.000) ) {

                     if ( (self.impulse == 193.000) ) {

                        Admin_CeaseFire ();

                     } else {

                        if ( (self.impulse == 192.000) ) {

                           Admin_CountPlayers ();

                        } else {

                           if ( (self.impulse == 190.000) ) {

                              Admin_CycleKick ();

                           } else {

                              if ( ((self.impulse == 191.000) && (self.admin_mode == 1.000)) ) {

                                 Admin_DoKick ();

                              } else {

                                 if ( ((self.impulse == 195.000) && (self.admin_mode == 1.000)) ) {

                                    Admin_CycleKick ();

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }
   if ( (self.impulse == 131.000) ) {

      TeamFortress_HelpMap ();

   } else {

      if ( (self.impulse == 119.000) ) {

         TeamFortress_StatusQuery ();

      } else {

         if ( (self.impulse == 140.000) ) {

            TeamFortress_TeamSet (1.000);

         } else {

            if ( (self.impulse == 141.000) ) {

               TeamFortress_TeamSet (2.000);

            } else {

               if ( (self.impulse == 142.000) ) {

                  TeamFortress_TeamSet (3.000);

               } else {

                  if ( (self.impulse == 143.000) ) {

                     TeamFortress_TeamSet (4.000);

                  } else {

                     if ( (self.impulse == 145.000) ) {

                        TeamFortress_TeamShowScores (0.000);

                     } else {

                        if ( (self.impulse == 144.000) ) {

                           TeamFortress_TeamShowMemberClasses (self);

                        } else {

                           if ( (self.impulse == 182.000) ) {

                              self.StatusRefreshTime = (time + 0.200);
                              self.StatusBarSize = (self.StatusBarSize + 1.000);
                              if ( (self.StatusBarSize > 2.000) ) {

                                 self.StatusBarSize = 1.000;

                              }

                           } else {

                              if ( (self.impulse == 183.000) ) {

                                 self.StatusRefreshTime = (time + 60.000);
                                 self.StatusBarSize = 0.000;

                              } else {

                                 if ( ((self.impulse >= 71.000) && (self.impulse <= 81.000)) ) {

                                    StatusRes ((self.impulse - 71.000));

                                 } else {

                                    if ( (self.impulse == 13.000) ) {

                                       sprint (self,2.000,"Aliases checked.\n");
                                       self.got_aliases = 1.000;
                                       self.impulse = 0.000;

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }

         }

      }

   }

};

void () W_WeaponFrame = {

   local vector tv;

   if ( !(self.tfstate & 2048.000) ) {

      if ( ((self.height > 29.000) && (self.height < 90.000)) ) {

         self.height = (self.height + 8.000);
         if ( (self.height > 90.000) ) {

            self.height = 90.000;

         }
         TF_zoom (self.height);

      }

   }
   if ( (self.current_menu > 0.000) ) {

      Player_Menu ();
      if ( ((self.impulse > 0.000) && (self.impulse < 11.000)) ) {

         Menu_Input (self.impulse);
         if ( (self.impulse != 0.000) ) {

            if ( (((self.team_no == 0.000) && teamplay) && (self.lives != 0.000)) ) {

               Menu_Team_Input (self.impulse);

            } else {

               if ( ((self.playerclass == 0.000) && (self.lives != 0.000)) ) {

                  Menu_Class_Input (self.impulse);

               }

            }

         }

      }

   }
   if ( (time < self.attack_finished) ) {

      return ;

   }
   if ( ((self.impulse != 0.000) && (self.has_disconnected == 0.000)) ) {

      ImpulseCommands ();

   }
   if ( cease_fire ) {

      return ;

   }
   if ( (((self.is_building != 0.000) || (self.is_detpacking != 0.000)) || (self.is_feigning != 0.000)) ) {

      return ;

   }
   if ( ((!self.button0 && self.fire_held_down) && (self.current_weapon == 32768.000)) ) {

      self.fire_held_down = 0.000;
      self.tfstate = (self.tfstate - (self.tfstate & 2048.000));
      TeamFortress_SetSpeed (self);
      player_run ();

   }
   if ( (self.button0 && !self.fire_held_down) ) {

      if ( ((self.current_menu == 6.000) || (self.current_menu == 7.000)) ) {

         self.current_menu = 8.000;
         self.menu_count = 25.000;
         Attack_Finished (0.200);

      } else {

         if ( (self.current_weapon == 32.000) ) {

            if ( (self.tfstate & 2048.000) ) {

               if ( (self.heat < 400.000) ) {

                  self.heat = (self.heat + 3.000);

               }
               if ( (self.height > 30.000) ) {

                  self.height = (self.height - 5.000);
                  TF_zoom (self.height);

               }

            } else {

               tv = self.velocity;
               tv_z = 0.000;
               if ( (vlen (tv) <= 50.000) ) {

                  SniperSight_Create ();
                  self.heat = 50.000;
                  self.height = 90.000;
                  self.tfstate = (self.tfstate | 2048.000);
                  TeamFortress_SetSpeed (self);

               }

            }

         } else {

            if ( (self.current_weapon == 32768.000) ) {

               if ( (self.flags & 512.000) ) {

                  SuperDamageSound ();
                  W_Attack ();

               } else {

                  sprint (self,1.000,"You cannot fire the assault cannon without\nyour feet on the ground...\n");

               }

            } else {

               SuperDamageSound ();
               W_Attack ();

            }

         }

      }

   } else {

      if ( (self.playerclass == 0.000) ) {

         self.weaponmode = 0.000;

      } else {

         if ( (self.tfstate & 2048.000) ) {

            W_Attack ();
            self.tfstate = (self.tfstate - 2048.000);
            TeamFortress_SetSpeed (self);
            self.heat = 0.000;

         }

      }

   }

};

void () SuperDamageSound = {

   if ( (self.super_damage_finished > time) ) {

      if ( (self.super_sound < time) ) {

         self.super_sound = (time + 1.000);
         sound (self,4.000,"items/damage3.wav",1.000,1.000);

      }

   }
   return ;

};
