
void () player_pain;

void () player_stand1;

void (vector org) spawn_tfog;

void (vector org, entity death_owner) spawn_tdeath;
float modelindex_eyes /* = 0.000 */;
float modelindex_player /* = 0.000 */;
float modelindex_null /* = 0.000 */;

void () TeamFortress_CheckTeamCheats;

void (entity Viewer, float pc, float rpc) TeamFortress_PrintClassName;

void () TeamFortress_RemoveTimers;

void (float Suicided) TeamFortress_SetupRespawn;
float (float pc) IsLegalClass;

void () SetupTeamEqualiser;

void () CeaseFire_think;

void (entity eng) Engineer_RemoveBuildings;

void (string halias, float himpulse1, float himpulse2) TeamFortress_Alias;

void (entity p) CheckAutoKick;

void (entity p) KickCheater;

void () Service_Grapple;

void (entity AD) ParseTFDetect;
entity (float ino) Finditem;

void (entity Item, entity AP, entity Goal) tfgoalitem_GiveToPlayer;

void () CTF_FlagCheck;
string nextmap /* = "" */;
float intermission_running /* = 0.000 */;
float intermission_exittime /* = 0.000 */;

void () info_intermission = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }

};

void () SetChangeParms = {

   if ( (self.health <= 0.000) ) {

      SetNewParms ();
      return ;

   }
   self.items = (self.items - (self.items & (((((131072.000 | 262144.000) | 524288.000) | 1048576.000) | 2097152.000) | 4194304.000)));
   if ( (self.health > 100.000) ) {

      self.health = 100.000;

   }
   if ( (self.health < 50.000) ) {

      self.health = 50.000;

   }
   parm1 = self.items;
   parm2 = self.health;
   parm3 = self.armorvalue;
   if ( (self.ammo_shells < 25.000) ) {

      parm4 = 25.000;

   } else {

      parm4 = self.ammo_shells;

   }
   parm5 = self.ammo_nails;
   parm6 = self.ammo_rockets;
   parm7 = self.ammo_cells;
   parm8 = self.current_weapon;
   parm9 = (self.armortype * 100.000);
   parm10 = toggleflags;
   parm11 = 0.000;
   parm12 = 0.000;
   if ( (toggleflags & 1.000) ) {

      if ( (self.tfstate & 8.000) ) {

         parm11 = (parm11 | 8.000);
         self.playerclass = (1.000 + floor ((random () * (10.000 - 1.000))));
         while ( !IsLegalClass (self.playerclass) ) {

            self.playerclass = (1.000 + floor ((random () * (10.000 - 1.000))));

         }

      }
      parm12 = self.playerclass;

   }
   parm13 = self.StatusBarRes;
   parm14 = self.StatusBarSize;
   parm15 = self.is_admin;

};

void () SetNewParms = {

   parm1 = 0.000;
   parm2 = 100.000;
   parm3 = 0.000;
   parm4 = 25.000;
   parm5 = 0.000;
   parm6 = 0.000;
   parm6 = 0.000;
   parm8 = 1.000;
   parm9 = 0.000;
   parm10 = 0.000;
   parm11 = 0.000;
   parm12 = 0.000;
   parm13 = 0.000;
   parm14 = 0.000;
   parm15 = 0.000;

};

void () autoteam_think = {

   toggleflags = (toggleflags | 64.000);
   dremove (self);

};

void () autokick_think = {

   self.owner.teamkills = 0.000;
   dremove (self);

};

void () DecodeLevelParms = {

   local string st;
   local entity ent;
   local entity te;
   local float ti;
   /* Warning: No local name with offset 10253 */
   /* Warning: No local name with offset 10254 */
   /* Warning: No local name with offset 10255 */
   /* Warning: No local name with offset 10256 */
   /* Warning: No local name with offset 10257 */
   /* Warning: No local name with offset 10258 */
   /* Warning: No local name with offset 10259 */
   /* Warning: No local name with offset 10260 */
   /* Warning: No local name with offset 10261 */
   /* Warning: No local name with offset 10262 */
   /* Warning: No local name with offset 10263 */
   /* Warning: No local name with offset 10264 */
   /* Warning: No local name with offset 10265 */
   /* Warning: No local name with offset 10266 */
   /* Warning: No local name with offset 10267 */
   /* Warning: No local name with offset 10268 */
   /* Warning: No local name with offset 10269 */
   /* Warning: No local name with offset 10270 */
   /* Warning: No local name with offset 10271 */
   local "21?TeamFortress";
   /* Warning: No local name with offset 10273 */
   /* Warning: No local name with offset 10274 */
   /* Warning: No local name with offset 10275 */
   local "info_player_team1";
   /* Warning: No local name with offset 10277 */
   /* Warning: No local name with offset 10278 */
   /* Warning: No local name with offset 10279 */
   /* Warning: No local name with offset 10280 */
   /* Warning: No local name with offset 10281 */
   /* Warning: No local name with offset 10282 */
   /* Warning: No local name with offset 10283 */
   local "sv_maxspeed";
   local "sv_aim";
   local "1";
   local "Mapname: ";
   /* Warning: No local name with offset 10288 */
   /* Warning: No local name with offset 10289 */
   /* Warning: No local name with offset 10290 */
   /* Warning: No local name with offset 10291 */
   /* Warning: No local name with offset 10292 */
   local "temp1";
   /* Warning: No local name with offset 10294 */
   local float autoteam_time;

   if ( serverflags ) {

      if ( (world.model == "maps/start.bsp") ) {

         SetNewParms ();

      }

   }
   self.items = parm1;
   self.health = parm2;
   self.armorvalue = parm3;
   self.ammo_shells = parm4;
   self.ammo_nails = parm5;
   self.ammo_rockets = parm6;
   self.ammo_cells = parm7;
   self.current_weapon = parm8;
   self.armortype = (parm9 * 0.010);
   if ( !(toggleflags & 256.000) ) {

      toggleflags = parm10;
      flagem_checked = 0.000;
      allow_hook = 0.000;
      invis_only = 0.000;
      if ( (coop || !deathmatch) ) {

         toggleflags = (toggleflags | 1.000);

      }
      nextmap = mapname;
      allow_hook = 1.000;
      ent = find (world,classname,"info_tfdetect");
      if ( (ent != world) ) {

         if ( (teamplay == 0.000) ) {

            cvar_set ("teamplay","21?TeamFortress");

         }
         ParseTFDetect (ent);
         if ( ((number_of_teams <= 0.000) || (number_of_teams >= 5.000)) ) {

            number_of_teams = 4.000;

         }

      } else {

         ent = find (world,classname,"info_player_team1");
         if ( ((ent != world) || (CTF_Map == 1.000)) ) {

            CTF_Map = 1.000;
            if ( (teamplay == 0.000) ) {

               cvar_set ("teamplay","21?TeamFortress");

            }
            ent = spawn ();
            ent.nextthink = (time + 30.000);
            ent.think = CTF_FlagCheck;
            number_of_teams = 2.000;

         } else {

            number_of_teams = 4.000;

         }
         cvar_set ("sv_maxspeed","500");
         cvar_set ("sv_aim","1");
         team1lives = -1.000;
         team2lives = -1.000;
         team3lives = -1.000;
         team4lives = -1.000;
         illegalclasses1 = 0.000;
         illegalclasses2 = 0.000;
         illegalclasses3 = 0.000;
         illegalclasses4 = 0.000;
         team1maxplayers = 100.000;
         team2maxplayers = 100.000;
         team3maxplayers = 100.000;
         team4maxplayers = 100.000;
         civilianteams = 0.000;

      }
      bprint (2.000,"Mapname: ");
      bprint (2.000,mapname);
      bprint (2.000,"\n");
      SetupTeamEqualiser ();
      team4frags = 0.000;
      team3frags = 0.000;
      team2frags = 0.000;
      team1frags = 0.000;
      team4score = 0.000;
      team3score = 0.000;
      team2score = 0.000;
      team1score = 0.000;
      autokick_kills = 0.000;
      autokick_time = 0.000;
      cease_fire = 0.000;
      if ( 1.000 ) {

         toggleflags = (toggleflags - (toggleflags & 128.000));

      }
      if ( 0.000 ) {

         toggleflags = (toggleflags | 128.000);

      }
      toggleflags = (toggleflags | 2.000);
      toggleflags = ((toggleflags | 256.000) | cvar ("temp1"));
      autoteam_time = 30.000;
      if ( (!(toggleflags & 1024.000) && (CTF_Map == 0.000)) ) {

         allow_hook = 0.000;

      }
      if ( (toggleflags & 512.000) ) {

         invis_only = 1.000;

      }
      if ( ((toggleflags & 4.000) && (respawn_delay_time == 0.000)) ) {

         respawn_delay_time = 5.000;

      }
      if ( (toggleflags & 64.000) ) {

         toggleflags = (toggleflags - (toggleflags & 64.000));
         ent = spawn ();
         ent.nextthink = (time + autoteam_time);
         ent.think = autoteam_think;

      }

   }
   if ( parm11 ) {

      self.tfstate = parm11;

   }
   if ( (self.playerclass == 0.000) ) {

      self.playerclass = parm12;

   }
   if ( parm13 ) {

      self.StatusBarRes = parm13;

   }
   if ( parm14 ) {

      self.StatusBarSize = parm14;

   }
   if ( parm15 ) {

      self.is_admin = parm15;

   }

};
entity () FindIntermission = {

   local entity spot;
   local float cyc;

   spot = find (world,classname,"info_intermission");
   if ( spot ) {

      cyc = (random () * 1.000);
      return ( spot );

   }
   spot = find (world,classname,"info_player_start");
   if ( spot ) {

      return ( spot );

   }
   spot = find (world,classname,"info_player_deathmatch");
   if ( spot ) {

      cyc = (random () * 6.000);
      while ( (cyc > 1.000) ) {

         spot = find (spot,classname,"info_player_deathmatch");
         if ( !spot ) {

            spot = find (spot,classname,"info_player_deathmatch");

         }
         cyc = (cyc - 1.000);

      }
      return ( spot );

   }
   objerror ("FindIntermission: no spot");

};
float /* Warning: Could not determine return type */ (entity start_point) FindNextIntermission = {

   local entity spot;
   local float cyc;

   if ( deathmatch ) {

      if ( ((start_point.classname == "info_intermission") || (start_point == world)) ) {

         spot = find (start_point,classname,"info_intermission");
         if ( spot ) {

            return ( spot );

         } else {

            start_point = world;

         }

      }
      if ( ((start_point.classname == "info_player_deathmatch") || (start_point == world)) ) {

         spot = find (start_point,classname,"info_player_deathmatch");
         if ( spot ) {

            return ( spot );

         }

      }
      spot = find (world,classname,"info_intermission");
      if ( spot ) {

         return ( spot );

      }
      spot = find (world,classname,"info_player_deathmatch");
      if ( spot ) {

         return ( spot );

      }

   } else {

      spot = find (world,classname,"info_player_start");
      if ( spot ) {

         return ( spot );

      }

   }
   return ( FindIntermission () );

};

void () TF_MovePlayer = {

   local entity place;

   place = FindNextIntermission (self.observer_list);
   self.observer_list = place;
   setorigin (self,(place.origin + '0.000 0.000 1.000'));
   self.angles = place.angles;
   self.fixangle = 1.000;

};

void () GotoNextMap = {

   local float nextlevel;
   local string sl;
   local string st;
   local entity te;

   if ( (nextmap != mapname) ) {

      changelevel (nextmap);
      already_chosen_map = 1.000;

   }
   if ( !already_chosen_map ) {

      nextlevel = cvar ("samelevel");
      nextlevel = (nextlevel + 1.000);
      sl = ftos (nextlevel);
      cvar_set ("samelevel",sl);
      localcmd ("exec mcycle/map");
      localcmd (sl);
      localcmd (".cfg\n");
      already_chosen_map = 1.000;

   }
   if ( (cvar ("samelevel") == 0.000) ) {

      already_chosen_map = 0.000;

   }

};

void () ExitIntermission = {

   dprint ("Exiting intermission...\n");
   if ( deathmatch ) {

      dprint ("Exit Intermission in Deathmatch.\n");
      GotoNextMap ();
      return ;

   }
   intermission_exittime = (time + 1.000);
   intermission_running = (intermission_running + 1.000);
   if ( (intermission_running == 2.000) ) {

      if ( (world.model == "maps/e1m7.bsp") ) {

         WriteByte (2.000,32.000);
         WriteByte (2.000,2.000);
         WriteByte (2.000,3.000);
         if ( !cvar ("registered") ) {

            WriteByte (2.000,31.000);
            WriteString (2.000,"As the corpse of the monstrous entity\nChthon sinks back into the lava whence\nit rose, you grip the Rune of Earth\nMagic tightly. Now that you have\nconquered the Dimension of the Doomed,\nrealm of Earth Magic, you are ready to\ncomplete your task in...");

         } else {

            WriteByte (2.000,31.000);
            WriteString (2.000,"As the corpse of the monstrous entity\nChthon sinks back into the lava whence\nit rose, you grip the Rune of Earth\nMagic tightly. Now that you have\nconquered the Dimension of the Doomed,\nrealm of Earth Magic, you are ready to\ncomplete your task. A...");

         }
         return ;

      } else {

         if ( (world.model == "maps/e2m6.bsp") ) {

            WriteByte (2.000,32.000);
            WriteByte (2.000,2.000);
            WriteByte (2.000,3.000);
            WriteByte (2.000,31.000);
            WriteString (2.000,"The Rune of Black Magic throbs evilly in\nyour hand and whispers dark thoughts\ninto your brain. You learn the inmost\nlore of the Hell-Mother; Shub-Niggurath!\nYou now know that she is behind all the\nterrible plotting which has led to so\nmuch death...");
            return ;

         } else {

            if ( (world.model == "maps/e3m6.bsp") ) {

               WriteByte (2.000,32.000);
               WriteByte (2.000,2.000);
               WriteByte (2.000,3.000);
               WriteByte (2.000,31.000);
               WriteString (2.000,"The charred viscera of diabolic horrors\nbubble viscously as you seize the Rune\nof Hell Magic. Its heat scorches your\nhand, and its terrible secrets blight\nyour mind. Gathering the shreds of your\ncourage, you shake the devil's shackles\nfrom your ...");
               return ;

            } else {

               if ( (world.model == "maps/e4m7.bsp") ) {

                  WriteByte (2.000,32.000);
                  WriteByte (2.000,2.000);
                  WriteByte (2.000,3.000);
                  WriteByte (2.000,31.000);
                  WriteString (2.000,"Despite the awful might of the Elder\nWorld, you have achieved the Rune of\nElder Magic, capstone of all types of\narcane wisdom. Beyond good and evil,\nbeyond life and death, the Rune\npulsates, heavy with import. Patient and\npotent, the Elder Being...");
                  return ;

               }

            }

         }

      }
      GotoNextMap ();

   }
   if ( (intermission_running == 3.000) ) {

      if ( !cvar ("registered") ) {

         WriteByte (2.000,33.000);
         return ;

      }
      if ( ((serverflags & 15.000) == 15.000) ) {

         WriteByte (2.000,31.000);
         WriteString (2.000,"Now, you have all four Runes. You sense\ntremendous invisible forces moving to\nunseal ancient barriers. Shub-Niggurath\nhad hoped to use the Runes Herself to\nclear off the Earth, but now instead,\nyou will use them to enter her home and\nconfront he...");
         return ;

      }

   }
   dprint ("Exit Intermission.\n");
   GotoNextMap ();

};

void () IntermissionThink = {

   local float minp;
   local float maxp;
   local float currp;
   local string sl;
   local string st;

   if ( (time < intermission_exittime) ) {

      return ;

   }
   if ( ((!self.button0 && !self.button1) && !self.button2) ) {

      return ;

   }
   ExitIntermission ();

};

void () execute_changelevel = {

   local entity pos;

   intermission_running = 1.000;
   if ( deathmatch ) {

      intermission_exittime = (time + 5.000);

   } else {

      intermission_exittime = (time + 2.000);

   }
   WriteByte (2.000,32.000);
   WriteByte (2.000,3.000);
   WriteByte (2.000,3.000);
   pos = FindIntermission ();
   other = find (world,classname,"player");
   while ( (other != world) ) {

      other.view_ofs = '0.000 0.000 0.000';
      other.v_angle = pos.mangle;
      other.angles = pos.mangle;
      other.fixangle = 1.000;
      other.nextthink = (time + 0.500);
      other.takedamage = 0.000;
      other.solid = 0.000;
      other.movetype = 0.000;
      other.modelindex = 0.000;
      setorigin (other,pos.origin);
      other = find (other,classname,"player");

   }
   WriteByte (2.000,30.000);

};

void () changelevel_touch = {

   local entity pos;
   local float ne;
   local string st;

   if ( (other.classname != "player") ) {

      return ;

   }
   if ( ((cvar ("noexit") == 1.000) || ((cvar ("noexit") == 2.000) && (mapname != "start"))) ) {

      T_Damage (other,self,self,50000.000);
      return ;

   }
   bprint (2.000,other.netname);
   bprint (2.000," exited the level\n");
   nextmap = self.map;
   SUB_UseTargets ();
   if ( ((self.spawnflags & 1.000) && (deathmatch == 0.000)) ) {

      GotoNextMap ();
      return ;

   }
   self.touch = SUB_Null;
   self.think = execute_changelevel;
   self.nextthink = (time + 0.100);

};

void () trigger_changelevel = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }
   if ( !self.map ) {

      objerror ("changelevel trigger doesn't have map");

   }
   InitTrigger ();
   self.touch = changelevel_touch;

};

void () set_suicide_frame;

void () respawn = {

   if ( (self.has_disconnected == 1.000) ) {

      return ;

   }
   if ( cease_fire ) {

      return ;

   }
   if ( coop ) {

      CopyToBodyQue (self);
      setspawnparms (self);
      PutClientInServer ();

   } else {

      if ( deathmatch ) {

         CopyToBodyQue (self);
         SetNewParms ();
         PutClientInServer ();

      } else {

         localcmd ("restart\n");

      }

   }

};

void () ClientKill = {

   local entity te;

   if ( (self.has_disconnected == 1.000) ) {

      return ;

   }
   if ( (self.suicide_time > time) ) {

      return ;

   }
   if ( self.deadflag ) {

      return ;

   }
   if ( (self.playerclass == 0.000) ) {

      return ;

   }
   self.suicide_time = ((time + 5.000) + (random () * 5.000));
   bprint (1.000,self.netname);
   bprint (1.000," suicides\n");
   set_suicide_frame ();
   self.modelindex = modelindex_player;
   if ( (self.tfstate & 16.000) ) {

      te = find (world,classname,"timer");
      while ( te ) {

         if ( ((te.owner == self) && (te.think == BioInfection_Decay)) ) {

            TF_AddFrags (te.enemy,1.000);

         }
         te = find (te,classname,"timer");

      }

   }
   TF_AddFrags (self,-1.000);
   self.weaponmodel = "";
   self.view_ofs = '0.000 0.000 -8.000';
   self.movetype = 0.000;
   TeamFortress_RemoveTimers ();
   TeamFortress_SetupRespawn (1.000);
   self.health = -1.000;
   self.th_die ();
   self.deadflag = 3.000;
   self.tfstate = (self.tfstate | 8192.000);
   self.takedamage = 0.000;

};
entity lastspawn_team1;
entity lastspawn_team2;
entity lastspawn_team3;
entity lastspawn_team4;
(null) (float team_num) FindTeamSpawnPoint = {

   local entity spot;
   local entity at_spot;
   local float spot_found;
   local float attempts;

   if ( (team_num == 1.000) ) {

      spot = lastspawn_team1;
      attempts = 0.000;
      while ( 1.000 ) {

         attempts = (attempts + 1.000);
         spot = find (spot,team_str_home,"ts1");
         if ( (spot == world) ) {

            spot = find (world,team_str_home,"ts1");

         }
         if ( (spot == world) ) {

            return ( world );

         }
         at_spot = findradius (spot.origin,40.000);
         spot_found = 1.000;
         while ( (at_spot != world) ) {

            if ( ((at_spot.classname == "player") && (at_spot.deadflag == 0.000)) ) {

               spot_found = 0.000;

            }
            at_spot = at_spot.chain;

         }
         if ( !Activated (spot,self) ) {

            spot_found = 0.000;

         }
         if ( (spot_found || (attempts >= 30.000)) ) {

            lastspawn_team1 = spot;
            return ( spot );

         }

      }

   } else {

      if ( (team_num == 2.000) ) {

         spot = lastspawn_team2;
         attempts = 0.000;
         while ( 1.000 ) {

            attempts = (attempts + 1.000);
            spot = find (spot,team_str_home,"ts2");
            if ( (spot == world) ) {

               spot = find (world,team_str_home,"ts2");

            }
            if ( (spot == world) ) {

               return ( world );

            }
            at_spot = findradius (spot.origin,40.000);
            spot_found = 1.000;
            while ( (at_spot != world) ) {

               if ( ((at_spot.classname == "player") && (at_spot.deadflag == 0.000)) ) {

                  spot_found = 0.000;

               }
               at_spot = at_spot.chain;

            }
            if ( !Activated (spot,self) ) {

               spot_found = 0.000;

            }
            if ( (spot_found || (attempts >= 30.000)) ) {

               lastspawn_team2 = spot;
               return ( spot );

            }

         }

      } else {

         if ( (team_num == 3.000) ) {

            spot = lastspawn_team3;
            attempts = 0.000;
            while ( 1.000 ) {

               attempts = (attempts + 1.000);
               spot = find (spot,team_str_home,"ts3");
               if ( (spot == world) ) {

                  spot = find (world,team_str_home,"ts3");

               }
               if ( (spot == world) ) {

                  return ( world );

               }
               at_spot = findradius (spot.origin,40.000);
               spot_found = 1.000;
               while ( (at_spot != world) ) {

                  if ( ((at_spot.classname == "player") && (at_spot.deadflag == 0.000)) ) {

                     spot_found = 0.000;

                  }
                  at_spot = at_spot.chain;

               }
               if ( !Activated (spot,self) ) {

                  spot_found = 0.000;

               }
               if ( (spot_found || (attempts >= 30.000)) ) {

                  lastspawn_team3 = spot;
                  return ( spot );

               }

            }

         } else {

            if ( (team_num == 4.000) ) {

               spot = lastspawn_team4;
               attempts = 0.000;
               while ( 1.000 ) {

                  attempts = (attempts + 1.000);
                  spot = find (spot,team_str_home,"ts4");
                  if ( (spot == world) ) {

                     spot = find (world,team_str_home,"ts4");

                  }
                  if ( (spot == world) ) {

                     return ( world );

                  }
                  at_spot = findradius (spot.origin,40.000);
                  spot_found = 1.000;
                  while ( (at_spot != world) ) {

                     if ( ((at_spot.classname == "player") && (at_spot.deadflag == 0.000)) ) {

                        spot_found = 0.000;

                     }
                     at_spot = at_spot.chain;

                  }
                  if ( !Activated (spot,self) ) {

                     spot_found = 0.000;

                  }
                  if ( (spot_found || (attempts >= 30.000)) ) {

                     lastspawn_team4 = spot;
                     return ( spot );

                  }

               }

            }

         }

      }

   }
   return ( world );

};
entity () SelectSpawnPoint = {

   local entity spot;
   local entity at_spot;
   local float spot_found;
   local float attempts;

   if ( (self.team_no != 0.000) ) {

      spot = FindTeamSpawnPoint (self.team_no);
      if ( (spot != world) ) {

         return ( spot );

      }

   }
   if ( coop ) {

      lastspawn = find (lastspawn,classname,"info_player_coop");
      if ( (lastspawn == world) ) {

         lastspawn = find (world,classname,"info_player_coop");

      }
      if ( (lastspawn != world) ) {

         return ( lastspawn );

      }

   } else {

      if ( deathmatch ) {

         spot = find (lastspawn,classname,"info_player_deathmatch");
         if ( (spot == world) ) {

            spot = find (world,classname,"info_player_deathmatch");

         }
         attempts = 0.000;
         while ( ((spot != world) && (attempts < 100.000)) ) {

            attempts = (attempts + 1.000);
            at_spot = findradius (spot.origin,40.000);
            spot_found = 1.000;
            while ( at_spot ) {

               if ( ((at_spot.classname == "player") && (at_spot.deadflag == 0.000)) ) {

                  spot_found = 0.000;

               }
               at_spot = at_spot.chain;

            }
            if ( (spot_found || (attempts >= 10.000)) ) {

               lastspawn = spot;
               return ( spot );

            }
            spot = find (spot,classname,"info_player_deathmatch");
            if ( (spot == world) ) {

               spot = find (world,classname,"info_player_deathmatch");

            }

         }

      }

   }
   if ( serverflags ) {

      spot = find (world,classname,"info_player_start2");
      if ( spot ) {

         return ( spot );

      }

   }
   spot = find (world,classname,"info_player_start");
   if ( !spot ) {

      error ("PutClientInServer: no info_player_start on level\n");

   }
   return ( spot );

};

void () PlayerDie;

void () TeamFortress_SetHealth;

void () TeamFortress_SetEquipment;

void () player_touch;

void () PutClientInServer = {

   local string st;
   local float iszoom;
   local float oldclass;
   local entity spot;
   local entity te;

   self.touch = player_touch;
   self.classname = "player";
   self.health = 100.000;
   self.solid = 3.000;
   self.movetype = 3.000;
   self.show_hostile = 0.000;
   self.FlashTime = 0.000;
   self.max_health = 100.000;
   self.flags = 8.000;
   self.air_finished = (time + 12.000);
   self.dmg = 2.000;
   self.super_damage_finished = 0.000;
   self.radsuit_finished = 0.000;
   self.invisible_finished = 0.000;
   self.invincible_finished = 0.000;
   self.effects = 0.000;
   self.invincible_time = 0.000;
   self.reload_shotgun = 0.000;
   self.reload_super_shotgun = 0.000;
   self.reload_grenade_launcher = 0.000;
   self.reload_rocket_launcher = 0.000;
   self.immune_to_check = (time + 10.000);
   self.on_hook = 0.000;
   self.hook_out = 0.000;
   self.fire_held_down = 0.000;
   DecodeLevelParms ();
   if ( coop ) {

      teamplay = 21.000;
      cvar_set ("teamplay","21?TeamFortress");
      TeamFortress_TeamSet (1.000);

   }
   if ( (self.playerclass == 0.000) ) {

      if ( TeamFortress_TeamIsCivilian (self.team_no) ) {

         self.impulse = 1.000;
         TeamFortress_ChangeClass ();

      }

   }
   if ( ((deathmatch == 3.000) && (self.nextpc != 0.000)) ) {

      self.playerclass = self.nextpc;
      self.nextpc = 0.000;
      if ( (self.playerclass == 10.000) ) {

         self.tfstate = (self.tfstate | 8.000);

      } else {

         self.tfstate = (self.tfstate - (self.tfstate & 8.000));

      }

   }
   iszoom = 0.000;
   if ( (self.tfstate & 4096.000) ) {

      iszoom = 1.000;

   }
   if ( (self.tfstate & 8.000) ) {

      oldclass = self.playerclass;
      self.playerclass = (1.000 + floor ((random () * (10.000 - 1.000))));
      while ( (!IsLegalClass (self.playerclass) || (self.playerclass == oldclass)) ) {

         self.playerclass = (1.000 + floor ((random () * (10.000 - 1.000))));

      }
      self.tfstate = 8.000;

   } else {

      self.tfstate = 0.000;

   }
   if ( (iszoom == 1.000) ) {

      self.tfstate = (self.tfstate | 4096.000);

   }
   if ( (self.playerclass != 9.000) ) {

      Engineer_RemoveBuildings (self);

   }
   self.takedamage = 2.000;
   TeamFortress_PrintClassName (self,self.playerclass,(self.tfstate & 8.000));
   TeamFortress_SetEquipment ();
   TeamFortress_SetHealth ();
   TeamFortress_SetSpeed (self);
   TeamFortress_SetSkin (self);
   stuffcmd (self,"v_idlescale 0\nfov 90\n");
   stuffcmd (self,"v_cshift; wait; bf\n");
   W_SetCurrentAmmo ();
   self.attack_finished = (time + 0.300);
   self.th_pain = player_pain;
   self.th_die = PlayerDie;
   if ( (self.height != 0.000) ) {

      self.height = 0.000;
      TF_zoom (90.000);

   }
   self.deadflag = 0.000;
   self.pausetime = 0.000;
   spot = SelectSpawnPoint ();
   if ( (self.playerclass != 0.000) ) {

      spawn_tdeath (spot.origin,self);

   }
   self.observer_list = spot;
   self.origin = (spot.origin + '0.000 0.000 1.000');
   self.angles = spot.angles;
   self.fixangle = 1.000;
   if ( ((spot.classname == "info_player_teamspawn") && (cb_prematch_time < time)) ) {

      if ( (spot.items != 0.000) ) {

         te = Finditem (spot.items);
         if ( te ) {

            tfgoalitem_GiveToPlayer (te,self,self);

         }
         if ( !(spot.goal_activation & 1.000) ) {

            spot.items = 0.000;

         }

      }
      if ( spot.message ) {

         CenterPrint (self,spot.message);
         if ( !(spot.goal_activation & 2.000) ) {

            spot.message = string_null;

         }

      }
      if ( (spot.activate_goal_no != 0.000) ) {

         te = Findgoal (spot.activate_goal_no);
         if ( te ) {

            AttemptToActivate (te,self,spot);

         }

      }
      if ( (spot.goal_effects == 1.000) ) {

         spot.classname = "deadpoint";
         spot.team_str_home = string_null;
         spot.nextthink = (time + 1.000);
         spot.think = SUB_Remove;

      }

   }
   setmodel (self,"progs/eyes.mdl");
   modelindex_eyes = self.modelindex;
   setmodel (self,"progs/player.mdl");
   modelindex_player = self.modelindex;
   if ( (self.playerclass == 0.000) ) {

      setmodel (self,string_null);
      self.current_menu = 1.000;

   }
   setsize (self,'-16.000 -16.000 -24.000','16.000 16.000 32.000');
   self.view_ofs = '0.000 0.000 22.000';
   self.velocity = '0.000 0.000 0.000';
   player_stand1 ();
   if ( (deathmatch || coop) ) {

      makevectors (self.angles);
      if ( (self.playerclass != 0.000) ) {

         spawn_tfog ((self.origin + (v_forward * 20.000)));

      }

   }
   if ( cease_fire ) {

      sprint (self,2.000,"\n\nCEASE FIRE MODE\n");
      self.immune_to_check = (time + 10.000);
      self.tfstate = (self.tfstate | 65536.000);
      TeamFortress_SetSpeed (self);

   }

};

void () info_player_start = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }

};

void () info_player_start2 = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }

};

void () testplayerstart = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }

};

void () info_player_deathmatch = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }

};

void () info_player_coop = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }

};

void (entity c) PrintClientScore = {

   if ( ((c.frags > -10.000) && (c.frags < 0.000)) ) {

      bprint (1.000," ");

   } else {

      if ( (c.frags >= 0.000) ) {

         if ( (c.frags < 100.000) ) {

            bprint (1.000," ");

         }
         if ( (c.frags < 10.000) ) {

            bprint (1.000," ");

         }

      }

   }
   bprint (c.frags,ftos (c.frags));
   bprint (1.000," ");
   bprint (1.000,c.netname);
   bprint (1.000,"\n");

};

void () DumpScore = {

   local entity e;
   local entity sort;
   local entity walk;

   if ( world.chain ) {

      error ("DumpScore: world.chain is set");

   }
   e = find (world,classname,"player");
   sort = world;
   while ( e ) {

      if ( !sort ) {

         sort = e;
         e.chain = world;

      } else {

         if ( (e.frags > sort.frags) ) {

            e.chain = sort;
            sort = e;

         } else {

            walk = sort;
            do {

               if ( !walk.chain ) {

                  e.chain = world;
                  walk.chain = e;

               } else {

                  if ( (walk.chain.frags < e.frags) ) {

                     e.chain = walk.chain;
                     walk.chain = e;

                  } else {

                     walk = walk.chain;

                  }

               }

            } while ( (walk.chain != e) );

         }

      }
      e = find (e,classname,"player");

   }
   bprint (1.000,"\n");
   while ( sort ) {

      PrintClientScore (sort);
      sort = sort.chain;

   }
   bprint (1.000,"\n");

};
float already_cycled /* = 0.000 */;

void () NextLevel = {

   local entity o;
   local string st;

   if ( already_cycled ) {

      return ;

   }
   already_cycled = 1.000;
   o = spawn ();
   o.map = nextmap;
   o.think = execute_changelevel;
   o.nextthink = (time + 0.100);

};

void () CheckRules = {

   if ( (timelimit && (time >= timelimit)) ) {

      NextLevel ();

   } else {

      if ( (fraglimit && (self.frags >= fraglimit)) ) {

         NextLevel ();

      }

   }

};

void () PlayerDeathThink = {

   local entity old_self;
   local float forward;

   if ( (self.flags & 512.000) ) {

      forward = vlen (self.velocity);
      forward = (forward - 20.000);
      if ( (forward <= 0.000) ) {

         self.velocity = '0.000 0.000 0.000';

      } else {

         self.velocity = (forward * normalize (self.velocity));

      }

   }
   if ( (self.deadflag == 2.000) ) {

      if ( ((self.button2 || self.button1) || self.button0) ) {

         return ;

      }
      self.deadflag = 3.000;
      self.tfstate = (self.tfstate - (self.tfstate & 8192.000));
      return ;

   }
   if ( ((!self.button2 && !self.button1) && !self.button0) ) {

      if ( (self.tfstate & 8192.000) ) {

         if ( (self.respawn_time <= time) ) {

            self.button0 = 0.000;
            self.button1 = 0.000;
            self.button2 = 0.000;
            respawn ();

         }

      }
      return ;

   } else {

      self.tfstate = (self.tfstate | 8192.000);
      if ( (self.respawn_time <= time) ) {

         self.button0 = 0.000;
         self.button1 = 0.000;
         self.button2 = 0.000;
         respawn ();

      }
      return ;

   }

};

void () PlayerJump = {

   local vector start;
   local vector end;

   if ( (self.has_disconnected == 1.000) ) {

      return ;

   }
   if ( (self.flags & 2048.000) ) {

      return ;

   }
   if ( (self.waterlevel >= 2.000) ) {

      if ( (self.watertype == -3.000) ) {

         self.velocity_z = 100.000;

      } else {

         if ( (self.watertype == -4.000) ) {

            self.velocity_z = 80.000;

         } else {

            self.velocity_z = 50.000;

         }

      }
      if ( (self.swim_flag < time) ) {

         self.swim_flag = (time + 1.000);
         if ( (random () < 0.500) ) {

            sound (self,4.000,"misc/water1.wav",1.000,1.000);

         } else {

            sound (self,4.000,"misc/water2.wav",1.000,1.000);

         }

      }
      return ;

   }
   if ( !(self.flags & 512.000) ) {

      return ;

   }
   if ( !(self.flags & 4096.000) ) {

      return ;

   }
   self.flags = (self.flags - (self.flags & 4096.000));
   self.button2 = 0.000;
   sound (self,4.000,"player/plyrjmp8.wav",1.000,1.000);
   self.velocity_z = (self.velocity_z + 270.000);

};
.float dmgtime;

void () WaterMove = {

   if ( (self.movetype == 8.000) ) {

      return ;

   }
   if ( (self.health < 0.000) ) {

      return ;

   }
   if ( (self.waterlevel != 3.000) ) {

      if ( (self.air_finished < time) ) {

         sound (self,2.000,"player/gasp2.wav",1.000,1.000);

      } else {

         if ( (self.air_finished < (time + 9.000)) ) {

            sound (self,2.000,"player/gasp1.wav",1.000,1.000);

         }

      }
      self.air_finished = (time + 12.000);
      self.dmg = 2.000;

   } else {

      if ( (self.air_finished < time) ) {

         if ( (self.pain_finished < time) ) {

            self.dmg = (self.dmg + 2.000);
            if ( (self.dmg > 15.000) ) {

               self.dmg = 10.000;

            }
            TF_T_Damage (self,world,world,self.dmg,1.000,0.000);
            self.pain_finished = (time + 1.000);

         }

      }

   }
   if ( !self.waterlevel ) {

      if ( (self.flags & 16.000) ) {

         sound (self,4.000,"misc/outwater.wav",1.000,1.000);
         self.flags = (self.flags - 16.000);

      }
      return ;

   }
   if ( (self.watertype == -5.000) ) {

      if ( (self.dmgtime < time) ) {

         if ( (self.radsuit_finished > time) ) {

            self.dmgtime = (time + 1.000);

         } else {

            self.dmgtime = (time + 0.200);

         }
         TF_T_Damage (self,world,world,(10.000 * self.waterlevel),0.000,16.000);

      }

   } else {

      if ( (self.watertype == -4.000) ) {

         if ( ((self.dmgtime < time) && (self.radsuit_finished < time)) ) {

            self.dmgtime = (time + 1.000);
            T_Damage (self,world,world,(4.000 * self.waterlevel));

         }

      }

   }
   if ( !(self.flags & 16.000) ) {

      if ( (self.watertype == -5.000) ) {

         sound (self,4.000,"player/inlava.wav",1.000,1.000);

      }
      if ( (self.watertype == -3.000) ) {

         sound (self,4.000,"player/inh2o.wav",1.000,1.000);

      }
      if ( (self.watertype == -4.000) ) {

         sound (self,4.000,"player/slimbrn2.wav",1.000,1.000);

      }
      self.flags = (self.flags + 16.000);
      self.dmgtime = 0.000;

   }
   if ( !(self.flags & 2048.000) ) {

      self.velocity = (self.velocity - (((0.800 * self.waterlevel) * frametime) * self.velocity));

   }

};

void () CheckWaterJump = {

   local vector start;
   local vector end;

   makevectors (self.angles);
   start = self.origin;
   start_z = (start_z + 8.000);
   v_forward_z = 0.000;
   normalize (v_forward);
   end = (start + (v_forward * 24.000));
   traceline (start,end,1.000,self);
   if ( (trace_fraction < 1.000) ) {

      start_z = ((start_z + self.maxs_z) - 8.000);
      end = (start + (v_forward * 24.000));
      self.movedir = (trace_plane_normal * -50.000);
      traceline (start,end,1.000,self);
      if ( (trace_fraction == 1.000) ) {

         self.flags = (self.flags | 2048.000);
         self.velocity_z = 225.000;
         self.flags = (self.flags - (self.flags & 4096.000));
         self.teleport_time = (time + 2.000);
         return ;

      }

   }

};

void () PlayerPreThink = {

   local float mspeed;
   local float aspeed;
   local float r;
   local vector src;

   if ( (self.is_feigning && (self.waterlevel == 1.000)) ) {

      self.watertype = -3.000;
      self.waterlevel = 3.000;

   }
   if ( (self.cheat_level > 0.000) ) {

      self.cheat_level = (self.cheat_level - 1.000);

   }
   if ( intermission_running ) {

      IntermissionThink ();
      return ;

   }
   makevectors (self.v_angle);
   if ( (self.playerclass == 0.000) ) {

      if ( self.button0 ) {

         self.velocity = (normalize (v_forward) * 300.000);

      }
      if ( ((self.button2 && (self.current_menu == 2.000)) && (self.team_no == 0.000)) ) {

         if ( TeamFortress_TeamPutPlayerInTeam () ) {

            self.current_menu = 3.000;
            self.menu_count = 25.000;

         }

      }

   }
   if ( (self.view_ofs == '0.000 0.000 0.000') ) {

      return ;

   }
   CheckRules ();
   if ( (self.playerclass != 0.000) ) {

      WaterMove ();

   }
   if ( ((self.waterlevel == 2.000) && (self.playerclass != 0.000)) ) {

      CheckWaterJump ();

   }
   if ( (self.deadflag >= 2.000) ) {

      PlayerDeathThink ();
      return ;

   }
   if ( ((self.undercover_team || self.undercover_skin) || self.is_undercover) ) {

      if ( (self.effects & (8.000 | 4.000)) ) {

         sprint (self,1.000,"The glowing removes your disguise.\n");
         Spy_RemoveDisguise (self);

      }

   }
   if ( (self.deadflag == 1.000) ) {

      return ;

   }
   if ( !self.is_feigning ) {

      if ( self.button2 ) {

         PlayerJump ();

      } else {

         self.flags = (self.flags | 4096.000);

      }

   } else {

      if ( self.waterlevel ) {

         self.velocity_z = -100.000;

      }

   }
   if ( ((time < self.pausetime) || (cease_fire == 1.000)) ) {

      self.velocity = '0.000 0.000 0.000';

   }
   if ( (((time > self.attack_finished) && (self.currentammo == 0.000)) && (self.weapon > 16.000)) ) {

      self.weapon = W_BestWeapon ();
      W_SetCurrentAmmo ();

   }
   if ( self.on_hook ) {

      Service_Grapple ();

   }

};

void () CheckPowerups = {

   local float lighton;
   local entity te;

   if ( (self.health <= 0.000) ) {

      return ;

   }
   if ( ((self.is_undercover == 1.000) && (invis_only == 1.000)) ) {

      self.frame = 0.000;
      self.modelindex = modelindex_eyes;

   } else {

      if ( self.invisible_finished ) {

         if ( (self.tfstate & 64.000) ) {

            if ( (self.invisible_finished < (time + 10.000)) ) {

               self.invisible_finished = (time + 666.000);

            }

         }
         if ( (self.invisible_sound < time) ) {

            sound (self,0.000,"items/inv3.wav",0.500,2.000);
            self.invisible_sound = (time + ((random () * 3.000) + 1.000));

         }
         if ( (self.invisible_finished < (time + 3.000)) ) {

            if ( (self.invisible_time == 1.000) ) {

               sprint (self,2.000,"Ring of Shadows magic is fading\n");
               stuffcmd (self,"bf\n");
               sound (self,0.000,"items/inv2.wav",1.000,1.000);
               self.invisible_time = (time + 1.000);

            }
            if ( (self.invisible_time < time) ) {

               self.invisible_time = (time + 1.000);
               stuffcmd (self,"bf\n");

            }

         }
         if ( (self.invisible_finished < time) ) {

            self.items = (self.items - 524288.000);
            self.invisible_finished = 0.000;
            self.invisible_time = 0.000;

         }
         self.frame = 0.000;
         self.modelindex = modelindex_eyes;

      } else {

         self.modelindex = modelindex_player;

      }

   }
   if ( self.invincible_finished ) {

      if ( (self.tfstate & 32.000) ) {

         if ( (self.invincible_finished < (time + 10.000)) ) {

            self.invincible_finished = (time + 666.000);

         }

      }
      if ( (self.invincible_finished < (time + 3.000)) ) {

         if ( (self.invincible_time == 1.000) ) {

            sprint (self,2.000,"Protection is almost burned out\n");
            stuffcmd (self,"bf\n");
            sound (self,0.000,"items/protect2.wav",1.000,1.000);
            self.invincible_time = (time + 1.000);

         }
         if ( (self.invincible_time < time) ) {

            self.invincible_time = (time + 1.000);
            stuffcmd (self,"bf\n");

         }

      }
      if ( (self.invincible_finished < time) ) {

         self.items = (self.items - 1048576.000);
         self.invincible_time = 0.000;
         self.invincible_finished = 0.000;

      }
      if ( (self.invincible_finished > time) ) {

         self.effects = (self.effects | 8.000);
         self.effects = (self.effects | 128.000);

      } else {

         lighton = 0.000;
         te = find (world,classname,"item_tfgoal");
         while ( te ) {

            if ( (te.owner == self) ) {

               if ( (te.goal_activation & 1.000) ) {

                  lighton = 1.000;

               }

            }
            te = find (te,classname,"item_tfgoal");

         }
         if ( !lighton ) {

            self.effects = (self.effects - (self.effects & 8.000));
            self.effects = (self.effects - (self.effects & 128.000));

         }

      }

   }
   if ( self.super_damage_finished ) {

      if ( (self.tfstate & 128.000) ) {

         if ( (self.super_damage_finished == (time + 10.000)) ) {

            self.super_damage_finished = (time + 666.000);

         }

      }
      if ( (self.super_damage_finished < (time + 3.000)) ) {

         if ( (self.super_time == 1.000) ) {

            sprint (self,2.000,"Quad Damage is wearing off\n");
            stuffcmd (self,"bf\n");
            sound (self,0.000,"items/damage2.wav",1.000,1.000);
            self.super_time = (time + 1.000);

         }
         if ( (self.super_time < time) ) {

            self.super_time = (time + 1.000);
            stuffcmd (self,"bf\n");

         }

      }
      if ( (self.super_damage_finished < time) ) {

         self.items = (self.items - 4194304.000);
         self.super_damage_finished = 0.000;
         self.super_time = 0.000;

      }
      if ( (self.super_damage_finished > time) ) {

         self.effects = (self.effects | 8.000);
         self.effects = (self.effects | 64.000);

      } else {

         lighton = 0.000;
         te = find (world,classname,"item_tfgoal");
         while ( te ) {

            if ( (te.owner == self) ) {

               if ( (te.goal_activation & 1.000) ) {

                  lighton = 1.000;

               }

            }
            te = find (te,classname,"item_tfgoal");

         }
         if ( !lighton ) {

            self.effects = (self.effects - (self.effects & 8.000));
            self.effects = (self.effects - (self.effects & 64.000));

         }

      }

   }
   if ( self.radsuit_finished ) {

      self.air_finished = (time + 12.000);
      if ( (self.tfstate & 256.000) ) {

         if ( (self.radsuit_finished == (time + 10.000)) ) {

            self.radsuit_finished = (time + 666.000);

         }

      }
      if ( (self.radsuit_finished < (time + 3.000)) ) {

         if ( (self.rad_time == 1.000) ) {

            sprint (self,2.000,"Air supply in Biosuit expiring\n");
            stuffcmd (self,"bf\n");
            sound (self,0.000,"items/suit2.wav",1.000,1.000);
            self.rad_time = (time + 1.000);

         }
         if ( (self.rad_time < time) ) {

            self.rad_time = (time + 1.000);
            stuffcmd (self,"bf\n");

         }

      }
      if ( (self.radsuit_finished < time) ) {

         self.items = (self.items - 2097152.000);
         self.rad_time = 0.000;
         self.radsuit_finished = 0.000;

      }

   }

};

void () PlayerPostThink = {

   local float mspeed;
   local float aspeed;
   local float r;
   local float fdmg;

   if ( (self.view_ofs == '0.000 0.000 0.000') ) {

      return ;

   }
   if ( self.deadflag ) {

      DeadImpulses ();
      self.impulse = 0.000;
      return ;

   }
   if ( (((self.jump_flag < -300.000) && (self.flags & 512.000)) && (self.health > 0.000)) ) {

      if ( (self.watertype == -3.000) ) {

         sound (self,4.000,"player/h2ojump.wav",1.000,1.000);

      } else {

         if ( (self.jump_flag < -650.000) ) {

            fdmg = 5.000;
            fdmg = ((fdmg * (self.jump_flag / 300.000)) * -1.000);
            if ( (self.playerclass == 1.000) ) {

               fdmg = (fdmg / 2.000);

            } else {

               if ( (self.playerclass == 6.000) ) {

                  fdmg = (fdmg * 1.500);

               }

            }
            fdmg = rint (fdmg);
            TF_T_Damage (self,world,world,fdmg,1.000,0.000);
            sound (self,2.000,"player/land2.wav",1.000,1.000);
            self.deathtype = "falling";

         } else {

            sound (self,2.000,"player/land.wav",1.000,1.000);

         }

      }

   }
   self.jump_flag = self.velocity_z;
   CheckPowerups ();
   W_WeaponFrame ();
   if ( (self.motd <= 95.000) ) {

      TeamFortress_MOTD ();

   } else {

      if ( (self.cheat_check == 0.000) ) {

         self.cheat_check = (time + 5.000);

      } else {

         if ( ((time > self.StatusRefreshTime) && (self.StatusBarSize != 0.000)) ) {

            RefreshStatusBar (self);

         }

      }

   }
   if ( (self.cheat_check <= time) ) {

      TeamFortress_CheckTeamCheats ();
      self.cheat_check = (time + 1.000);

   }

};

void () ClientConnect = {

   local entity te;
   local string st;
   local string st2;
   local float got_one;

   bprint (2.000,self.netname);
   bprint (2.000," entered the game\n");
   if ( (0.000 == 0.000) ) {

      self.tfstate = (self.tfstate | 4096.000);

   }
   self.motd = 0.000;
   self.got_aliases = 0.000;
   self.has_disconnected = 0.000;
   if ( intermission_running ) {

      GotoNextMap ();

   }

};

void () ClientDisconnect = {

   local entity te;
   local string st;
   local float fr;

   if ( gameover ) {

      return ;

   }
   fr = rint (self.frags);
   st = ftos (fr);
   bprint4 (2.000,self.netname," left the game with ",st," frags\n");
   sound (self,4.000,"player/tornoff2.wav",1.000,0.000);
   self.has_disconnected = 1.000;
   TeamFortress_RemoveTimers ();
   Engineer_RemoveBuildings (self);
   te = find (world,classname,"detpack");
   while ( te ) {

      if ( (te.owner == self) ) {

         if ( (te.weaponmode == 1.000) ) {

            te.enemy.pausetime = time;
            dremove (te.oldenemy);
            dremove (te.observer_list);

         }
         dremove (te);
         te = world;

      }
      te = find (te,classname,"detpack");

   }
   if ( (clanbattle && (self.tf_id != 0.000)) ) {

      te = spawn ();
      te.classname = "ghost";
      te.tf_id = self.tf_id;
      te.team_no = self.team_no;
      te.frags = self.frags;
      te.real_frags = self.real_frags;
      te.netname = self.netname;
      te.playerclass = self.playerclass;
      if ( (self.tfstate & 8.000) ) {

         te.tfstate = 8.000;

      }

   }
   set_suicide_frame ();
   self.netname = string_null;
   self.team_no = 0.000;
   self.solid = 0.000;
   setsize (self,'0.000 0.000 0.000','0.000 0.000 0.000');

};

void (entity targ, entity attacker) ClientObituary = {

   local float rnum;
   local string deathstring;
   local string deathstring2;
   local float attackerteam;
   local float targteam;
   local entity te;

   rnum = random ();
   if ( ((cb_prematch_time + 3.000) > time) ) {

      return ;

   }
   if ( (targ.classname == "player") ) {

      if ( (attacker.classname == "teledeath") ) {

         bprint (1.000,targ.netname);
         bprint (1.000," was telefragged by ");
         bprint (1.000,attacker.owner.netname);
         bprint (1.000,"\n");
         if ( ((attacker.owner.team_no != targ.team_no) || (attacker.owner.team_no < 1.000)) ) {

            TF_AddFrags (attacker.owner,1.000);

         }
         return ;

      }
      if ( (attacker.classname == "teledeath2") ) {

         bprint (1.000,"Satan's power deflects ");
         bprint (1.000,targ.netname);
         bprint (1.000,"'s telefrag\n");
         TF_AddFrags (targ,-1.000);
         return ;

      }
      if ( (deathmsg == 37.000) ) {

         bprint (1.000,targ.netname);
         bprint (1.000," shoots his teammate one too many times.\n");
         return ;

      }
      if ( ((attacker.classname == "info_tfgoal") || (attacker.classname == "item_tfgoal")) ) {

         if ( (attacker.deathtype != "") ) {

            bprint (1.000,targ.netname);
            bprint (1.000,attacker.deathtype);

         }
         return ;

      }
      if ( ((attacker.classname == "player") || (attacker.classname == "bot")) ) {

         if ( (targ == attacker) ) {

            TF_AddFrags (attacker,-1.000);
            bprint (1.000,targ.netname);
            if ( (deathmsg == 8.000) ) {

               if ( (targ.playerclass == 2.000) ) {

                  deathstring = " got splattered by his own grenade\n";

               } else {

                  if ( (targ.playerclass == 3.000) ) {

                     deathstring = " sat on his own grenade\n";

                  } else {

                     if ( (targ.playerclass == 4.000) ) {

                        deathstring = " got to know his grenade too well\n";

                     } else {

                        if ( (targ.playerclass == 5.000) ) {

                           deathstring = " caught the end of his own grenade\n";

                        } else {

                           if ( (targ.playerclass == 6.000) ) {

                              deathstring = " got too close to his own grenade\n";

                           } else {

                              if ( (targ.playerclass == 7.000) ) {

                                 deathstring = " let his own grenade get the best of him\n";

                              } else {

                                 if ( (targ.playerclass == 8.000) ) {

                                    deathstring = " tiptoed over his own grenade\n";

                                 } else {

                                    if ( (targ.playerclass == 9.000) ) {

                                       deathstring = " stared at his grenade too long\n";

                                    } else {

                                       deathstring = " grenades himself\n";

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            } else {

               if ( (deathmsg == 9.000) ) {

                  deathstring = " hammers himself\n";

               } else {

                  if ( (deathmsg == 10.000) ) {

                     if ( (targ.playerclass == 4.000) ) {

                        deathstring = " practiced his own Mirv dance\n";

                     } else {

                        if ( (targ.playerclass == 6.000) ) {

                           deathstring = " allowed his Mirv to turn against him\n";

                        } else {

                           deathstring = " goes to pieces\n";

                        }

                     }

                  } else {

                     if ( (deathmsg == 11.000) ) {

                        deathstring = " ambushes himself with his own pipebombs\n";

                     } else {

                        if ( (deathmsg == 40.000) ) {

                           deathstring = " tried to juggle his own pipebombs\n";

                        } else {

                           if ( (deathmsg == 24.000) ) {

                              deathstring = " chokes on his own gas\n";

                           } else {

                              if ( (deathmsg == 30.000) ) {

                                 deathstring = " explodes his ammo and body\n";

                              } else {

                                 if ( (deathmsg == 41.000) ) {

                                    deathstring = " stepped on too many of his own caltrops\n";

                                 } else {

                                    if ( (deathmsg == 35.000) ) {

                                       deathstring = " is charred by his own flash grenade\n";

                                    } else {

                                       if ( (deathmsg == 31.000) ) {

                                          deathstring = " detonates an ammo box too close to him\n";

                                       } else {

                                          if ( (deathmsg == 12.000) ) {

                                             deathstring = " set the detpack and forgot to run\n";

                                          } else {

                                             if ( (deathmsg == 13.000) ) {

                                                deathstring = " died impossibly!\n";

                                             } else {

                                                if ( (deathmsg == 6.000) ) {

                                                   if ( rnum ) {

                                                      deathstring = " becomes bored with life\n";

                                                   } else {

                                                      deathstring = " checks if his weapon is loaded\n";

                                                   }

                                                } else {

                                                   if ( (deathmsg == 33.000) ) {

                                                      deathstring = " chars himself with an incendiary rocket\n";

                                                   } else {

                                                      if ( (deathmsg == 5.000) ) {

                                                         deathstring = " tries to put the pin back in\n";

                                                      } else {

                                                         if ( (deathmsg == 15.000) ) {

                                                            deathstring = " torches himself\n";

                                                         } else {

                                                            if ( ((deathmsg == 7.000) && (targ.waterlevel > 1.000)) ) {

                                                               bprint (1.000," discharges into the water.\n");
                                                               return ;

                                                            } else {

                                                               if ( (deathmsg == 38.000) ) {

                                                                  deathstring = " gets too friendly with his sentrygun.\n";

                                                               } else {

                                                                  if ( (deathmsg == 39.000) ) {

                                                                     deathstring = " dispenses with himself.\n";

                                                                  }

                                                               }

                                                            }

                                                         }

                                                      }

                                                   }

                                                }

                                             }

                                          }

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }
            bprint (1.000,deathstring);
            return ;

         } else {

            if ( ((teamplay && (attacker.team_no == targ.team_no)) && (attacker.team_no > 0.000)) ) {

               TF_AddFrags (attacker,-1.000);
               if ( (targ.undercover_team == 0.000) ) {

                  attacker.teamkills = (attacker.teamkills + 1.000);

               }
               deathstring2 = "\n";
               if ( (rnum < 0.250) ) {

                  deathstring = " mows down teammate ";
                  deathstring2 = "\n";

               } else {

                  if ( (rnum < 0.500) ) {

                     deathstring = " checks his glasses after killing ";
                     deathstring2 = "\n";

                  } else {

                     if ( (rnum < 0.750) ) {

                        deathstring = " gets a frag for the other team with ";
                        deathstring2 = "'s death\n";

                     } else {

                        deathstring = " killed his supposed friend ";
                        deathstring2 = "\n";

                     }

                  }

               }
               if ( (deathmsg == 23.000) ) {

                  bprint (1.000,targ.netname);
                  bprint (1.000," didn't survive the operation by ");
                  bprint (1.000,attacker.netname);
                  bprint (1.000,"\n");
                  return ;

               }
               bprint (1.000,attacker.netname);
               bprint (1.000,deathstring);
               bprint (1.000,targ.netname);
               bprint (1.000,deathstring2);
               CheckAutoKick (attacker);
               return ;

            } else {

               TF_AddFrags (attacker,1.000);
               if ( (deathmsg == 8.000) ) {

                  if ( (attacker.playerclass == 2.000) ) {

                     deathstring = " got up-close and personal with ";
                     deathstring2 = "'s grenade\n";

                  } else {

                     if ( (attacker.playerclass == 3.000) ) {

                        deathstring = " played catch with ";
                        deathstring2 = "'s grenade\n";

                     } else {

                        if ( (attacker.playerclass == 4.000) ) {

                           deathstring = " received a pineapple enema from ";
                           deathstring2 = "\n";

                        } else {

                           if ( (attacker.playerclass == 5.000) ) {

                              deathstring = " fetched ";
                              deathstring2 = "'s pineapple\n";

                           } else {

                              if ( (attacker.playerclass == 6.000) ) {

                                 deathstring = " caught too much shrapnel from ";
                                 deathstring2 = "'s grenade\n";

                              } else {

                                 if ( (attacker.playerclass == 7.000) ) {

                                    deathstring = " tried to pick up ";
                                    deathstring2 = "'s hot potato\n";

                                 } else {

                                    if ( (attacker.playerclass == 8.000) ) {

                                       deathstring = " thought ";
                                       deathstring2 = " was tossing him a spare grenade\n";

                                    } else {

                                       if ( (attacker.playerclass == 9.000) ) {

                                          deathstring = " stops to ponder the technical details of ";
                                          deathstring2 = "'s grenade\n";

                                       } else {

                                          deathstring = " surfs on a grenade from ";
                                          deathstring2 = "\n";

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               } else {

                  if ( (deathmsg == 9.000) ) {

                     deathstring = " gets flayed by ";
                     deathstring2 = "'s nail grenade\n";

                  } else {

                     if ( (deathmsg == 10.000) ) {

                        if ( (attacker.playerclass == 4.000) ) {

                           deathstring = " does a dance on ";
                           deathstring2 = "'s Mirv grenade\n";

                        } else {

                           deathstring = " gets spammed by ";
                           deathstring2 = "'s Mirv grenade\n";

                        }

                     } else {

                        if ( (deathmsg == 11.000) ) {

                           deathstring = " is caught by ";
                           deathstring2 = "'s pipebomb trap\n";

                        } else {

                           if ( (deathmsg == 40.000) ) {

                              deathstring = " fell victim to ";
                              deathstring2 = "'s fireworks\n";

                           } else {

                              if ( (deathmsg == 24.000) ) {

                                 deathstring = " gags on ";
                                 deathstring2 = "'s noxious gasses\n";

                              } else {

                                 if ( (deathmsg == 30.000) ) {

                                    deathstring = "'s ammo detonates him as ";
                                    deathstring2 = "'s EMP fries it\n";

                                 } else {

                                    if ( (deathmsg == 41.000) ) {

                                       deathstring = " stepped on too many of ";
                                       deathstring2 = "'s caltrops\n";

                                    } else {

                                       if ( (deathmsg == 35.000) ) {

                                          deathstring = " is charred by ";
                                          deathstring2 = "'s flash grenade\n";

                                       } else {

                                          if ( (deathmsg == 31.000) ) {

                                             deathstring = " stands near some ammo as ";
                                             deathstring2 = "'s EMP nukes it\n";

                                          } else {

                                             if ( (deathmsg == 12.000) ) {

                                                deathstring = " reaches orbit via ";
                                                deathstring2 = "'s detpack\n";

                                             } else {

                                                if ( (deathmsg == 16.000) ) {

                                                   deathstring = " cut the red wire of ";
                                                   deathstring2 = "'s detpack\n";

                                                } else {

                                                   if ( (deathmsg == 13.000) ) {

                                                      deathstring = " dies from ";
                                                      deathstring2 = "'s mysterious tropical disease\n";

                                                   } else {

                                                      if ( (deathmsg == 14.000) ) {

                                                         deathstring = " escapes infection from ";
                                                         deathstring2 = " by dying first\n";

                                                      } else {

                                                         if ( (deathmsg == 5.000) ) {

                                                            deathstring = " eats ";
                                                            deathstring2 = "'s pineapple\n";
                                                            if ( (targ.health < -40.000) ) {

                                                               deathstring = " was gibbed by ";
                                                               deathstring2 = "'s grenade\n";

                                                            }

                                                         } else {

                                                            if ( (deathmsg == 6.000) ) {

                                                               deathstring = " rides ";
                                                               deathstring2 = "'s rocket\n";
                                                               if ( (targ.health < -40.000) ) {

                                                                  deathstring = " was gibbed by ";
                                                                  deathstring2 = "'s rocket\n";

                                                               }

                                                            } else {

                                                               if ( (deathmsg == 15.000) ) {

                                                                  if ( (rnum < 0.200) ) {

                                                                     deathstring = " is burnt up by ";
                                                                     deathstring2 = "'s flame\n";

                                                                  } else {

                                                                     if ( (rnum < 0.400) ) {

                                                                        deathstring = " is fried by ";
                                                                        deathstring2 = "'s fire\n";

                                                                     } else {

                                                                        if ( (rnum < 0.600) ) {

                                                                           deathstring = " feels ";
                                                                           deathstring2 = "'s fire of wrath\n";

                                                                        } else {

                                                                           if ( (rnum < 0.800) ) {

                                                                              deathstring = " is reduced to ashes by ";
                                                                              deathstring2 = "\n";

                                                                           } else {

                                                                              deathstring = " is grilled by ";
                                                                              deathstring2 = "'s flame\n";

                                                                           }

                                                                        }

                                                                     }

                                                                  }

                                                               } else {

                                                                  if ( (deathmsg == 17.000) ) {

                                                                     deathstring2 = "\n";
                                                                     if ( (attacker.playerclass == 8.000) ) {

                                                                        deathstring = " was knife-murdered by ";

                                                                     } else {

                                                                        if ( (attacker.playerclass == 1.000) ) {

                                                                           deathstring = "'s mellon was split by ";

                                                                        } else {

                                                                           if ( (attacker.playerclass == 2.000) ) {

                                                                              deathstring = " was put on the chop block by ";

                                                                           } else {

                                                                              if ( (attacker.playerclass == 3.000) ) {

                                                                                 deathstring = " was sliced and diced by ";
                                                                                 deathstring2 = "'s blade\n";

                                                                              } else {

                                                                                 if ( (attacker.playerclass == 4.000) ) {

                                                                                    deathstring = " is split from crotch to sternum by ";
                                                                                    deathstring2 = "'s axe swing\n";

                                                                                 } else {

                                                                                    if ( (attacker.playerclass == 6.000) ) {

                                                                                       deathstring = " is split in two with a powerful axe blow from ";

                                                                                    } else {

                                                                                       if ( (attacker.playerclass == 7.000) ) {

                                                                                          deathstring = "'s death put another notch on ";
                                                                                          deathstring2 = "'s axe\n";

                                                                                       } else {

                                                                                          deathstring = " was ax-murdered by ";

                                                                                       }

                                                                                    }

                                                                                 }

                                                                              }

                                                                           }

                                                                        }

                                                                     }

                                                                  } else {

                                                                     if ( (deathmsg == 32.000) ) {

                                                                        deathstring = " was spanner-murdered by ";
                                                                        deathstring2 = "\n";

                                                                     } else {

                                                                        if ( (deathmsg == 1.000) ) {

                                                                           if ( (attacker.playerclass == 1.000) ) {

                                                                              deathstring = " got too close to ";
                                                                              deathstring2 = "'s muzzleflash\n";

                                                                           } else {

                                                                              if ( (attacker.playerclass == 3.000) ) {

                                                                                 deathstring = " practices being ";
                                                                                 deathstring2 = "'s clay pigeon\n";

                                                                              } else {

                                                                                 if ( (attacker.playerclass == 4.000) ) {

                                                                                    deathstring = " was on the receiving end of ";
                                                                                    deathstring2 = "'s shotgun barrel\n";

                                                                                 } else {

                                                                                    if ( (attacker.playerclass == 5.000) ) {

                                                                                       deathstring = " was fed a lead diet by ";
                                                                                       deathstring2 = "\n";

                                                                                    } else {

                                                                                       if ( (attacker.playerclass == 6.000) ) {

                                                                                          deathstring = " got blasted by ";
                                                                                          deathstring2 = "'s last resort\n";

                                                                                       } else {

                                                                                          if ( (attacker.playerclass == 7.000) ) {

                                                                                             deathstring = " got more than a powderburn from ";
                                                                                             deathstring2 = "'s shotgun blast\n";

                                                                                          } else {

                                                                                             deathstring = " chewed on ";
                                                                                             deathstring2 = "'s boomstick\n";

                                                                                          }

                                                                                       }

                                                                                    }

                                                                                 }

                                                                              }

                                                                           }

                                                                        } else {

                                                                           if ( (deathmsg == 2.000) ) {

                                                                              if ( (attacker.playerclass == 3.000) ) {

                                                                                 deathstring = " was turned into swiss cheese by ";
                                                                                 deathstring2 = "'s buckshot\n";

                                                                              } else {

                                                                                 if ( (attacker.playerclass == 5.000) ) {

                                                                                    deathstring = " got a double-dose of ";
                                                                                    deathstring2 = "'s buckshot\n";

                                                                                 } else {

                                                                                    if ( (attacker.playerclass == 6.000) ) {

                                                                                       deathstring = " unfortunately forgot ";
                                                                                       deathstring2 = " carried a super-shotgun\n";

                                                                                    } else {

                                                                                       if ( (attacker.playerclass == 8.000) ) {

                                                                                          deathstring = " gets ventilated by ";
                                                                                          deathstring2 = "'s super-shotgun blast\n";

                                                                                       } else {

                                                                                          if ( (attacker.playerclass == 9.000) ) {

                                                                                             deathstring = "'s body got chuck full of ";
                                                                                             deathstring2 = "'s lead pellets\n";

                                                                                          } else {

                                                                                             deathstring = " ate 2 loads of ";
                                                                                             deathstring2 = "'s buckshot\n";

                                                                                          }

                                                                                       }

                                                                                    }

                                                                                 }

                                                                              }

                                                                           } else {

                                                                              if ( (deathmsg == 3.000) ) {

                                                                                 if ( (attacker.playerclass == 1.000) ) {

                                                                                    deathstring = " caught one too many nails from ";
                                                                                    deathstring2 = "\n";

                                                                                 } else {

                                                                                    if ( (attacker.playerclass == 2.000) ) {

                                                                                       deathstring = " ran into ";
                                                                                       deathstring2 = "'s nails\n";

                                                                                    } else {

                                                                                       if ( (attacker.playerclass == 8.000) ) {

                                                                                          deathstring = " was turned into ";
                                                                                          deathstring2 = "'s pin-cushion\n";

                                                                                       } else {

                                                                                          deathstring = " was nailed by ";
                                                                                          deathstring2 = "\n";

                                                                                       }

                                                                                    }

                                                                                 }

                                                                              } else {

                                                                                 if ( (deathmsg == 4.000) ) {

                                                                                    deathstring = " was punctured by ";
                                                                                    deathstring2 = "\n";

                                                                                 } else {

                                                                                    if ( (deathmsg == 7.000) ) {

                                                                                       deathstring = " accepts ";
                                                                                       if ( (attacker.waterlevel > 1.000) ) {

                                                                                          deathstring2 = "'s discharge\n";

                                                                                       } else {

                                                                                          deathstring2 = "'s shaft\n";

                                                                                       }

                                                                                    } else {

                                                                                       if ( (deathmsg == 21.000) ) {

                                                                                          deathstring = " grappled with ";
                                                                                          deathstring2 = "\n";

                                                                                       } else {

                                                                                          if ( (deathmsg == 18.000) ) {

                                                                                             if ( (rnum <= 0.300) ) {

                                                                                                deathstring = " takes a bullet in the chest from ";
                                                                                                deathstring2 = "\n";

                                                                                             } else {

                                                                                                deathstring = " succumbs to sniperfire from ";
                                                                                                deathstring2 = "\n";

                                                                                             }

                                                                                          } else {

                                                                                             if ( (deathmsg == 29.000) ) {

                                                                                                if ( (rnum <= 0.500) ) {

                                                                                                   deathstring = " gets a third eye from ";
                                                                                                   deathstring2 = "\n";

                                                                                                } else {

                                                                                                   deathstring = " gets his head blown off by ";
                                                                                                   deathstring2 = "\n";

                                                                                                }

                                                                                             } else {

                                                                                                if ( (deathmsg == 28.000) ) {

                                                                                                   if ( (rnum <= 0.500) ) {

                                                                                                      deathstring = " is made legless by ";
                                                                                                      deathstring2 = "\n";

                                                                                                   } else {

                                                                                                      deathstring = " gets his legs blown off by ";
                                                                                                      deathstring2 = "\n";

                                                                                                   }

                                                                                                } else {

                                                                                                   if ( (deathmsg == 19.000) ) {

                                                                                                      deathstring = " collects ";
                                                                                                      deathstring2 = "'s bullet spray.\n";

                                                                                                   } else {

                                                                                                      if ( (deathmsg == 20.000) ) {

                                                                                                         deathstring = " gets sawn in half by ";
                                                                                                         deathstring2 = "\n";

                                                                                                      } else {

                                                                                                         if ( (deathmsg == 22.000) ) {

                                                                                                            deathstring = " gets knifed from behind by ";
                                                                                                            deathstring2 = "\n";

                                                                                                         } else {

                                                                                                            if ( (deathmsg == 25.000) ) {

                                                                                                               deathstring = " is put to sleep by ";
                                                                                                               deathstring2 = "\n";

                                                                                                            } else {

                                                                                                               if ( (deathmsg == 26.000) ) {

                                                                                                                  deathstring = " gets a hole in his heart from ";
                                                                                                                  deathstring2 = "'s railgun\n";

                                                                                                               } else {

                                                                                                                  if ( (deathmsg == 33.000) ) {

                                                                                                                     deathstring = " gets well done by ";
                                                                                                                     deathstring2 = "'s incendiary rocket\n";

                                                                                                                  } else {

                                                                                                                     if ( (deathmsg == 38.000) ) {

                                                                                                                        deathstring = " gets destroyed by ";
                                                                                                                        deathstring2 = "'s exploding sentrygun\n";

                                                                                                                     } else {

                                                                                                                        if ( (deathmsg == 39.000) ) {

                                                                                                                           deathstring = " didn't insert the correct change into ";
                                                                                                                           deathstring2 = "'s dispenser.\n";

                                                                                                                        }

                                                                                                                     }

                                                                                                                  }

                                                                                                               }

                                                                                                            }

                                                                                                         }

                                                                                                      }

                                                                                                   }

                                                                                                }

                                                                                             }

                                                                                          }

                                                                                       }

                                                                                    }

                                                                                 }

                                                                              }

                                                                           }

                                                                        }

                                                                     }

                                                                  }

                                                               }

                                                            }

                                                         }

                                                      }

                                                   }

                                                }

                                             }

                                          }

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }
               bprint (1.000,targ.netname);
               bprint (1.000,deathstring);
               bprint (1.000,attacker.netname);
               bprint (1.000,deathstring2);

            }

         }
         return ;

      } else {

         if ( (attacker.classname == "building_sentrygun") ) {

            if ( (targ == attacker.real_owner) ) {

               if ( (deathmsg == 34.000) ) {

                  deathstring = " intercepts his sentry gun's rocket\n";

               } else {

                  if ( (deathmsg == 27.000) ) {

                     deathstring = " crossed his sentry gun's line of fire\n";

                  }

               }
               bprint (1.000,targ.netname);
               bprint (1.000,deathstring);

            } else {

               if ( ((teamplay && (attacker.team_no == targ.team_no)) && (attacker.team_no > 0.000)) ) {

                  bprint (1.000,targ.netname);
                  bprint (1.000," obstructs his team's sentry gun\n");

               } else {

                  TF_AddFrags (attacker.real_owner,1.000);
                  if ( (deathmsg == 34.000) ) {

                     deathstring = " hates ";
                     deathstring2 = "'s sentry gun\n";

                  } else {

                     if ( (deathmsg == 27.000) ) {

                        deathstring = " is mown down by ";
                        deathstring2 = "'s sentry gun\n";

                     }

                  }
                  bprint (1.000,targ.netname);
                  bprint (1.000,deathstring);
                  bprint (1.000,attacker.real_owner.netname);
                  bprint (1.000,deathstring2);

               }

            }

         } else {

            TF_AddFrags (targ,-1.000);
            rnum = targ.watertype;
            bprint (2.000,targ.netname);
            if ( (rnum == -3.000) ) {

               if ( (random () < 0.500) ) {

                  deathstring = " sleeps with the fishes\n";

               } else {

                  deathstring = " sucks it down\n";

               }

            } else {

               if ( (rnum == -4.000) ) {

                  if ( (random () < 0.500) ) {

                     deathstring = " gulped a load of slime\n";

                  } else {

                     deathstring = " can't exist on slime alone\n";

                  }

               } else {

                  if ( (rnum == -5.000) ) {

                     if ( (targ.health < -15.000) ) {

                        deathstring = " burst into flames\n";

                     } else {

                        if ( (random () < 0.500) ) {

                           deathstring = " turned into hot slag\n";

                        } else {

                           deathstring = " visits the Volcano God\n";

                        }

                     }

                  } else {

                     if ( (attacker.flags & 32.000) ) {

                        if ( (attacker.classname == "monster_army") ) {

                           deathstring = " was shot by a Grunt\n";

                        } else {

                           if ( (attacker.classname == "monster_demon1") ) {

                              deathstring = " was eviscerated by a Fiend\n";

                           } else {

                              if ( (attacker.classname == "monster_dog") ) {

                                 deathstring = " was mauled by a Rottweiler\n";

                              } else {

                                 if ( (attacker.classname == "monster_dragon") ) {

                                    deathstring = " was fried by a Dragon\n";

                                 } else {

                                    if ( (attacker.classname == "monster_enforcer") ) {

                                       deathstring = " was blasted by an Enforcer\n";

                                    } else {

                                       if ( (attacker.classname == "monster_fish") ) {

                                          deathstring = " was fed to the Rotfish\n";

                                       } else {

                                          if ( (attacker.classname == "monster_hell_knight") ) {

                                             deathstring = " was slain by a Death Knight\n";

                                          } else {

                                             if ( (attacker.classname == "monster_knight") ) {

                                                deathstring = " was slashed by a Knight\n";

                                             } else {

                                                if ( (attacker.classname == "monster_ogre") ) {

                                                   deathstring = " was destroyed by an Ogre\n";

                                                } else {

                                                   if ( (attacker.classname == "monster_oldone") ) {

                                                      deathstring = " became one with Shub-Niggurath\n";

                                                   } else {

                                                      if ( (attacker.classname == "monster_shalrath") ) {

                                                         deathstring = " was exploded by a Vore\n";

                                                      } else {

                                                         if ( (attacker.classname == "monster_shambler") ) {

                                                            deathstring = " was smashed by a Shambler\n";

                                                         } else {

                                                            if ( (attacker.classname == "monster_tarbaby") ) {

                                                               deathstring = " was slimed by a Spawn\n";

                                                            } else {

                                                               if ( (attacker.classname == "monster_vomit") ) {

                                                                  deathstring = " was vomited on by a Vomitus\n";

                                                               } else {

                                                                  if ( (attacker.classname == "monster_wizard") ) {

                                                                     deathstring = " was scragged by a Scrag\n";

                                                                  } else {

                                                                     if ( (attacker.classname == "monster_zombie") ) {

                                                                        deathstring = " joins the Zombies\n";

                                                                     }

                                                                  }

                                                               }

                                                            }

                                                         }

                                                      }

                                                   }

                                                }

                                             }

                                          }

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     } else {

                        if ( (attacker.classname == "explo_box") ) {

                           deathstring = " blew up\n";

                        } else {

                           if ( ((attacker.solid == 4.000) && (attacker != world)) ) {

                              deathstring = " was squished\n";

                           } else {

                              if ( (targ.deathtype == "falling") ) {

                                 targ.deathtype = string_null;
                                 deathstring = " fell to his death\n";

                              } else {

                                 if ( ((attacker.classname == "trap_shooter") || (attacker.classname == "trap_spikeshooter")) ) {

                                    deathstring = " was spiked\n";

                                 } else {

                                    if ( (attacker.classname == "fireball") ) {

                                       deathstring = " ate a lavaball\n";

                                    } else {

                                       if ( (attacker.classname == "trigger_changelevel") ) {

                                          deathstring = " tried to leave\n";

                                       } else {

                                          deathstring = " died\n";

                                       }

                                    }

                                 }

                              }

                           }

                        }

                     }

                  }

               }

            }
            bprint (1.000,deathstring);

         }

      }

   } else {

      if ( (targ.classname == "building_sentrygun") ) {

         if ( (attacker.classname == "teledeath") ) {

            bprint (1.000,targ.real_owner.netname);
            bprint (1.000,"'s sentrygun was telefragged by ");
            bprint (1.000,attacker.owner.netname);
            bprint (1.000,"\n");
            return ;

         }
         if ( (attacker.classname == "player") ) {

            if ( (attacker == targ.real_owner) ) {

               bprint (1.000,targ.real_owner.netname);
               bprint (1.000," destroys his sentrygun\n");
               return ;

            }
            bprint (1.000,targ.real_owner.netname);
            bprint (1.000,"'s sentrygun was destroyed by ");
            bprint (1.000,attacker.netname);
            bprint (1.000,"\n");
            if ( ((attacker.team_no > 0.000) && (attacker.team_no == targ.real_owner.team_no)) ) {

               TF_AddFrags (attacker,-1.000);
               attacker.teamkills = (attacker.teamkills + 1.000);
               CheckAutoKick (attacker);

            } else {

               TF_AddFrags (attacker,1.000);

            }
            return ;

         }

      } else {

         if ( (targ.classname == "building_dispenser") ) {

            if ( ((attacker.team_no > 0.000) && (attacker.team_no == targ.real_owner.team_no)) ) {

               TF_AddFrags (attacker,-1.000);
               attacker.teamkills = (attacker.teamkills + 1.000);
               CheckAutoKick (attacker);

            }

         }

      }

   }

};
