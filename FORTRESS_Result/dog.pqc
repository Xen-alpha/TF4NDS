
void () dog_leap1;

void () dog_run1;

void () dog_bite = {

   local vector delta;
   local float ldmg;

   if ( !self.enemy ) {

      return ;

   }
   ai_charge (10.000);
   if ( !CanDamage (self.enemy,self) ) {

      return ;

   }
   delta = (self.enemy.origin - self.origin);
   if ( (vlen (delta) > 100.000) ) {

      return ;

   }
   ldmg = (((random () + random ()) + random ()) * 8.000);
   T_Damage (self.enemy,self,self,ldmg);

};

void () Dog_JumpTouch = {

   local float ldmg;

   if ( (self.health <= 0.000) ) {

      return ;

   }
   if ( other.takedamage ) {

      if ( (vlen (self.velocity) > 300.000) ) {

         ldmg = (10.000 + (10.000 * random ()));
         T_Damage (other,self,self,ldmg);

      }

   }
   if ( !checkbottom (self) ) {

      if ( (self.flags & 512.000) ) {

         self.touch = SUB_Null;
         self.think = dog_leap1;
         self.nextthink = (time + 0.100);

      }
      return ;

   }
   self.touch = SUB_Null;
   self.think = dog_run1;
   self.nextthink = (time + 0.100);

};

void () dog_stand1 = [ 69.000, dog_stand2 ] {

   ai_stand ();

};

void () dog_stand2 = [ 70.000, dog_stand3 ] {

   ai_stand ();

};

void () dog_stand3 = [ 71.000, dog_stand4 ] {

   ai_stand ();

};

void () dog_stand4 = [ 72.000, dog_stand5 ] {

   ai_stand ();

};

void () dog_stand5 = [ 73.000, dog_stand6 ] {

   ai_stand ();

};

void () dog_stand6 = [ 74.000, dog_stand7 ] {

   ai_stand ();

};

void () dog_stand7 = [ 75.000, dog_stand8 ] {

   ai_stand ();

};

void () dog_stand8 = [ 76.000, dog_stand9 ] {

   ai_stand ();

};

void () dog_stand9 = [ 77.000, dog_stand1 ] {

   ai_stand ();

};

void () dog_walk1 = [ 78.000, dog_walk2 ] {

   if ( (random () < 0.200) ) {

      sound (self,2.000,"dog/idle.wav",1.000,2.000);

   }
   ai_walk (8.000);

};

void () dog_walk2 = [ 79.000, dog_walk3 ] {

   ai_walk (8.000);

};

void () dog_walk3 = [ 80.000, dog_walk4 ] {

   ai_walk (8.000);

};

void () dog_walk4 = [ 81.000, dog_walk5 ] {

   ai_walk (8.000);

};

void () dog_walk5 = [ 82.000, dog_walk6 ] {

   ai_walk (8.000);

};

void () dog_walk6 = [ 83.000, dog_walk7 ] {

   ai_walk (8.000);

};

void () dog_walk7 = [ 84.000, dog_walk8 ] {

   ai_walk (8.000);

};

void () dog_walk8 = [ 85.000, dog_walk1 ] {

   ai_walk (8.000);

};

void () dog_run1 = [ 48.000, dog_run2 ] {

   if ( (random () < 0.200) ) {

      sound (self,2.000,"dog/idle.wav",1.000,2.000);

   }
   ai_run (16.000);

};

void () dog_run2 = [ 49.000, dog_run3 ] {

   ai_run (32.000);

};

void () dog_run3 = [ 50.000, dog_run4 ] {

   ai_run (32.000);

};

void () dog_run4 = [ 51.000, dog_run5 ] {

   ai_run (20.000);

};

void () dog_run5 = [ 52.000, dog_run6 ] {

   ai_run (64.000);

};

void () dog_run6 = [ 53.000, dog_run7 ] {

   ai_run (32.000);

};

void () dog_run7 = [ 54.000, dog_run8 ] {

   ai_run (16.000);

};

void () dog_run8 = [ 55.000, dog_run9 ] {

   ai_run (32.000);

};

void () dog_run9 = [ 56.000, dog_run10 ] {

   ai_run (32.000);

};

void () dog_run10 = [ 57.000, dog_run11 ] {

   ai_run (20.000);

};

void () dog_run11 = [ 58.000, dog_run12 ] {

   ai_run (64.000);

};

void () dog_run12 = [ 59.000, dog_run1 ] {

   ai_run (32.000);

};

void () dog_atta1 = [ 0.000, dog_atta2 ] {

   ai_charge (10.000);

};

void () dog_atta2 = [ 1.000, dog_atta3 ] {

   ai_charge (10.000);

};

void () dog_atta3 = [ 2.000, dog_atta4 ] {

   ai_charge (10.000);

};

void () dog_atta4 = [ 3.000, dog_atta5 ] {

   sound (self,2.000,"dog/dattack1.wav",1.000,1.000);
   dog_bite ();

};

void () dog_atta5 = [ 4.000, dog_atta6 ] {

   ai_charge (10.000);

};

void () dog_atta6 = [ 5.000, dog_atta7 ] {

   ai_charge (10.000);

};

void () dog_atta7 = [ 6.000, dog_atta8 ] {

   ai_charge (10.000);

};

void () dog_atta8 = [ 7.000, dog_run1 ] {

   ai_charge (10.000);

};

void () dog_leap1 = [ 60.000, dog_leap2 ] {

   ai_face ();

};

void () dog_leap2 = [ 61.000, dog_leap3 ] {

   ai_face ();
   self.touch = Dog_JumpTouch;
   makevectors (self.angles);
   self.origin_z = (self.origin_z + 1.000);
   self.velocity = ((v_forward * 300.000) + '0.000 0.000 200.000');
   if ( (self.flags & 512.000) ) {

      self.flags = (self.flags - 512.000);

   }

};

void () dog_leap3 = [ 62.000, dog_leap4 ] {


};

void () dog_leap4 = [ 63.000, dog_leap5 ] {


};

void () dog_leap5 = [ 64.000, dog_leap6 ] {


};

void () dog_leap6 = [ 65.000, dog_leap7 ] {


};

void () dog_leap7 = [ 66.000, dog_leap8 ] {


};

void () dog_leap8 = [ 67.000, dog_leap9 ] {


};

void () dog_leap9 = [ 68.000, dog_leap9 ] {


};

void () dog_pain1 = [ 26.000, dog_pain2 ] {


};

void () dog_pain2 = [ 27.000, dog_pain3 ] {


};

void () dog_pain3 = [ 28.000, dog_pain4 ] {


};

void () dog_pain4 = [ 29.000, dog_pain5 ] {


};

void () dog_pain5 = [ 30.000, dog_pain6 ] {


};

void () dog_pain6 = [ 31.000, dog_run1 ] {


};

void () dog_painb1 = [ 32.000, dog_painb2 ] {


};

void () dog_painb2 = [ 33.000, dog_painb3 ] {


};

void () dog_painb3 = [ 34.000, dog_painb4 ] {

   ai_pain (4.000);

};

void () dog_painb4 = [ 35.000, dog_painb5 ] {

   ai_pain (12.000);

};

void () dog_painb5 = [ 36.000, dog_painb6 ] {

   ai_pain (12.000);

};

void () dog_painb6 = [ 37.000, dog_painb7 ] {

   ai_pain (2.000);

};

void () dog_painb7 = [ 38.000, dog_painb8 ] {


};

void () dog_painb8 = [ 39.000, dog_painb9 ] {

   ai_pain (4.000);

};

void () dog_painb9 = [ 40.000, dog_painb10 ] {


};

void () dog_painb10 = [ 41.000, dog_painb11 ] {

   ai_pain (10.000);

};

void () dog_painb11 = [ 42.000, dog_painb12 ] {


};

void () dog_painb12 = [ 43.000, dog_painb13 ] {


};

void () dog_painb13 = [ 44.000, dog_painb14 ] {


};

void () dog_painb14 = [ 45.000, dog_painb15 ] {


};

void () dog_painb15 = [ 46.000, dog_painb16 ] {


};

void () dog_painb16 = [ 47.000, dog_run1 ] {


};

void () dog_pain = {

   sound (self,2.000,"dog/dpain1.wav",1.000,1.000);
   if ( (random () > 0.500) ) {

      dog_pain1 ();

   } else {

      dog_painb1 ();

   }

};

void () dog_die1 = [ 8.000, dog_die2 ] {


};

void () dog_die2 = [ 9.000, dog_die3 ] {


};

void () dog_die3 = [ 10.000, dog_die4 ] {


};

void () dog_die4 = [ 11.000, dog_die5 ] {


};

void () dog_die5 = [ 12.000, dog_die6 ] {


};

void () dog_die6 = [ 13.000, dog_die7 ] {


};

void () dog_die7 = [ 14.000, dog_die8 ] {


};

void () dog_die8 = [ 15.000, dog_die9 ] {


};

void () dog_die9 = [ 16.000, dog_die9 ] {


};

void () dog_dieb1 = [ 17.000, dog_dieb2 ] {


};

void () dog_dieb2 = [ 18.000, dog_dieb3 ] {


};

void () dog_dieb3 = [ 19.000, dog_dieb4 ] {


};

void () dog_dieb4 = [ 20.000, dog_dieb5 ] {


};

void () dog_dieb5 = [ 21.000, dog_dieb6 ] {


};

void () dog_dieb6 = [ 22.000, dog_dieb7 ] {


};

void () dog_dieb7 = [ 23.000, dog_dieb8 ] {


};

void () dog_dieb8 = [ 24.000, dog_dieb9 ] {


};

void () dog_dieb9 = [ 25.000, dog_dieb9 ] {


};

void () monster_dog_respawn;

void () dog_die = {

   self.oldorigin = self.origin;
   if ( (self.health < -35.000) ) {

      sound (self,2.000,"player/udeath.wav",1.000,1.000);
      ThrowGib ("progs/gib3.mdl",self.health);
      ThrowGib ("progs/gib3.mdl",self.health);
      ThrowGib ("progs/gib3.mdl",self.health);
      ThrowHead ("progs/h_dog.mdl",self.health);
      self.lives = (self.lives - 1.000);
      monster_dog_respawn ();
      return ;

   }
   sound (self,2.000,"dog/ddeath.wav",1.000,1.000);
   self.solid = 0.000;
   if ( (random () > 0.500) ) {

      dog_die1 ();

   } else {

      dog_dieb1 ();

   }
   monster_dog_respawn ();

};
float () CheckDogMelee = {

   if ( (enemy_range == 0.000) ) {

      self.attack_state = 3.000;
      return ( 1.000 );

   }
   return ( 0.000 );

};
float () CheckDogJump = {

   local vector dist;
   local float d;

   if ( ((self.origin_z + self.mins_z) > ((self.enemy.origin_z + self.enemy.mins_z) + (0.750 * self.enemy.size_z))) ) {

      return ( 0.000 );

   }
   if ( ((self.origin_z + self.maxs_z) < ((self.enemy.origin_z + self.enemy.mins_z) + (0.250 * self.enemy.size_z))) ) {

      return ( 0.000 );

   }
   dist = (self.enemy.origin - self.origin);
   dist_z = 0.000;
   d = vlen (dist);
   if ( (d < 80.000) ) {

      return ( 0.000 );

   }
   if ( (d > 150.000) ) {

      return ( 0.000 );

   }
   return ( 1.000 );

};
float () DogCheckAttack = {

   local vector vec;

   if ( CheckDogMelee () ) {

      self.attack_state = 3.000;
      return ( 1.000 );

   }
   if ( CheckDogJump () ) {

      self.attack_state = 4.000;
      return ( 1.000 );

   }
   return ( 0.000 );

};

void () monster_dog = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }
   if ( deathmatch ) {

      dremove (self);
      return ;

   }
   precache_model ("progs/h_dog.mdl");
   precache_model ("progs/dog.mdl");
   precache_sound ("dog/dattack1.wav");
   precache_sound ("dog/ddeath.wav");
   precache_sound ("dog/dpain1.wav");
   precache_sound ("dog/dsight.wav");
   precache_sound ("dog/idle.wav");
   self.solid = 3.000;
   self.movetype = 4.000;
   setmodel (self,"progs/dog.mdl");
   setsize (self,'-32.000 -32.000 -24.000','32.000 32.000 40.000');
   self.health = 25.000;
   self.th_stand = dog_stand1;
   self.th_walk = dog_walk1;
   self.th_run = dog_run1;
   self.th_pain = dog_pain;
   self.th_die = dog_die;
   self.th_melee = dog_atta1;
   self.th_missile = dog_leap1;
   walkmonster_start ();

};

void () respawn_dog = {

   self = self.owner;
   self.origin = self.oldorigin;
   spawn_tfog (self.origin);
   spawn_tdeath (self.origin,self);
   setorigin (self,self.origin);
   self.solid = 3.000;
   self.movetype = 4.000;
   self.takedamage = 2.000;
   setmodel (self,"progs/dog.mdl");
   setsize (self,'-32.000 -32.000 -24.000','32.000 32.000 40.000');
   self.health = 25.000;
   self.oldorigin = self.origin;
   self.target = string_null;
   HuntTarget ();
   dremove (self.owner);

};

void () monster_dog_respawn = {

   local entity resp;

   if ( (self.lives <= 0.500) ) {

      return ;

   }
   self.lives = (self.lives - 1.000);
   resp = spawn ();
   self.owner = resp;
   resp.owner = self;
   resp.think = respawn_dog;
   resp.nextthink = (time + 10.000);

};
