
void () SniperSight_Update;

void () TeamFortress_SniperWeapon = {

   local float it;

   self.impulse = 0.000;
   if ( (self.tfstate & 2.000) ) {

      return ;

   }
   if ( !((self.weapons_carried & 32.000) && (self.weapons_carried & 64.000)) ) {

      return ;

   }
   if ( (self.ammo_shells < 1.000) ) {

      sprint (self,2.000,"not enough ammo.\n");
      return ;

   }
   if ( (self.current_weapon == 32.000) ) {

      self.current_weapon = 64.000;

   } else {

      self.current_weapon = 32.000;

   }
   W_SetCurrentAmmo ();

};

void (float zoom_level) TF_zoom = {

   local string zl;

   if ( (self.tfstate & 4096.000) ) {

      return ;

   }
   zl = ftos (zoom_level);
   stuffcmd (self,"fov ");
   stuffcmd (self,zl);
   stuffcmd (self,"\n");

};

void () SniperSight_Update = {

   local vector org;

   if ( (!(self.owner.tfstate & 2048.000) || (self.owner.current_weapon != 32.000)) ) {

      self.owner.tfstate = (self.owner.tfstate - (self.owner.tfstate & 2048.000));
      TeamFortress_SetSpeed (self.owner);
      self.owner.heat = 0.000;
      dremove (self);
      return ;

   }
   makevectors (self.owner.v_angle);
   org = (self.owner.origin + (v_forward * 10.000));
   org_z = (self.owner.absmin_z + (self.owner.size_z * 0.700));
   traceline (org,(org + (v_forward * 9192.000)),0.000,self);
   if ( (trace_fraction == 1.000) ) {

      setorigin (self,self.owner.origin);
      return ;

   }
   self.angles = vectoangles (v_forward);
   setorigin (self,trace_endpos);
   self.nextthink = (time + 0.100);

};

void () SniperSight_Create = {

   local entity sight;

   if ( (self.has_disconnected == 1.000) ) {

      return ;

   }
   self.tfstate = (self.tfstate | 2048.000);
   sight = spawn ();
   sight.owner = self;
   sight.movetype = 8.000;
   sight.solid = 0.000;
   setmodel (sight,"progs/sight.spr");
   sight.classname = "timer";
   setorigin (sight,self.origin);
   sight.think = SniperSight_Update;
   sight.nextthink = (time + 0.050);

};

void () TeamFortress_AutoZoomToggle = {

   if ( (self.tfstate & 4096.000) ) {

      self.tfstate = (self.tfstate - 4096.000);
      sprint (self,2.000,"autozoom ON\n");

   } else {

      self.tfstate = (self.tfstate | 4096.000);
      sprint (self,2.000,"autozoom OFF\n");

   }

};
