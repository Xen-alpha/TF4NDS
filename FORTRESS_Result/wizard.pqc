
void (entity missile, float mspeed, float accuracy) LaunchMissile = {

   local vector vec;
   local vector move;
   local float fly;

   makevectors (self.angles);
   vec = (((self.enemy.origin + self.enemy.mins) + (self.enemy.size * 0.700)) - missile.origin);
   fly = (vlen (vec) / mspeed);
   move = self.enemy.velocity;
   move_z = 0.000;
   vec = (vec + (move * fly));
   vec = normalize (vec);
   vec = ((vec + ((accuracy * v_up) * (random () - 0.500))) + ((accuracy * v_right) * (random () - 0.500)));
   missile.velocity = (vec * mspeed);
   missile.angles = '0.000 0.000 0.000';
   missile.angles_y = vectoyaw (missile.velocity);
   missile.nextthink = (time + 5.000);
   missile.think = SUB_Remove;

};

void () wiz_run1;

void () wiz_side1;
float () WizardCheckAttack = {

   local vector spot1;
   local vector spot2;
   local entity targ;
   local float chance;

   if ( (time < self.attack_finished) ) {

      return ( 0.000 );

   }
   if ( !enemy_vis ) {

      return ( 0.000 );

   }
   if ( (enemy_range == 3.000) ) {

      if ( (self.attack_state != 1.000) ) {

         self.attack_state = 1.000;
         wiz_run1 ();

      }
      return ( 0.000 );

   }
   targ = self.enemy;
   spot1 = (self.origin + self.view_ofs);
   spot2 = (targ.origin + targ.view_ofs);
   traceline (spot1,spot2,0.000,self);
   if ( (trace_ent != targ) ) {

      if ( (self.attack_state != 1.000) ) {

         self.attack_state = 1.000;
         wiz_run1 ();

      }
      return ( 0.000 );

   }
   if ( (enemy_range == 0.000) ) {

      chance = 0.900;

   } else {

      if ( (enemy_range == 1.000) ) {

         chance = 0.600;

      } else {

         if ( (enemy_range == 2.000) ) {

            chance = 0.200;

         } else {

            chance = 0.000;

         }

      }

   }
   if ( (random () < chance) ) {

      self.attack_state = 4.000;
      return ( 1.000 );

   }
   if ( (enemy_range == 2.000) ) {

      if ( (self.attack_state != 1.000) ) {

         self.attack_state = 1.000;
         wiz_run1 ();

      }

   } else {

      if ( (self.attack_state != 2.000) ) {

         self.attack_state = 2.000;
         wiz_side1 ();

      }

   }
   return ( 0.000 );

};

void () WizardAttackFinished = {

   if ( ((enemy_range >= 2.000) || !enemy_vis) ) {

      self.attack_state = 1.000;
      self.think = wiz_run1;

   } else {

      self.attack_state = 2.000;
      self.think = wiz_side1;

   }

};

void () Wiz_FastFire = {

   local vector vec;
   local vector dst;

   if ( (self.owner.health > 0.000) ) {

      muzzleflash ();
      makevectors (self.enemy.angles);
      dst = (self.enemy.origin - (13.000 * self.movedir));
      vec = normalize ((dst - self.origin));
      sound (self,1.000,"wizard/wattack.wav",1.000,1.000);
      launch_spike (self.origin,vec);
      newmis.velocity = (vec * 600.000);
      newmis.owner = self.owner;
      newmis.classname = "wizspike";
      setmodel (newmis,"progs/w_spike.mdl");
      setsize (newmis,'0.000 0.000 0.000','0.000 0.000 0.000');

   }
   remove (self);

};

void () Wiz_StartFast = {

   local entity missile;

   sound (self,1.000,"wizard/wattack.wav",1.000,1.000);
   self.v_angle = self.angles;
   makevectors (self.angles);
   missile = spawn ();
   missile.owner = self;
   missile.nextthink = (time + 0.600);
   setsize (missile,'0.000 0.000 0.000','0.000 0.000 0.000');
   setorigin (missile,(((self.origin + '0.000 0.000 30.000') + (v_forward * 14.000)) + (v_right * 14.000)));
   missile.enemy = self.enemy;
   missile.nextthink = (time + 0.800);
   missile.think = Wiz_FastFire;
   missile.movedir = v_right;
   missile = spawn ();
   missile.owner = self;
   missile.nextthink = (time + 1.000);
   setsize (missile,'0.000 0.000 0.000','0.000 0.000 0.000');
   setorigin (missile,(((self.origin + '0.000 0.000 30.000') + (v_forward * 14.000)) + (v_right * -14.000)));
   missile.enemy = self.enemy;
   missile.nextthink = (time + 0.300);
   missile.think = Wiz_FastFire;
   missile.movedir = ('0.000 0.000 0.000' - v_right);

};

void () Wiz_idlesound = {

   local float wr;

   wr = (random () * 5.000);
   if ( (self.waitmin < time) ) {

      self.waitmin = (time + 2.000);
      if ( (wr > 4.500) ) {

         sound (self,2.000,"wizard/widle1.wav",1.000,2.000);

      }
      if ( (wr < 1.500) ) {

         sound (self,2.000,"wizard/widle2.wav",1.000,2.000);

      }

   }
   return ;

};

void () wiz_stand1 = [ 0.000, wiz_stand2 ] {

   ai_stand ();

};

void () wiz_stand2 = [ 1.000, wiz_stand3 ] {

   ai_stand ();

};

void () wiz_stand3 = [ 2.000, wiz_stand4 ] {

   ai_stand ();

};

void () wiz_stand4 = [ 3.000, wiz_stand5 ] {

   ai_stand ();

};

void () wiz_stand5 = [ 4.000, wiz_stand6 ] {

   ai_stand ();

};

void () wiz_stand6 = [ 5.000, wiz_stand7 ] {

   ai_stand ();

};

void () wiz_stand7 = [ 6.000, wiz_stand8 ] {

   ai_stand ();

};

void () wiz_stand8 = [ 7.000, wiz_stand1 ] {

   ai_stand ();

};

void () wiz_walk1 = [ 0.000, wiz_walk2 ] {

   ai_walk (8.000);
   Wiz_idlesound ();

};

void () wiz_walk2 = [ 1.000, wiz_walk3 ] {

   ai_walk (8.000);

};

void () wiz_walk3 = [ 2.000, wiz_walk4 ] {

   ai_walk (8.000);

};

void () wiz_walk4 = [ 3.000, wiz_walk5 ] {

   ai_walk (8.000);

};

void () wiz_walk5 = [ 4.000, wiz_walk6 ] {

   ai_walk (8.000);

};

void () wiz_walk6 = [ 5.000, wiz_walk7 ] {

   ai_walk (8.000);

};

void () wiz_walk7 = [ 6.000, wiz_walk8 ] {

   ai_walk (8.000);

};

void () wiz_walk8 = [ 7.000, wiz_walk1 ] {

   ai_walk (8.000);

};

void () wiz_side1 = [ 0.000, wiz_side2 ] {

   ai_run (8.000);
   Wiz_idlesound ();

};

void () wiz_side2 = [ 1.000, wiz_side3 ] {

   ai_run (8.000);

};

void () wiz_side3 = [ 2.000, wiz_side4 ] {

   ai_run (8.000);

};

void () wiz_side4 = [ 3.000, wiz_side5 ] {

   ai_run (8.000);

};

void () wiz_side5 = [ 4.000, wiz_side6 ] {

   ai_run (8.000);

};

void () wiz_side6 = [ 5.000, wiz_side7 ] {

   ai_run (8.000);

};

void () wiz_side7 = [ 6.000, wiz_side8 ] {

   ai_run (8.000);

};

void () wiz_side8 = [ 7.000, wiz_side1 ] {

   ai_run (8.000);

};

void () wiz_run1 = [ 15.000, wiz_run2 ] {

   ai_run (16.000);
   Wiz_idlesound ();

};

void () wiz_run2 = [ 16.000, wiz_run3 ] {

   ai_run (16.000);

};

void () wiz_run3 = [ 17.000, wiz_run4 ] {

   ai_run (16.000);

};

void () wiz_run4 = [ 18.000, wiz_run5 ] {

   ai_run (16.000);

};

void () wiz_run5 = [ 19.000, wiz_run6 ] {

   ai_run (16.000);

};

void () wiz_run6 = [ 20.000, wiz_run7 ] {

   ai_run (16.000);

};

void () wiz_run7 = [ 21.000, wiz_run8 ] {

   ai_run (16.000);

};

void () wiz_run8 = [ 22.000, wiz_run9 ] {

   ai_run (16.000);

};

void () wiz_run9 = [ 23.000, wiz_run10 ] {

   ai_run (16.000);

};

void () wiz_run10 = [ 24.000, wiz_run11 ] {

   ai_run (16.000);

};

void () wiz_run11 = [ 25.000, wiz_run12 ] {

   ai_run (16.000);

};

void () wiz_run12 = [ 26.000, wiz_run13 ] {

   ai_run (16.000);

};

void () wiz_run13 = [ 27.000, wiz_run14 ] {

   ai_run (16.000);

};

void () wiz_run14 = [ 28.000, wiz_run1 ] {

   ai_run (16.000);

};

void () wiz_fast1 = [ 29.000, wiz_fast2 ] {

   ai_face ();
   Wiz_StartFast ();

};

void () wiz_fast2 = [ 30.000, wiz_fast3 ] {

   ai_face ();

};

void () wiz_fast3 = [ 31.000, wiz_fast4 ] {

   ai_face ();

};

void () wiz_fast4 = [ 32.000, wiz_fast5 ] {

   ai_face ();

};

void () wiz_fast5 = [ 33.000, wiz_fast6 ] {

   ai_face ();

};

void () wiz_fast6 = [ 34.000, wiz_fast7 ] {

   ai_face ();

};

void () wiz_fast7 = [ 33.000, wiz_fast8 ] {

   ai_face ();

};

void () wiz_fast8 = [ 32.000, wiz_fast9 ] {

   ai_face ();

};

void () wiz_fast9 = [ 31.000, wiz_fast10 ] {

   ai_face ();

};

void () wiz_fast10 = [ 30.000, wiz_run1 ] {

   ai_face ();
   SUB_AttackFinished (2.000);
   WizardAttackFinished ();

};

void () wiz_pain1 = [ 42.000, wiz_pain2 ] {


};

void () wiz_pain2 = [ 43.000, wiz_pain3 ] {


};

void () wiz_pain3 = [ 44.000, wiz_pain4 ] {


};

void () wiz_pain4 = [ 45.000, wiz_run1 ] {


};

void () wiz_death1 = [ 46.000, wiz_death2 ] {

   self.velocity_x = (-200.000 + (400.000 * random ()));
   self.velocity_y = (-200.000 + (400.000 * random ()));
   self.velocity_z = (100.000 + (100.000 * random ()));
   self.flags = (self.flags - (self.flags & 512.000));
   sound (self,2.000,"wizard/wdeath.wav",1.000,1.000);

};

void () wiz_death2 = [ 47.000, wiz_death3 ] {


};

void () wiz_death3 = [ 48.000, wiz_death4 ] {

   self.solid = 0.000;

};

void () wiz_death4 = [ 49.000, wiz_death5 ] {


};

void () wiz_death5 = [ 50.000, wiz_death6 ] {


};

void () wiz_death6 = [ 51.000, wiz_death7 ] {


};

void () wiz_death7 = [ 52.000, wiz_death8 ] {


};

void () wiz_death8 = [ 53.000, wiz_death8 ] {


};

void () monster_wizard_respawn;

void () wiz_die = {

   self.oldorigin = self.origin;
   if ( (self.health < -40.000) ) {

      sound (self,2.000,"player/udeath.wav",1.000,1.000);
      ThrowHead ("progs/h_wizard.mdl",self.health);
      ThrowGib ("progs/gib2.mdl",self.health);
      ThrowGib ("progs/gib2.mdl",self.health);
      ThrowGib ("progs/gib2.mdl",self.health);
      self.lives = (self.lives - 1.000);
      monster_wizard_respawn ();
      return ;

   }
   wiz_death1 ();
   monster_wizard_respawn ();

};

void (entity attacker, float damage) Wiz_Pain = {

   sound (self,2.000,"wizard/wpain.wav",1.000,1.000);
   if ( ((random () * 70.000) > damage) ) {

      return ;

   }
   wiz_pain1 ();

};

void () Wiz_Missile = {

   wiz_fast1 ();

};

void () monster_wizard = {

   if ( (CheckExistence () == 0.000) ) {

      dremove (self);
      return ;

   }
   if ( deathmatch ) {

      dremove (self);
      return ;

   }
   precache_model ("progs/wizard.mdl");
   precache_model ("progs/h_wizard.mdl");
   precache_model ("progs/w_spike.mdl");
   precache_sound ("wizard/hit.wav");
   precache_sound ("wizard/wattack.wav");
   precache_sound ("wizard/wdeath.wav");
   precache_sound ("wizard/widle1.wav");
   precache_sound ("wizard/widle2.wav");
   precache_sound ("wizard/wpain.wav");
   precache_sound ("wizard/wsight.wav");
   self.solid = 3.000;
   self.movetype = 4.000;
   setmodel (self,"progs/wizard.mdl");
   setsize (self,'-16.000 -16.000 -24.000','16.000 16.000 40.000');
   self.health = 80.000;
   self.th_stand = wiz_stand1;
   self.th_walk = wiz_walk1;
   self.th_run = wiz_run1;
   self.th_missile = Wiz_Missile;
   self.th_pain = Wiz_Pain;
   self.th_die = wiz_die;
   flymonster_start ();

};

void () respawn_wizard = {

   self = self.owner;
   self.origin = self.oldorigin;
   spawn_tfog (self.origin);
   spawn_tdeath (self.origin,self);
   setorigin (self,self.origin);
   self.solid = 3.000;
   self.movetype = 4.000;
   self.takedamage = 2.000;
   setmodel (self,"progs/wizard.mdl");
   setsize (self,'-16.000 -16.000 -24.000','16.000 16.000 40.000');
   self.health = 80.000;
   self.oldorigin = self.origin;
   self.target = string_null;
   HuntTarget ();
   dremove (self.owner);

};

void () monster_wizard_respawn = {

   local entity resp;

   if ( (self.lives <= 0.500) ) {

      return ;

   }
   self.lives = (self.lives - 1.000);
   resp = spawn ();
   self.owner = resp;
   resp.owner = self;
   resp.think = respawn_wizard;
   resp.nextthink = (time + 10.000);

};
